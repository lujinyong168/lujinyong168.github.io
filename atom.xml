<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>上海IT技术圈</title>
  
  <subtitle>上海IT技术</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sparkx.com.cn/"/>
  <updated>2019-12-17T23:44:25.613Z</updated>
  <id>http://sparkx.com.cn/</id>
  
  <author>
    <name>KN</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>zookeeper介绍和集群高可用的思考</title>
    <link href="http://sparkx.com.cn/zookeeper/zookeeper-ha/"/>
    <id>http://sparkx.com.cn/zookeeper/zookeeper-ha/</id>
    <published>2019-12-16T11:33:39.000Z</published>
    <updated>2019-12-17T23:44:25.613Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://zookeeper.apache.org/" target="_blank" rel="noopener">点击进入官网</a></p><h1 id="三种运行模式"><a href="#三种运行模式" class="headerlink" title="三种运行模式"></a>三种运行模式</h1><p>单机模式、伪集群模式和集群模式。</p><h3 id="单机模式"><a href="#单机模式" class="headerlink" title="单机模式"></a>单机模式</h3><p>单机模式一般适合开发测试环境，节约机器资源并且不需要考虑稳定性。</p><ul><li>安装Java环境(自行搜索jdk安装方法)</li><li>安装zookeeper<br><a href="http://zookeeper.apache.org/releases.html" target="_blank" rel="noopener">点击下载安装包</a></li><li>配置zoo.cfg<br>将下载的tar包解压后配置<code>$ZK_HOME</code>,然后将<code>$ZK_HOME</code>下的<code>zoo_sample.cfg</code>文件重命名为<code>zoo.cfg</code>，并进行以下配置<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tickTime</span>=<span class="number">2000</span>    <span class="comment">##Zookeeper最小时间单元，单位毫秒(ms)，默认值为3000</span></span><br><span class="line"><span class="attr">dataDir</span>=/var/lib/zookeeper    <span class="comment">##Zookeeper服务器存储快照文件的目录，必须配置</span></span><br><span class="line"><span class="attr">dataLogDir</span>=/var/lib/log     <span class="comment">##Zookeeper服务器存储事务日志的目录，默认为dataDir</span></span><br><span class="line"><span class="attr">clientPort</span>=<span class="number">2181</span>    <span class="comment">##服务器对外服务端口，一般设置为2181</span></span><br><span class="line"><span class="attr">initLimit</span>=<span class="number">5</span>    <span class="comment">##Leader服务器等待Follower启动并完成数据同步的时间，默认值10，表示tickTime的10倍</span></span><br><span class="line"><span class="attr">syncLimit</span>=<span class="number">2</span>    <span class="comment">##Leader服务器和Follower之间进行心跳检测的最大延时时间，默认值5，表示tickTime的5倍</span></span><br></pre></td></tr></table></figure></li><li>启动服务<br>使用<code>$ZK_HOME/bin</code>目录下的zkServer.sh脚本启动，如:<code>zkServer.sh start</code>。</li></ul><h3 id="集群模式"><a href="#集群模式" class="headerlink" title="集群模式"></a>集群模式</h3><p><strong>ip绑定到主机名称</strong><br>执行命令<code>sudo /etc/hosts</code>修改每台服务器的hosts文件,内容如下：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10.5.119.0</span> uat14475</span><br><span class="line"><span class="number">10.5.119.100</span> uat14476</span><br><span class="line"><span class="number">10.5.119.15</span> uat14477</span><br></pre></td></tr></table></figure><p>同样要安装好Java运行环境。<br>将下载好的zookeeper包<code>apache-zookeeper-3.5.6.tar.gz</code>上传到服务器/home/qateadmin目录，并执行命令<code>tar -zxvf apache-zookeeper-3.5.6.tar.gz</code>解压到当前目录。<br><strong>配置环境变量</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">ZK_HOME</span>=/home/qateadmin/apache-zookeeper-3.5.6</span><br><span class="line"><span class="attribute">PAT</span>=H$PATH:$HOME/.local/bin:$HOME/bin:$ZK_HOME/bin</span><br><span class="line"><span class="builtin-name">export</span> PATH</span><br></pre></td></tr></table></figure><p><strong>配置zookeeper集群</strong><br>进入$ZK_HOME/conf，执行命令<code>mv zoo.sample.cfg zoo.cfg</code>重命名配置，并编辑<code>zoo.cfg</code>文件修改配置参数如下，并保存。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tickTime</span>=<span class="number">2000</span></span><br><span class="line"><span class="attr">initLimit</span>=<span class="number">10</span></span><br><span class="line"><span class="attr">syncLimit</span>=<span class="number">5</span></span><br><span class="line"><span class="attr">dataDir</span>=/home/qateadmin/apache-zookeeper-<span class="number">3.5</span>.<span class="number">6</span>/zookeeper-data/data</span><br><span class="line"><span class="attr">dataLogDir</span>=/home/qateadmin/apache-zookeeper-<span class="number">3.5</span>.<span class="number">6</span>/zookeeper-data/log</span><br><span class="line"><span class="attr">clientPort</span>=<span class="number">2181</span></span><br><span class="line"><span class="attr">server.1</span>=uat14475:<span class="number">2888</span>:<span class="number">3888</span></span><br><span class="line"><span class="attr">server.2</span>=uat14476:<span class="number">2888</span>:<span class="number">3888</span></span><br><span class="line"><span class="attr">server.3</span>=uat14477:<span class="number">2888</span>:<span class="number">3888</span></span><br></pre></td></tr></table></figure><p>在dataDir指定的目录下创建myid文件,文件内容为server后面的ID,即1。<br>然后通过scp命令<code>scp -r apache-zookeeper-3.5.6 uat14476:/home/qateadmin/</code>将第一台服务器配置好的zookeeper拷贝到其他两台服务器上，并且将uat14476中dataDir指定目录下的myid改为2,将uat14477中dataDir指定目录下的myid改为3。<br><strong>启动服务</strong></p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">zkServer.<span class="keyword">sh</span> start  <span class="comment">//启动服务</span></span><br><span class="line">zkServer.<span class="keyword">sh</span> status <span class="comment">//查看服务状态</span></span><br><span class="line">zkServer.<span class="keyword">sh</span> stop <span class="comment">//停止服务</span></span><br></pre></td></tr></table></figure><h3 id="伪分布模式"><a href="#伪分布模式" class="headerlink" title="伪分布模式"></a>伪分布模式</h3><p>是一种特殊的集群模式，即集群的所有服务器都部署在一台机器上。当你有一台较好的服务器，zookeeper允许在一台服务器上通过启动不同的端口来启动多个zookeeper实例，以此来以集群对外提供服务。<br>这种模式，只需把zoo.cfg的server.x 对应的端口改成不同的。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server<span class="number">.1</span>=uat14475:<span class="number">2888</span>:<span class="number">3888</span></span><br><span class="line">server<span class="number">.2</span>=uat14476:<span class="number">2889</span>:<span class="number">3889</span></span><br><span class="line">server<span class="number">.3</span>=uat14477:<span class="number">2890</span>:<span class="number">3890</span></span><br></pre></td></tr></table></figure><h1 id="关于zookeeper高可用的思考"><a href="#关于zookeeper高可用的思考" class="headerlink" title="关于zookeeper高可用的思考"></a>关于zookeeper高可用的思考</h1><h3 id="为什么要设计奇数台服务器"><a href="#为什么要设计奇数台服务器" class="headerlink" title="为什么要设计奇数台服务器"></a>为什么要设计奇数台服务器</h3><p>很多人对zookeeper选举leader认识有偏差，认为“为了使得 ZooKeeper 集群能够顺利地选举出 Leader，必须将 ZooKeeper 集群的服务器数部署成奇数”。这么说虽然没错，但是实际的原因是:<strong>存活过半即可用</strong>的特性。<br>即：如果想搭建运行N台服务器挂掉，那么就要部署2*N+1台服务器构成zookeeper集群，也就是说：由6台服务器构成的zookeeper集群和5台服务器构成的zookeeper集群在容灾能力上并没有优势，反而浪费一台服务器，所以基于这个原因，zookeeper集群通常设计成奇数台服务器。</p><h3 id="容灾"><a href="#容灾" class="headerlink" title="容灾"></a>容灾</h3><p>所谓容灾，在 IT 行业通常是指我们的计算机信息系统具有的一种在遭受诸如火灾、地震、断电和其他基础网络设备故障等毁灭性灾难的时候，依然能够对外提供可用服务的能力。<br>ZooKeeper 既然已经解决了单点问题，那为什么还要进行容灾呢？</p><h3 id="单点问题"><a href="#单点问题" class="headerlink" title="单点问题"></a>单点问题</h3><p>单点问题是分布式环境中最常见也是最经典的问题之一，具体地说，在一个分布式系统中，如果某一个组件出现故障就会引起整个系统的可用性大大下降甚至是处于瘫痪状态，那么我们就认为该组件存在单点问题。<br>ZooKeeper基于“过半”设计原则确实已经解决了单点问题，在运行期间，集群中至少有过半的机器保存了最新的数据。因此，只要集群中超过半数的机器还能够正常工作，整个集群就能够对外提供服务。</p><h3 id="单机房问题"><a href="#单机房问题" class="headerlink" title="单机房问题"></a>单机房问题</h3><p>如果你的zookeeper集群都在一个机房中，如果一个机房整个出问题，你依赖zookeeper运行的服务器还是会因此故障。</p><h3 id="双机房问题"><a href="#双机房问题" class="headerlink" title="双机房问题"></a>双机房问题</h3><p>因资源问题，很多公司在做容灾是都是双机房，但是zookeeper在双机房条件下并没有实现好的容灾效果，原因是：无论哪个机房发生异常，都有可能使zookeeper集群中可以使用的机器无法超过半数。比如：7=4+3的部署方式，如果多于半数的那个机房挂了，zookeeper就无法选举leader。<br>实际很多公司的做法是：租用一个可靠机房和一个廉价机房，在可靠的机房尽量部署更多的zookeeper。</p><h3 id="三机房部署"><a href="#三机房部署" class="headerlink" title="三机房部署"></a>三机房部署</h3><p>三机房部署要遵循<strong>存活过半即可用</strong>的原则。假设服务器总数是N，那么三个机房部署zookeeper的服务器N1、N2和N3使集群具有容灾能力，三者的取值算法如下：</p><ul><li>计算N1：<code>N1=(N-1)/2</code></li><li>计算N2：<code>N2取值范围1~(N-N1)/2</code> 整数相除向下取整</li><li>计算N3：<code>N3=N-N1-N2</code> 同时确定N2，即必须满足N3&lt;N1+N2。<br>如果部署7台服务器，可以有两种部署方案：(3,1,3)和(3,2,2)。</li></ul><h1 id="水平扩容"><a href="#水平扩容" class="headerlink" title="水平扩容"></a>水平扩容</h1><p>简单地讲，水平扩容就是向集群中添加更多的机器，以提高系统的服务质量。<br>ZooKeeper在水平扩容扩容方面做得并不十分完美，需要进行整个集群的重启。通常有两种重启方式，一种是集群整体重启，另外一种是逐台进行服务器的重启。</p><ul><li>整体重启：就是先将整个集群停止，然后更新zookeeper配置，然后重启。重启过程中，所有该集群客户端都无法连接上集群，等到集群再次启动，这些客户端就能够自动连接上——注意，整体启动前建立起的客户端会话，并不会因为此次整体重启而失效。也就是说，在整体重启期间花费的时间将不计入会话超时时间的计算中。</li><li>逐台重启：在这种方式中，每次仅仅重启集群中的一台机器，然后逐台对整个集群中的机器进行重启操作。这种方式可以在重启期间依然保证集群对外的正常服务。<strong>（推荐）</strong></li><li>参考文章：《从Paxos到Zookeeper  分布式一致性原理与实践》</li></ul>]]></content>
    
    <summary type="html">
    
      ZooKeeper是Apache的一个顶级项目，为分布式应用提供高效、高可用的分布式协调服务，提供了诸如数据发布/订阅、负载均衡、命名服务、分布式协调/通知和分布式锁等分布式基础服务。
    
    </summary>
    
    
      <category term="zookeeper" scheme="http://sparkx.com.cn/categories/zookeeper/"/>
    
      <category term="tools" scheme="http://sparkx.com.cn/categories/zookeeper/tools/"/>
    
    
      <category term="zookeeper" scheme="http://sparkx.com.cn/tags/zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>spark rdd编程实战</title>
    <link href="http://sparkx.com.cn/spark/spark-rdd-programming/"/>
    <id>http://sparkx.com.cn/spark/spark-rdd-programming/</id>
    <published>2019-12-11T11:46:59.000Z</published>
    <updated>2019-12-12T16:39:04.966Z</updated>
    
    <content type="html"><![CDATA[<p>工欲善其事必先利其器，<a href="http://sparkx.com.cn/spark/spark-setup/">spark集群环境搭建</a>完成后，接下来学习一下spark rdd的编程实战。</p><h1 id="创建RDD"><a href="#创建RDD" class="headerlink" title="创建RDD"></a>创建RDD</h1><ul><li>从文件系统中加载数据创建RDD<br>Spark采用textFile()方法从文件系统中加载数据创建RDD，该方法把URI作为参数，URI可以是：<code>本地文件地址</code>、<code>分布式系统HDFS地址</code>、<code>Amazon S3地址</code>。<br><a href="http://spark.apache.org/docs/latest/quick-start.html" target="_blank" rel="noopener">点击进入官方文档</a><br>首先启动spark-shell,步骤如下：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@master1:~<span class="comment"># cd $SPARK_HOME</span></span><br><span class="line">root@master1:/usr/local/spark/spark-2.4.4-bin-hadoop2.6<span class="comment"># ./bin/spark-shell</span></span><br><span class="line">19/12/11 20:18:27 WARN util.NativeCodeLoader: Unable to <span class="keyword">load</span> <span class="keyword">native</span>-hadoop <span class="keyword">library</span> <span class="keyword">for</span> your platform... <span class="keyword">using</span> builtin-<span class="keyword">java</span> classes <span class="keyword">where</span> applicable</span><br><span class="line">Setting <span class="keyword">default</span> <span class="keyword">log</span> <span class="keyword">level</span> <span class="keyword">to</span> <span class="string">"WARN"</span>.</span><br><span class="line"><span class="keyword">To</span> adjust <span class="keyword">logging</span> <span class="keyword">level</span> <span class="keyword">use</span> sc.setLogLevel(newLevel). <span class="keyword">For</span> SparkR, <span class="keyword">use</span> setLogLevel(newLevel).</span><br><span class="line">Spark <span class="keyword">context</span> Web UI available <span class="keyword">at</span> <span class="keyword">http</span>://master1:<span class="number">4040</span></span><br><span class="line">Spark <span class="keyword">context</span> available <span class="keyword">as</span> <span class="string">'sc'</span> (<span class="keyword">master</span> = <span class="keyword">local</span>[*], app <span class="keyword">id</span> = <span class="keyword">local</span><span class="number">-1576066723716</span>).</span><br><span class="line">Spark <span class="keyword">session</span> available <span class="keyword">as</span> <span class="string">'spark'</span>.</span><br><span class="line">Welcome <span class="keyword">to</span></span><br><span class="line">      ____              __</span><br><span class="line">     / __/__  ___ _____/ /__</span><br><span class="line">    _\ \/ _ \/ _ <span class="string">`/ __/  '_/</span></span><br><span class="line"><span class="string">   /___/ .__/\_,_/_/ /_/\_\   version 2.4.4</span></span><br><span class="line"><span class="string">      /_/</span></span><br><span class="line"><span class="string">         </span></span><br><span class="line"><span class="string">Using Scala version 2.11.12 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_71)</span></span><br><span class="line"><span class="string">Type in expressions to have them evaluated.</span></span><br><span class="line"><span class="string">Type :help for more information.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">scala&gt;</span></span><br></pre></td></tr></table></figure>从本地文件系统加载数据,读本地文件的目录前加上<code>file://</code>，否则会默认从集群中读取，而读不到会报错。<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">scala</span>&gt; val textFile = spark.<span class="keyword">read</span>.textFile(<span class="string">"/usr/local/spark/spark-2.4.4-bin-hadoop2.6/README.md"</span>)</span><br><span class="line">org.apache.spark.sql.AnalysisException: Path does not exist: hdfs:<span class="comment">//master1:9000/usr/local/spark/spark-2.4.4-bin-hadoop2.6/README.md;</span></span><br><span class="line">  at org.apache.spark.sql.execution.datasources.DataSource$<span class="variable">$anonfun</span><span class="variable">$org</span><span class="variable">$apache</span><span class="variable">$spark</span><span class="variable">$sql</span><span class="variable">$execution</span><span class="variable">$datasources</span><span class="variable">$DataSource</span>$<span class="variable">$checkAndGlobPathIfNecessary</span><span class="variable">$1</span>.apply(DataSource.<span class="keyword">scala</span>:558)</span><br><span class="line">  at org.apache.spark.sql.execution.datasources.DataSource$<span class="variable">$anonfun</span><span class="variable">$org</span><span class="variable">$apache</span><span class="variable">$spark</span><span class="variable">$sql</span><span class="variable">$execution</span><span class="variable">$datasources</span><span class="variable">$DataSource</span>$<span class="variable">$checkAndGlobPathIfNecessary</span><span class="variable">$1</span>.apply(DataSource.<span class="keyword">scala</span>:545)</span><br><span class="line">  at <span class="keyword">scala</span>.collection.TraversableLike$<span class="variable">$anonfun</span><span class="variable">$flatMap</span><span class="variable">$1</span>.apply(TraversableLike.<span class="keyword">scala</span>:241)</span><br><span class="line">  at <span class="keyword">scala</span>.collection.TraversableLike$<span class="variable">$anonfun</span><span class="variable">$flatMap</span><span class="variable">$1</span>.apply(TraversableLike.<span class="keyword">scala</span>:241)</span><br><span class="line">  at <span class="keyword">scala</span>.collection.immutable.<span class="keyword">List</span>.<span class="keyword">foreach</span>(<span class="keyword">List</span>.<span class="keyword">scala</span>:392)</span><br><span class="line">  at <span class="keyword">scala</span>.collection.TraversableLike<span class="variable">$class</span>.flatMap(TraversableLike.<span class="keyword">scala</span>:241)</span><br><span class="line">  at <span class="keyword">scala</span>.collection.immutable.<span class="keyword">List</span>.flatMap(<span class="keyword">List</span>.<span class="keyword">scala</span>:355)</span><br><span class="line">  at org.apache.spark.sql.execution.datasources.DataSource.org<span class="variable">$apache</span><span class="variable">$spark</span><span class="variable">$sql</span><span class="variable">$execution</span><span class="variable">$datasources</span><span class="variable">$DataSource</span>$<span class="variable">$checkAndGlobPathIfNecessary</span>(DataSource.<span class="keyword">scala</span>:545)</span><br><span class="line">  at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.<span class="keyword">scala</span>:359)</span><br><span class="line">  at org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.<span class="keyword">scala</span>:223)</span><br><span class="line">  at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.<span class="keyword">scala</span>:211)</span><br><span class="line">  at org.apache.spark.sql.DataFrameReader.text(DataFrameReader.<span class="keyword">scala</span>:714)</span><br><span class="line">  at org.apache.spark.sql.DataFrameReader.textFile(DataFrameReader.<span class="keyword">scala</span>:756)</span><br><span class="line">  at org.apache.spark.sql.DataFrameReader.textFile(DataFrameReader.<span class="keyword">scala</span>:723)</span><br><span class="line">  ... 49 elided</span><br><span class="line"> 正确的方法</span><br><span class="line"><span class="keyword">scala</span>&gt; val textFile = spark.<span class="keyword">read</span>.textFile(<span class="string">"file:///usr/local/spark/spark-2.4.4-bin-hadoop2.6/README.md"</span>)</span><br><span class="line">textFile: org.apache.spark.sql.Dataset[String] = [value: string] #得到的是Dataset</span><br><span class="line"><span class="keyword">scala</span>&gt; textFile.<span class="keyword">count</span>() #统计单词</span><br><span class="line">res0: Long = 105                                                                </span><br><span class="line"></span><br><span class="line"><span class="keyword">scala</span>&gt; textFile.first() #读取第一行</span><br><span class="line">res1: String = # Apache Spark</span><br><span class="line"><span class="keyword">scala</span>&gt; val lineWithSpark = textFile.filter(<span class="keyword">line</span>=&gt;<span class="keyword">line</span>.contains(<span class="string">"Spark"</span>))</span><br><span class="line">lineWithSpark: org.apache.spark.sql.Dataset[String] = [value: string] #Dataset通过filter生成一个新的Dataset</span><br><span class="line"></span><br><span class="line"><span class="keyword">scala</span>&gt; textFile.filter(<span class="keyword">line</span>=&gt;<span class="keyword">line</span>.contains(<span class="string">"Spark"</span>)).<span class="keyword">count</span>() #统计含有<span class="string">"Spark"</span>的行数</span><br><span class="line">res2: Long = 20</span><br></pre></td></tr></table></figure></li><li>从分布式文件系统HDFS中加载数据<br>首先我们再hdfs上创建/spark目录，并将spark-2.4.4-bin-hadoop.2.6中的README.md上传到该目录中。<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@master1</span><span class="symbol">:/usr/local/spark/spark-</span><span class="number">2.4</span>.<span class="number">4</span>-bin-hadoop2.<span class="number">6</span><span class="comment"># hdfs dfs -mkdir /spark</span></span><br><span class="line"><span class="number">19/12</span>/<span class="number">11 20</span><span class="symbol">:</span><span class="number">46:38</span> WARN <span class="symbol">util.NativeCodeLoader:</span> Unable to load native-hadoop library <span class="keyword">for</span> your platform... using builtin-java classes where applicable</span><br><span class="line">root<span class="variable">@master1</span><span class="symbol">:/usr/local/spark/spark-</span><span class="number">2.4</span>.<span class="number">4</span>-bin-hadoop2.<span class="number">6</span><span class="comment"># hdfs dfs -put README.md /spark</span></span><br><span class="line"><span class="number">19/12</span>/<span class="number">11 20</span><span class="symbol">:</span><span class="number">46:50</span> WARN <span class="symbol">util.NativeCodeLoader:</span> Unable to load native-hadoop library <span class="keyword">for</span> your platform... using builtin-java classes where applicable</span><br><span class="line">root<span class="variable">@master1</span><span class="symbol">:/usr/local/spark/spark-</span><span class="number">2.4</span>.<span class="number">4</span>-bin-hadoop2.<span class="number">6</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>在<a href="http://192.168.112.120:50070/explorer.html#/spark" target="_blank" rel="noopener">http://192.168.112.120:50070/explorer.html#/spark</a> 中查看文件，如下:<br><img src="/images/hadoop/hdfs_spark_readme.png" alt=""><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#以下三种写法都正确</span><br><span class="line">scala&gt; val lines = sc.textFile(<span class="string">"hdfs://master1:9000/spark/README.md"</span>)</span><br><span class="line">lines: org<span class="selector-class">.apache</span><span class="selector-class">.spark</span><span class="selector-class">.rdd</span><span class="selector-class">.RDD</span>[String] = hdfs:<span class="comment">//master1:9000/spark/README.md MapPartitionsRDD[17] at textFile at &lt;console&gt;:24</span></span><br><span class="line"></span><br><span class="line">scala&gt; val lines = sc.textFile(<span class="string">"/user/spark/README.md"</span>)</span><br><span class="line">lines: org<span class="selector-class">.apache</span><span class="selector-class">.spark</span><span class="selector-class">.rdd</span><span class="selector-class">.RDD</span>[String] = /user/spark/README<span class="selector-class">.md</span> MapPartitionsRDD[<span class="number">19</span>] at textFile at &lt;console&gt;:<span class="number">24</span></span><br><span class="line"></span><br><span class="line">scala&gt; val lines = sc.textFile(<span class="string">"/spark/README.md"</span>)</span><br><span class="line">lines: org<span class="selector-class">.apache</span><span class="selector-class">.spark</span><span class="selector-class">.rdd</span><span class="selector-class">.RDD</span>[String] = /spark/README<span class="selector-class">.md</span> MapPartitionsRDD[<span class="number">21</span>] at textFile at &lt;console&gt;:<span class="number">24</span></span><br><span class="line"></span><br><span class="line">scala&gt; lines.count()</span><br><span class="line">res3: Long = <span class="number">105</span></span><br></pre></td></tr></table></figure></li><li>通过并行集合(数组)创建RDD<figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; var <span class="built_in">array</span> = Array(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line"><span class="built_in">array</span>: Array[Int] = Array(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; var rdd = sc.parallelize(<span class="built_in">array</span>)</span><br><span class="line">rdd: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[<span class="number">22</span>] at parallelize at &lt;console&gt;:<span class="number">26</span></span><br><span class="line"></span><br><span class="line">scala&gt; val rdd2 = sc.parallelize(list)</span><br><span class="line">rdd2: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[<span class="number">23</span>] at parallelize at &lt;console&gt;:<span class="number">26</span></span><br><span class="line"></span><br><span class="line">scala&gt; rdd.collect()</span><br><span class="line">res4: Array[Int] = Array(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; rdd2.collect()</span><br><span class="line">res5: Array[Int] = Array(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure><h1 id="更多Dataset的操作"><a href="#更多Dataset的操作" class="headerlink" title="更多Dataset的操作"></a>更多Dataset的操作</h1><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; textFile.<span class="built_in">map</span>(<span class="built_in">line</span>=&gt;<span class="built_in">line</span>.<span class="built_in">split</span>(<span class="string">" "</span>).<span class="built_in">size</span>).reduce((a,b)=&gt;<span class="keyword">if</span>(a&gt;b) a <span class="keyword">else</span> b) #获取词数最大的值</span><br><span class="line">res0: Int = <span class="number">22</span> </span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">import</span> java.lang.Math</span><br><span class="line"><span class="keyword">import</span> java.lang.Math</span><br><span class="line"></span><br><span class="line">scala&gt; textFile.<span class="built_in">map</span>(<span class="built_in">line</span>=&gt;<span class="built_in">line</span>.<span class="built_in">split</span>(<span class="string">" "</span>).<span class="built_in">size</span>).reduce((a,b)=&gt;Math.<span class="built_in">max</span>(a,b)) #用函数操作</span><br><span class="line">res1: Int = <span class="number">22</span></span><br><span class="line">#Spark很简单的实现MapReduce，并通过groupByKey来统计词的出现词数</span><br><span class="line">scala&gt; val wordCounts = textFile.flatMap(<span class="built_in">line</span> =&gt; <span class="built_in">line</span>.<span class="built_in">split</span>(<span class="string">" "</span>)).groupByKey(identity).count()</span><br><span class="line">wordCounts: org.apache.spark.sql.Dataset[(<span class="keyword">String</span>, Long)] = [value: string, count(<span class="number">1</span>): bigint]</span><br><span class="line"></span><br><span class="line">scala&gt; wordCounts.collect() #调用collect()函数输出</span><br><span class="line">res2: <span class="keyword">Array</span>[(<span class="keyword">String</span>, Long)] = <span class="keyword">Array</span>((online,<span class="number">1</span>), (graphs,<span class="number">1</span>), ([<span class="string">"Parallel,1), (["</span>Building,<span class="number">1</span>), (thread,<span class="number">1</span>), (documentation,<span class="number">3</span>), (command,,<span class="number">2</span>), (abbreviated,<span class="number">1</span>), (overview,<span class="number">1</span>), (rich,<span class="number">1</span>), (<span class="built_in">set</span>,<span class="number">2</span>), (-DskipTests,<span class="number">1</span>), (name,<span class="number">1</span>), (page](http:<span class="comment">//spark.apache.org/documentation.html).,1), (["Specifying,1), (stream,1), (run:,1), (not,1), (programs,2), (tests,2), (./dev/run-tests,1), (will,1), ([run,1), (particular,2), (option,1), (Alternatively,,1), (by,1), (must,1), (using,5), (you,4), (MLlib,1), (DataFrames,,1), (variable,1), (Note,1), (core,1), (more,1), (protocols,1), (guidance,2), (shell:,2), (can,7), (site,,1), (systems.,1), (Maven,1), ([building,1), (configure,1), (for,12), (README,1), (Interactive,2), (how,3), ([Configuration,1), (Hive,2), (system,1), (provides,1), (Hadoop-supported,1), (pre-built,1...</span></span><br><span class="line">scala&gt;</span><br></pre></td></tr></table></figure><h1 id="Caching"><a href="#Caching" class="headerlink" title="Caching"></a>Caching</h1>spark也支持将拉取的数据集缓存下来，对于重复访问的热点数据非常好。<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">scala</span>&gt; lineWithSpark.cache()</span><br><span class="line">res3: lineWithSpark.<span class="keyword">type</span> = [value: string]</span><br><span class="line"></span><br><span class="line"><span class="keyword">scala</span>&gt; lineWithSpark.<span class="keyword">count</span>()</span><br><span class="line">res4: Long = 20</span><br><span class="line"></span><br><span class="line"><span class="keyword">scala</span>&gt; lineWithSpark.<span class="keyword">count</span>()</span><br><span class="line">res5: Long = 20</span><br></pre></td></tr></table></figure><h1 id="独立应用"><a href="#独立应用" class="headerlink" title="独立应用"></a>独立应用</h1>直接编写程序脚本，打成jar包，提交到spark集群执行。<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* SimpleApp.scala */</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.<span class="type">SparkSession</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">SimpleApp</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]) &#123;</span><br><span class="line">    <span class="keyword">val</span> logFile = <span class="string">"YOUR_SPARK_HOME/README.md"</span> <span class="comment">// Should be some file on your system</span></span><br><span class="line">    <span class="keyword">val</span> spark = <span class="type">SparkSession</span>.builder.appName(<span class="string">"Simple Application"</span>).getOrCreate()</span><br><span class="line">    <span class="keyword">val</span> logData = spark.read.textFile(logFile).cache()</span><br><span class="line">    <span class="keyword">val</span> numAs = logData.filter(line =&gt; line.contains(<span class="string">"a"</span>)).count()</span><br><span class="line">    <span class="keyword">val</span> numBs = logData.filter(line =&gt; line.contains(<span class="string">"b"</span>)).count()</span><br><span class="line">    println(<span class="string">s"Lines with a: <span class="subst">$numAs</span>, Lines with b: <span class="subst">$numBs</span>"</span>)</span><br><span class="line">    spark.stop()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      spark rdd编程是最基础的，本节从rdd编程实战讲解rdd的用法。
    
    </summary>
    
    
      <category term="spark" scheme="http://sparkx.com.cn/categories/spark/"/>
    
    
      <category term="spark" scheme="http://sparkx.com.cn/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>flink简介-快速入门</title>
    <link href="http://sparkx.com.cn/flink/flink-note/"/>
    <id>http://sparkx.com.cn/flink/flink-note/</id>
    <published>2019-12-11T01:27:00.000Z</published>
    <updated>2019-12-13T12:01:05.486Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Flink是什么"><a href="#Flink是什么" class="headerlink" title="Flink是什么"></a>Flink是什么</h1><p>Flink 是一个分布式大数据处理引擎，可对有限数据流和无限数据流进行有状态计算。可部署在各种集群环境，对各种大小的数据规模进行快速计算。Flink提供了诸多更高抽象层的API以便用户编写分布式任务：</p><table><thead><tr><th>API</th><th align="left">描述</th></tr></thead><tbody><tr><td>DataSet API</td><td align="left">对静态数据进行批处理操作，将静态数据抽象成分布式的数据集，用户可以方便地使用Flink提供的各种操作符对分布是数据集进行处理。</td></tr><tr><td>DataStream API</td><td align="left">对数据流进行流式处理操作，将流式的数据抽象成分布式的数据流，用户可以方便地对分布式数据流进行各种操作。</td></tr><tr><td>Table API</td><td align="left">对结构化数据进行查询操作，将结构化数据抽象成关系表，并通过类SQL的DSL对关系表进行各种查询操作。</td></tr></tbody></table><h1 id="Flink里的基础概念"><a href="#Flink里的基础概念" class="headerlink" title="Flink里的基础概念"></a>Flink里的基础概念</h1><table><thead><tr><th>名称</th><th align="left">描述</th></tr></thead><tbody><tr><td>Client</td><td align="left">提交任务给JobManager</td></tr><tr><td>JobManager</td><td align="left">分发任务给TaskManager</td></tr><tr><td>TaskManager</td><td align="left">会心跳会报任务状态</td></tr></tbody></table><h1 id="Flink流式处理特性"><a href="#Flink流式处理特性" class="headerlink" title="Flink流式处理特性"></a>Flink流式处理特性</h1><ul><li>支持高吞吐量、低延时、高性能的流式处理。</li><li>支持带有事件的时间窗口（Window）操作。</li><li>支持高度灵活的窗口（Window）操作，支持基于time、count、session以及data-driven的窗口操作。</li><li>支持具有Backpressure功能的持续流模型。</li><li>支持基于轻量级分布式快照（Snapshot）实现的容错和有状态计算的Exactly-once语义。</li><li>支持Batch on Streaming处理和realtime Streaming处理。</li></ul><h1 id="理解流式处理和批处理系统的差别"><a href="#理解流式处理和批处理系统的差别" class="headerlink" title="理解流式处理和批处理系统的差别"></a>理解流式处理和批处理系统的差别</h1><ul><li>流式处理：当一条数据被处理完成后，序列化到缓存中，然后立刻通过网络传输到下一个节点，由下一个节点继续处理。代表：Apache Storm、Apache Smaza。</li><li>批处理：当一条数据被处理完成后，序列化到缓存中，并不会立刻通过网络传输到下一个节点，当缓存写满，就持久化到本地硬盘上，当所有数据都被处理完成后，才开始将处理后的数据通过网络传输到下一个节点。代表：Apache Storm、Apache Smaza。Spark Streaming看似流式处理，其实是一种micro-batch架构。</li></ul><p>对于上述两种数据传输模式，Flink的执行引擎采用了一种十分灵活的方式支持这两种传输模型，Flink以固定的缓存块为单位进行网络数据传输，用户可以通过缓存块超时值指定缓存块的传输时机，如果缓存块超时值为0，则Flink的数据传输方式类似流式处理模型，此时可以获得最低处理延时。如果缓存块超时值为大于零的一个值(理论上无限大)，则Flink的数据传输方式类似批处理模型，此时系统可以获得最高的吞吐量。</p>]]></content>
    
    <summary type="html">
    
      对Flink最权威的解释是官方[点击进入官网](https://flink.apache.org/)文档，下面在个人理解基础上对Flink进行简单的介绍。
    
    </summary>
    
    
      <category term="flink" scheme="http://sparkx.com.cn/categories/flink/"/>
    
    
      <category term="flink" scheme="http://sparkx.com.cn/tags/flink/"/>
    
  </entry>
  
  <entry>
    <title>spark example 初体验</title>
    <link href="http://sparkx.com.cn/spark/spark-examples/"/>
    <id>http://sparkx.com.cn/spark/spark-examples/</id>
    <published>2019-12-09T15:13:44.000Z</published>
    <updated>2019-12-09T15:16:12.685Z</updated>
    
    <content type="html"><![CDATA[<p>下面在搭建的集群中运行spark自带的例子，体验一下spark独立集群管理器和采用Hadoop YARN管理器的不同。</p><h1 id="采用独立集群管理器"><a href="#采用独立集群管理器" class="headerlink" title="采用独立集群管理器"></a>采用独立集群管理器</h1><p>利用给的例子计算PI的值。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">root@master1:/usr/local/spark/spark-2.4.4-bin-hadoop2.6/bin#</span> <span class="string">spark-submit</span> <span class="string">--class</span> <span class="string">org.apache.spark.examples.SparkPi</span> <span class="string">--master</span> <span class="string">spark://master1:7077</span> <span class="string">../examples/jars/spark-examples_2.11-2.4.4.jar</span> <span class="number">100</span></span><br><span class="line"><span class="attr">19/12/09 22:50:38 WARN util.NativeCodeLoader:</span> <span class="string">Unable</span> <span class="string">to</span> <span class="string">load</span> <span class="string">native-hadoop</span> <span class="string">library</span> <span class="string">for</span> <span class="string">your</span> <span class="string">platform...</span> <span class="string">using</span> <span class="string">builtin-java</span> <span class="string">classes</span> <span class="string">where</span> <span class="string">applicable</span></span><br><span class="line"><span class="attr">19/12/09 22:50:39 INFO spark.SparkContext:</span> <span class="string">Running</span> <span class="string">Spark</span> <span class="string">version</span> <span class="number">2.4</span><span class="number">.4</span></span><br><span class="line"><span class="attr">19/12/09 22:50:39 INFO spark.SparkContext: Submitted application:</span> <span class="string">Spark</span> <span class="string">Pi</span></span><br><span class="line"><span class="attr">19/12/09 22:50:39 INFO spark.SecurityManager: Changing view acls to:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">19/12/09 22:50:39 INFO spark.SecurityManager: Changing modify acls to:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">19/12/09 22:50:39 INFO spark.SecurityManager: Changing view acls groups to:</span> </span><br><span class="line"><span class="attr">19/12/09 22:50:39 INFO spark.SecurityManager: Changing modify acls groups to:</span> </span><br><span class="line"><span class="attr">19/12/09 22:50:39 INFO spark.SecurityManager: SecurityManager:</span> <span class="string">authentication</span> <span class="string">disabled;</span> <span class="string">ui</span> <span class="string">acls</span> <span class="string">disabled;</span> <span class="attr">users  with view permissions:</span> <span class="string">Set(root);</span> <span class="attr">groups with view permissions:</span> <span class="string">Set();</span> <span class="attr">users  with modify permissions:</span> <span class="string">Set(root);</span> <span class="attr">groups with modify permissions:</span> <span class="string">Set()</span></span><br><span class="line"><span class="attr">19/12/09 22:50:39 INFO util.Utils:</span> <span class="string">Successfully</span> <span class="string">started</span> <span class="string">service</span> <span class="string">'sparkDriver'</span> <span class="string">on</span> <span class="string">port</span> <span class="number">44644</span><span class="string">.</span></span><br><span class="line"><span class="attr">19/12/09 22:50:39 INFO spark.SparkEnv:</span> <span class="string">Registering</span> <span class="string">MapOutputTracker</span></span><br><span class="line"><span class="attr">19/12/09 22:50:39 INFO spark.SparkEnv:</span> <span class="string">Registering</span> <span class="string">BlockManagerMaster</span></span><br><span class="line"><span class="attr">19/12/09 22:50:39 INFO storage.BlockManagerMasterEndpoint:</span> <span class="string">Using</span> <span class="string">org.apache.spark.storage.DefaultTopologyMapper</span> <span class="string">for</span> <span class="string">getting</span> <span class="string">topology</span> <span class="string">information</span></span><br><span class="line"><span class="attr">19/12/09 22:50:39 INFO storage.BlockManagerMasterEndpoint:</span> <span class="string">BlockManagerMasterEndpoint</span> <span class="string">up</span></span><br><span class="line"><span class="attr">19/12/09 22:50:39 INFO storage.DiskBlockManager:</span> <span class="string">Created</span> <span class="string">local</span> <span class="string">directory</span> <span class="string">at</span> <span class="string">/tmp/blockmgr-ccafdfa2-6ca1-45c8-95b0-51b36272cde7</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO memory.MemoryStore:</span> <span class="string">MemoryStore</span> <span class="string">started</span> <span class="string">with</span> <span class="string">capacity</span> <span class="number">413.9</span> <span class="string">MB</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO spark.SparkEnv:</span> <span class="string">Registering</span> <span class="string">OutputCommitCoordinator</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO util.log:</span> <span class="string">Logging</span> <span class="string">initialized</span> <span class="string">@3244ms</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO server.Server:</span> <span class="string">jetty-9.3.z-SNAPSHOT,</span> <span class="attr">build timestamp:</span> <span class="string">unknown,</span> <span class="attr">git hash:</span> <span class="string">unknown</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO server.Server:</span> <span class="string">Started</span> <span class="string">@3490ms</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO server.AbstractConnector:</span> <span class="string">Started</span> <span class="string">ServerConnector@4e4f58b8&#123;HTTP/1.1,[http/1.1]&#125;&#123;0.0.0.0:4040&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO util.Utils:</span> <span class="string">Successfully</span> <span class="string">started</span> <span class="string">service</span> <span class="string">'SparkUI'</span> <span class="string">on</span> <span class="string">port</span> <span class="number">4040</span><span class="string">.</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@70f43b45&#123;/jobs,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@41de5768&#123;/jobs/json,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@5f577419&#123;/jobs/job,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@3d526ad9&#123;/jobs/job/json,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@e041f0c&#123;/stages,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@6a175569&#123;/stages/json,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@11963225&#123;/stages/stage,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@4102b1b1&#123;/stages/stage/json,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@61a5b4ae&#123;/stages/pool,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@3a71c100&#123;/stages/pool/json,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@5b69fd74&#123;/storage,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@f325091&#123;/storage/json,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@437e951d&#123;/storage/rdd,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@77b325b3&#123;/storage/rdd/json,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@63a5e46c&#123;/environment,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@7e8e8651&#123;/environment/json,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@49ef32e0&#123;/executors,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@271f18d3&#123;/executors/json,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@6bd51ed8&#123;/executors/threadDump,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@61e3a1fd&#123;/executors/threadDump/json,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@51abf713&#123;/static,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@3be8821f&#123;/,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@64b31700&#123;/api,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@85ec632&#123;/jobs/job/kill,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@1c05a54d&#123;/stages/stage/kill,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO ui.SparkUI:</span> <span class="string">Bound</span> <span class="string">SparkUI</span> <span class="string">to</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">,</span> <span class="string">and</span> <span class="string">started</span> <span class="string">at</span> <span class="string">http://master1:4040</span></span><br><span class="line"><span class="attr">19/12/09 22:50:40 INFO spark.SparkContext:</span> <span class="string">Added</span> <span class="string">JAR</span> <span class="string">file:/usr/local/spark/spark-2.4.4-bin-hadoop2.6/bin/../examples/jars/spark-examples_2.11-2.4.4.jar</span> <span class="string">at</span> <span class="string">spark://master1:44644/jars/spark-examples_2.11-2.4.4.jar</span> <span class="string">with</span> <span class="string">timestamp</span> <span class="number">1575903040745</span></span><br><span class="line"><span class="number">19</span><span class="string">/12/09</span> <span class="number">22</span><span class="string">:50:41</span> <span class="string">INFO</span> <span class="string">client.StandaloneAppClient$ClientEndpoint:</span> <span class="string">Connecting</span> <span class="string">to</span> <span class="string">master</span> <span class="string">spark://master1:7077...</span></span><br><span class="line"><span class="attr">19/12/09 22:50:41 INFO client.TransportClientFactory:</span> <span class="string">Successfully</span> <span class="string">created</span> <span class="string">connection</span> <span class="string">to</span> <span class="string">master1/192.168.112.120:7077</span> <span class="string">after</span> <span class="number">171</span> <span class="string">ms</span> <span class="string">(0</span> <span class="string">ms</span> <span class="string">spent</span> <span class="string">in</span> <span class="string">bootstraps)</span></span><br><span class="line"><span class="attr">19/12/09 22:50:41 INFO cluster.StandaloneSchedulerBackend:</span> <span class="string">Connected</span> <span class="string">to</span> <span class="string">Spark</span> <span class="string">cluster</span> <span class="string">with</span> <span class="string">app</span> <span class="string">ID</span> <span class="string">app-20191209225041-0000</span></span><br><span class="line"><span class="attr">19/12/09 22:50:41 INFO util.Utils:</span> <span class="string">Successfully</span> <span class="string">started</span> <span class="string">service</span> <span class="string">'org.apache.spark.network.netty.NettyBlockTransferService'</span> <span class="string">on</span> <span class="string">port</span> <span class="number">44526</span><span class="string">.</span></span><br><span class="line"><span class="attr">19/12/09 22:50:41 INFO netty.NettyBlockTransferService:</span> <span class="string">Server</span> <span class="string">created</span> <span class="string">on</span> <span class="string">master1:44526</span></span><br><span class="line"><span class="attr">19/12/09 22:50:41 INFO storage.BlockManager:</span> <span class="string">Using</span> <span class="string">org.apache.spark.storage.RandomBlockReplicationPolicy</span> <span class="string">for</span> <span class="string">block</span> <span class="string">replication</span> <span class="string">policy</span></span><br><span class="line"><span class="number">19</span><span class="string">/12/09</span> <span class="number">22</span><span class="string">:50:41</span> <span class="string">INFO</span> <span class="string">client.StandaloneAppClient$ClientEndpoint:</span> <span class="attr">Executor added:</span> <span class="string">app-20191209225041-0000/0</span> <span class="string">on</span> <span class="string">worker-20191209224928-192.168.112.122-40527</span> <span class="string">(192.168.112.122:40527)</span> <span class="string">with</span> <span class="number">1</span> <span class="string">core(s)</span></span><br><span class="line"><span class="attr">19/12/09 22:50:41 INFO cluster.StandaloneSchedulerBackend:</span> <span class="string">Granted</span> <span class="string">executor</span> <span class="string">ID</span> <span class="string">app-20191209225041-0000/0</span> <span class="string">on</span> <span class="string">hostPort</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">:40527</span> <span class="string">with</span> <span class="number">1</span> <span class="string">core(s),</span> <span class="number">600.0</span> <span class="string">MB</span> <span class="string">RAM</span></span><br><span class="line"><span class="number">19</span><span class="string">/12/09</span> <span class="number">22</span><span class="string">:50:41</span> <span class="string">INFO</span> <span class="string">client.StandaloneAppClient$ClientEndpoint:</span> <span class="attr">Executor added:</span> <span class="string">app-20191209225041-0000/1</span> <span class="string">on</span> <span class="string">worker-20191209224934-192.168.112.121-39568</span> <span class="string">(192.168.112.121:39568)</span> <span class="string">with</span> <span class="number">1</span> <span class="string">core(s)</span></span><br><span class="line"><span class="attr">19/12/09 22:50:41 INFO cluster.StandaloneSchedulerBackend:</span> <span class="string">Granted</span> <span class="string">executor</span> <span class="string">ID</span> <span class="string">app-20191209225041-0000/1</span> <span class="string">on</span> <span class="string">hostPort</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">:39568</span> <span class="string">with</span> <span class="number">1</span> <span class="string">core(s),</span> <span class="number">600.0</span> <span class="string">MB</span> <span class="string">RAM</span></span><br><span class="line"><span class="attr">19/12/09 22:50:42 INFO storage.BlockManagerMaster:</span> <span class="string">Registering</span> <span class="string">BlockManager</span> <span class="string">BlockManagerId(driver,</span> <span class="string">master1,</span> <span class="number">44526</span><span class="string">,</span> <span class="string">None)</span></span><br><span class="line"><span class="attr">19/12/09 22:50:42 INFO storage.BlockManagerMasterEndpoint:</span> <span class="string">Registering</span> <span class="string">block</span> <span class="string">manager</span> <span class="string">master1:44526</span> <span class="string">with</span> <span class="number">413.9</span> <span class="string">MB</span> <span class="string">RAM,</span> <span class="string">BlockManagerId(driver,</span> <span class="string">master1,</span> <span class="number">44526</span><span class="string">,</span> <span class="string">None)</span></span><br><span class="line"><span class="attr">19/12/09 22:50:42 INFO storage.BlockManagerMaster:</span> <span class="string">Registered</span> <span class="string">BlockManager</span> <span class="string">BlockManagerId(driver,</span> <span class="string">master1,</span> <span class="number">44526</span><span class="string">,</span> <span class="string">None)</span></span><br><span class="line"><span class="attr">19/12/09 22:50:42 INFO storage.BlockManager: Initialized BlockManager:</span> <span class="string">BlockManagerId(driver,</span> <span class="string">master1,</span> <span class="number">44526</span><span class="string">,</span> <span class="string">None)</span></span><br><span class="line"><span class="number">19</span><span class="string">/12/09</span> <span class="number">22</span><span class="string">:50:42</span> <span class="string">INFO</span> <span class="string">client.StandaloneAppClient$ClientEndpoint:</span> <span class="attr">Executor updated:</span> <span class="string">app-20191209225041-0000/0</span> <span class="string">is</span> <span class="string">now</span> <span class="string">RUNNING</span></span><br><span class="line"><span class="number">19</span><span class="string">/12/09</span> <span class="number">22</span><span class="string">:50:42</span> <span class="string">INFO</span> <span class="string">client.StandaloneAppClient$ClientEndpoint:</span> <span class="attr">Executor updated:</span> <span class="string">app-20191209225041-0000/1</span> <span class="string">is</span> <span class="string">now</span> <span class="string">RUNNING</span></span><br><span class="line"><span class="attr">19/12/09 22:51:00 INFO handler.ContextHandler:</span> <span class="string">Started</span> <span class="string">o.s.j.s.ServletContextHandler@37095ded&#123;/metrics/json,null,AVAILABLE,@Spark&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:51:00 INFO cluster.StandaloneSchedulerBackend: SchedulerBackend is ready for scheduling beginning after reached minRegisteredResourcesRatio:</span> <span class="number">0.0</span></span><br><span class="line"><span class="attr">19/12/09 22:51:10 INFO spark.SparkContext: Starting job:</span> <span class="string">reduce</span> <span class="string">at</span> <span class="string">SparkPi.scala:38</span></span><br><span class="line"><span class="attr">19/12/09 22:51:10 INFO scheduler.DAGScheduler:</span> <span class="string">Got</span> <span class="string">job</span> <span class="number">0</span> <span class="string">(reduce</span> <span class="string">at</span> <span class="string">SparkPi.scala:38)</span> <span class="string">with</span> <span class="number">100</span> <span class="string">output</span> <span class="string">partitions</span></span><br><span class="line"><span class="attr">19/12/09 22:51:10 INFO scheduler.DAGScheduler: Final stage:</span> <span class="string">ResultStage</span> <span class="number">0</span> <span class="string">(reduce</span> <span class="string">at</span> <span class="string">SparkPi.scala:38)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:10 INFO scheduler.DAGScheduler: Parents of final stage:</span> <span class="string">List()</span></span><br><span class="line"><span class="attr">19/12/09 22:51:10 INFO scheduler.DAGScheduler: Missing parents:</span> <span class="string">List()</span></span><br><span class="line"><span class="attr">19/12/09 22:51:10 INFO scheduler.DAGScheduler:</span> <span class="string">Submitting</span> <span class="string">ResultStage</span> <span class="number">0</span> <span class="string">(MapPartitionsRDD[1]</span> <span class="string">at</span> <span class="string">map</span> <span class="string">at</span> <span class="string">SparkPi.scala:34),</span> <span class="string">which</span> <span class="string">has</span> <span class="literal">no</span> <span class="string">missing</span> <span class="string">parents</span></span><br><span class="line"><span class="attr">19/12/09 22:51:11 INFO memory.MemoryStore:</span> <span class="string">Block</span> <span class="string">broadcast_0</span> <span class="string">stored</span> <span class="string">as</span> <span class="string">values</span> <span class="string">in</span> <span class="string">memory</span> <span class="string">(estimated</span> <span class="string">size</span> <span class="number">1936.0</span> <span class="string">B,</span> <span class="string">free</span> <span class="number">413.9</span> <span class="string">MB)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:13 INFO memory.MemoryStore:</span> <span class="string">Block</span> <span class="string">broadcast_0_piece0</span> <span class="string">stored</span> <span class="string">as</span> <span class="string">bytes</span> <span class="string">in</span> <span class="string">memory</span> <span class="string">(estimated</span> <span class="string">size</span> <span class="number">1256.0</span> <span class="string">B,</span> <span class="string">free</span> <span class="number">413.9</span> <span class="string">MB)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:13 INFO storage.BlockManagerInfo:</span> <span class="string">Added</span> <span class="string">broadcast_0_piece0</span> <span class="string">in</span> <span class="string">memory</span> <span class="string">on</span> <span class="string">master1:44526</span> <span class="string">(size:</span> <span class="number">1256.0</span> <span class="string">B,</span> <span class="attr">free:</span> <span class="number">413.9</span> <span class="string">MB)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:13 INFO spark.SparkContext:</span> <span class="string">Created</span> <span class="string">broadcast</span> <span class="number">0</span> <span class="string">from</span> <span class="string">broadcast</span> <span class="string">at</span> <span class="string">DAGScheduler.scala:1161</span></span><br><span class="line"><span class="attr">19/12/09 22:51:13 INFO scheduler.DAGScheduler:</span> <span class="string">Submitting</span> <span class="number">100</span> <span class="string">missing</span> <span class="string">tasks</span> <span class="string">from</span> <span class="string">ResultStage</span> <span class="number">0</span> <span class="string">(MapPartitionsRDD[1]</span> <span class="string">at</span> <span class="string">map</span> <span class="string">at</span> <span class="string">SparkPi.scala:34)</span> <span class="string">(first</span> <span class="number">15</span> <span class="string">tasks</span> <span class="string">are</span> <span class="string">for</span> <span class="string">partitions</span> <span class="string">Vector(0,</span> <span class="number">1</span><span class="string">,</span> <span class="number">2</span><span class="string">,</span> <span class="number">3</span><span class="string">,</span> <span class="number">4</span><span class="string">,</span> <span class="number">5</span><span class="string">,</span> <span class="number">6</span><span class="string">,</span> <span class="number">7</span><span class="string">,</span> <span class="number">8</span><span class="string">,</span> <span class="number">9</span><span class="string">,</span> <span class="number">10</span><span class="string">,</span> <span class="number">11</span><span class="string">,</span> <span class="number">12</span><span class="string">,</span> <span class="number">13</span><span class="string">,</span> <span class="number">14</span><span class="string">))</span></span><br><span class="line"><span class="attr">19/12/09 22:51:13 INFO scheduler.TaskSchedulerImpl:</span> <span class="string">Adding</span> <span class="string">task</span> <span class="string">set</span> <span class="number">0.0</span> <span class="string">with</span> <span class="number">100</span> <span class="string">tasks</span></span><br><span class="line"><span class="attr">19/12/09 22:51:28 WARN scheduler.TaskSchedulerImpl:</span> <span class="string">Initial</span> <span class="string">job</span> <span class="string">has</span> <span class="string">not</span> <span class="string">accepted</span> <span class="string">any</span> <span class="string">resources;</span> <span class="string">check</span> <span class="string">your</span> <span class="string">cluster</span> <span class="string">UI</span> <span class="string">to</span> <span class="string">ensure</span> <span class="string">that</span> <span class="string">workers</span> <span class="string">are</span> <span class="string">registered</span> <span class="string">and</span> <span class="string">have</span> <span class="string">sufficient</span> <span class="string">resources</span></span><br><span class="line"><span class="number">19</span><span class="string">/12/09</span> <span class="number">22</span><span class="string">:51:33</span> <span class="string">INFO</span> <span class="string">cluster.CoarseGrainedSchedulerBackend$DriverEndpoint:</span> <span class="string">Registered</span> <span class="string">executor</span> <span class="string">NettyRpcEndpointRef(spark-client://Executor)</span> <span class="string">(192.168.112.122:35134)</span> <span class="string">with</span> <span class="string">ID</span> <span class="number">0</span></span><br><span class="line"><span class="attr">19/12/09 22:51:33 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">0.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">0</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">0</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:35 INFO storage.BlockManagerMasterEndpoint:</span> <span class="string">Registering</span> <span class="string">block</span> <span class="string">manager</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">:44039</span> <span class="string">with</span> <span class="number">168.0</span> <span class="string">MB</span> <span class="string">RAM,</span> <span class="string">BlockManagerId(0,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="number">44039</span><span class="string">,</span> <span class="string">None)</span></span><br><span class="line"><span class="number">19</span><span class="string">/12/09</span> <span class="number">22</span><span class="string">:51:36</span> <span class="string">INFO</span> <span class="string">cluster.CoarseGrainedSchedulerBackend$DriverEndpoint:</span> <span class="string">Registered</span> <span class="string">executor</span> <span class="string">NettyRpcEndpointRef(spark-client://Executor)</span> <span class="string">(192.168.112.121:58772)</span> <span class="string">with</span> <span class="string">ID</span> <span class="number">1</span></span><br><span class="line"><span class="attr">19/12/09 22:51:36 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">1.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">1</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">1</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:40 INFO storage.BlockManagerMasterEndpoint:</span> <span class="string">Registering</span> <span class="string">block</span> <span class="string">manager</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">:41833</span> <span class="string">with</span> <span class="number">168.0</span> <span class="string">MB</span> <span class="string">RAM,</span> <span class="string">BlockManagerId(1,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="number">41833</span><span class="string">,</span> <span class="string">None)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:51 INFO storage.BlockManagerInfo:</span> <span class="string">Added</span> <span class="string">broadcast_0_piece0</span> <span class="string">in</span> <span class="string">memory</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">:44039</span> <span class="string">(size:</span> <span class="number">1256.0</span> <span class="string">B,</span> <span class="attr">free:</span> <span class="number">168.0</span> <span class="string">MB)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:53 INFO storage.BlockManagerInfo:</span> <span class="string">Added</span> <span class="string">broadcast_0_piece0</span> <span class="string">in</span> <span class="string">memory</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">:41833</span> <span class="string">(size:</span> <span class="number">1256.0</span> <span class="string">B,</span> <span class="attr">free:</span> <span class="number">168.0</span> <span class="string">MB)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:54 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">2.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">2</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">2</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:54 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">0.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">0</span><span class="string">)</span> <span class="string">in</span> <span class="number">20773</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(1/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:54 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">3.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">3</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">3</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:54 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">2.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">2</span><span class="string">)</span> <span class="string">in</span> <span class="number">606</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(2/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:55 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">4.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">4</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">4</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:55 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">3.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">3</span><span class="string">)</span> <span class="string">in</span> <span class="number">481</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(3/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:56 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">5.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">5</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">5</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:56 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">4.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">4</span><span class="string">)</span> <span class="string">in</span> <span class="number">760</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(4/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:56 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">6.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">6</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">6</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:56 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">1.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">1</span><span class="string">)</span> <span class="string">in</span> <span class="number">20403</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(5/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:56 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">7.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">7</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">7</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:56 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">6.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">6</span><span class="string">)</span> <span class="string">in</span> <span class="number">45</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(6/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:56 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">8.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">8</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">8</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:56 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">7.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">7</span><span class="string">)</span> <span class="string">in</span> <span class="number">38</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(7/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:56 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">9.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">9</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">9</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:56 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">8.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">8</span><span class="string">)</span> <span class="string">in</span> <span class="number">64</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(8/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:56 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">10.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">10</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">10</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:56 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">9.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">9</span><span class="string">)</span> <span class="string">in</span> <span class="number">31</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(9/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">11.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">11</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">11</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">10.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">10</span><span class="string">)</span> <span class="string">in</span> <span class="number">190</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(10/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">12.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">12</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">12</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">5.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">5</span><span class="string">)</span> <span class="string">in</span> <span class="number">1140</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(11/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">13.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">13</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">13</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">12.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">12</span><span class="string">)</span> <span class="string">in</span> <span class="number">30</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(12/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">14.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">14</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">14</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">13.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">13</span><span class="string">)</span> <span class="string">in</span> <span class="number">26</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(13/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">15.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">15</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">15</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">14.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">14</span><span class="string">)</span> <span class="string">in</span> <span class="number">49</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(14/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">16.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">16</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">16</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">11.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">11</span><span class="string">)</span> <span class="string">in</span> <span class="number">289</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(15/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">17.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">17</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">17</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">15.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">15</span><span class="string">)</span> <span class="string">in</span> <span class="number">36</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(16/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">18.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">18</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">18</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">17.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">17</span><span class="string">)</span> <span class="string">in</span> <span class="number">28</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(17/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">19.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">19</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">19</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">18.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">18</span><span class="string">)</span> <span class="string">in</span> <span class="number">25</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(18/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">20.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">20</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">20</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">19.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">19</span><span class="string">)</span> <span class="string">in</span> <span class="number">49</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(19/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">21.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">21</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">21</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">20.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">20</span><span class="string">)</span> <span class="string">in</span> <span class="number">46</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(20/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">22.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">22</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">22</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">21.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">21</span><span class="string">)</span> <span class="string">in</span> <span class="number">33</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(21/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">22.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">22</span><span class="string">)</span> <span class="string">in</span> <span class="number">30</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(22/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">23.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">23</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">23</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">24.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">24</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">24</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">23.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">23</span><span class="string">)</span> <span class="string">in</span> <span class="number">35</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(23/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">25.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">25</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">25</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">24.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">24</span><span class="string">)</span> <span class="string">in</span> <span class="number">40</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(24/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">26.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">26</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">26</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">25.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">25</span><span class="string">)</span> <span class="string">in</span> <span class="number">31</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(25/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">27.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">27</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">27</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">26.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">26</span><span class="string">)</span> <span class="string">in</span> <span class="number">91</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(26/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">28.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">28</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">28</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">27.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">27</span><span class="string">)</span> <span class="string">in</span> <span class="number">36</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(27/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">29.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">29</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">29</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">28.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">28</span><span class="string">)</span> <span class="string">in</span> <span class="number">29</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(28/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">30.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">30</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">30</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">29.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">29</span><span class="string">)</span> <span class="string">in</span> <span class="number">26</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(29/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">31.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">31</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">31</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">30.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">30</span><span class="string">)</span> <span class="string">in</span> <span class="number">34</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(30/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">32.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">32</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">32</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">31.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">31</span><span class="string">)</span> <span class="string">in</span> <span class="number">25</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(31/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">33.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">33</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">33</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">32.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">32</span><span class="string">)</span> <span class="string">in</span> <span class="number">20</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(32/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">34.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">34</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">34</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">33.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">33</span><span class="string">)</span> <span class="string">in</span> <span class="number">31</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(33/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">35.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">35</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">35</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">34.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">34</span><span class="string">)</span> <span class="string">in</span> <span class="number">21</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(34/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">36.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">36</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">36</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">35.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">35</span><span class="string">)</span> <span class="string">in</span> <span class="number">18</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(35/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">37.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">37</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">37</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">36.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">36</span><span class="string">)</span> <span class="string">in</span> <span class="number">27</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(36/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">38.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">38</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">38</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">37.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">37</span><span class="string">)</span> <span class="string">in</span> <span class="number">25</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(37/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">39.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">39</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">39</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:57 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">38.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">38</span><span class="string">)</span> <span class="string">in</span> <span class="number">19</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(38/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">40.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">40</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">40</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">39.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">39</span><span class="string">)</span> <span class="string">in</span> <span class="number">19</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(39/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">41.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">41</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">41</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">40.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">40</span><span class="string">)</span> <span class="string">in</span> <span class="number">29</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(40/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">42.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">42</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">42</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">16.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">16</span><span class="string">)</span> <span class="string">in</span> <span class="number">732</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(41/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">43.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">43</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">43</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">41.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">41</span><span class="string">)</span> <span class="string">in</span> <span class="number">24</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(42/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">44.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">44</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">44</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">43.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">43</span><span class="string">)</span> <span class="string">in</span> <span class="number">17</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(43/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">45.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">45</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">45</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">44.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">44</span><span class="string">)</span> <span class="string">in</span> <span class="number">18</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(44/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">46.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">46</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">46</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">45.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">45</span><span class="string">)</span> <span class="string">in</span> <span class="number">16</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(45/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">47.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">47</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">47</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">46.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">46</span><span class="string">)</span> <span class="string">in</span> <span class="number">15</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(46/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">48.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">48</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">48</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">47.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">47</span><span class="string">)</span> <span class="string">in</span> <span class="number">14</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(47/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">49.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">49</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">49</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">48.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">48</span><span class="string">)</span> <span class="string">in</span> <span class="number">30</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(48/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">50.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">50</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">50</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">49.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">49</span><span class="string">)</span> <span class="string">in</span> <span class="number">22</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(49/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">51.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">51</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">51</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">50.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">50</span><span class="string">)</span> <span class="string">in</span> <span class="number">33</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(50/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">52.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">52</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">52</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">51.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">51</span><span class="string">)</span> <span class="string">in</span> <span class="number">40</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(51/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">53.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">53</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">53</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">52.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">52</span><span class="string">)</span> <span class="string">in</span> <span class="number">36</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(52/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">54.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">54</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">54</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">53.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">53</span><span class="string">)</span> <span class="string">in</span> <span class="number">21</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(53/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">55.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">55</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">55</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">54.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">54</span><span class="string">)</span> <span class="string">in</span> <span class="number">23</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(54/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">56.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">56</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">56</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">42.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">42</span><span class="string">)</span> <span class="string">in</span> <span class="number">274</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(55/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">57.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">57</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">57</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">55.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">55</span><span class="string">)</span> <span class="string">in</span> <span class="number">24</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(56/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">58.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">58</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">58</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">57.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">57</span><span class="string">)</span> <span class="string">in</span> <span class="number">27</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(57/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">59.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">59</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">59</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">58.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">58</span><span class="string">)</span> <span class="string">in</span> <span class="number">24</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(58/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">60.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">60</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">60</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">59.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">59</span><span class="string">)</span> <span class="string">in</span> <span class="number">22</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(59/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">61.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">61</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">61</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">60.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">60</span><span class="string">)</span> <span class="string">in</span> <span class="number">33</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(60/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">62.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">62</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">62</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">61.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">61</span><span class="string">)</span> <span class="string">in</span> <span class="number">43</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(61/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">56.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">56</span><span class="string">)</span> <span class="string">in</span> <span class="number">151</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(62/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">63.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">63</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">63</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">62.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">62</span><span class="string">)</span> <span class="string">in</span> <span class="number">56</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(63/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">64.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">64</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">64</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">65.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">65</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">65</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">64.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">64</span><span class="string">)</span> <span class="string">in</span> <span class="number">36</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(64/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">66.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">66</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">66</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">65.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">65</span><span class="string">)</span> <span class="string">in</span> <span class="number">66</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(65/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">67.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">67</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">67</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">66.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">66</span><span class="string">)</span> <span class="string">in</span> <span class="number">69</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(66/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">68.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">68</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">68</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">67.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">67</span><span class="string">)</span> <span class="string">in</span> <span class="number">23</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(67/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">69.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">69</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">69</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">68.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">68</span><span class="string">)</span> <span class="string">in</span> <span class="number">25</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(68/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">70.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">70</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">70</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">69.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">69</span><span class="string">)</span> <span class="string">in</span> <span class="number">30</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(69/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">71.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">71</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">71</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">63.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">63</span><span class="string">)</span> <span class="string">in</span> <span class="number">246</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(70/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">72.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">72</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">72</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">70.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">70</span><span class="string">)</span> <span class="string">in</span> <span class="number">27</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(71/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">73.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">73</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">73</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">72.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">72</span><span class="string">)</span> <span class="string">in</span> <span class="number">30</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(72/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">74.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">74</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">74</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">73.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">73</span><span class="string">)</span> <span class="string">in</span> <span class="number">26</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(73/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">75.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">75</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">75</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">74.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">74</span><span class="string">)</span> <span class="string">in</span> <span class="number">28</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(74/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">76.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">76</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">76</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">75.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">75</span><span class="string">)</span> <span class="string">in</span> <span class="number">28</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(75/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">77.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">77</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">77</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">76.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">76</span><span class="string">)</span> <span class="string">in</span> <span class="number">20</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(76/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">78.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">78</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">78</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">77.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">77</span><span class="string">)</span> <span class="string">in</span> <span class="number">22</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(77/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">79.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">79</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">79</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">71.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">71</span><span class="string">)</span> <span class="string">in</span> <span class="number">167</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(78/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">80.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">80</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">80</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">79.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">79</span><span class="string">)</span> <span class="string">in</span> <span class="number">27</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(79/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">81.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">81</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">81</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">78.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">78</span><span class="string">)</span> <span class="string">in</span> <span class="number">62</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(80/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">80.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">80</span><span class="string">)</span> <span class="string">in</span> <span class="number">30</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(81/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">82.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">82</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">82</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">83.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">83</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">83</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">81.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">81</span><span class="string">)</span> <span class="string">in</span> <span class="number">26</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(82/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">84.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">84</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">84</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:58 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">82.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">82</span><span class="string">)</span> <span class="string">in</span> <span class="number">31</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(83/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">85.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">85</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">85</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">83.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">83</span><span class="string">)</span> <span class="string">in</span> <span class="number">27</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(84/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">86.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">86</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">86</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">84.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">84</span><span class="string">)</span> <span class="string">in</span> <span class="number">40</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(85/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">85.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">85</span><span class="string">)</span> <span class="string">in</span> <span class="number">27</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(86/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">87.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">87</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">87</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">88.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">88</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">88</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">87.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">87</span><span class="string">)</span> <span class="string">in</span> <span class="number">23</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(87/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">89.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">89</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">89</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">86.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">86</span><span class="string">)</span> <span class="string">in</span> <span class="number">32</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(88/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">90.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">90</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">90</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">91.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">91</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">91</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">89.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">89</span><span class="string">)</span> <span class="string">in</span> <span class="number">211</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(89/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">88.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">88</span><span class="string">)</span> <span class="string">in</span> <span class="number">215</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(90/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">92.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">92</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">92</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">91.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">91</span><span class="string">)</span> <span class="string">in</span> <span class="number">23</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(91/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">93.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">93</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">93</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">90.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">90</span><span class="string">)</span> <span class="string">in</span> <span class="number">203</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(92/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">94.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">94</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">94</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">92.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">92</span><span class="string">)</span> <span class="string">in</span> <span class="number">25</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(93/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">95.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">95</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">95</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">93.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">93</span><span class="string">)</span> <span class="string">in</span> <span class="number">24</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(94/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">96.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">96</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">96</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">94.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">94</span><span class="string">)</span> <span class="string">in</span> <span class="number">26</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(95/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">97.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">97</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">97</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">96.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">96</span><span class="string">)</span> <span class="string">in</span> <span class="number">19</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(96/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">98.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">98</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span><span class="string">,</span> <span class="string">executor</span> <span class="number">0</span><span class="string">,</span> <span class="string">partition</span> <span class="number">98</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">95.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">95</span><span class="string">)</span> <span class="string">in</span> <span class="number">39</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(97/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Starting</span> <span class="string">task</span> <span class="number">99.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">99</span><span class="string">,</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span><span class="string">,</span> <span class="string">executor</span> <span class="number">1</span><span class="string">,</span> <span class="string">partition</span> <span class="number">99</span><span class="string">,</span> <span class="string">PROCESS_LOCAL,</span> <span class="number">7870</span> <span class="string">bytes)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">97.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">97</span><span class="string">)</span> <span class="string">in</span> <span class="number">23</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(98/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">98.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">98</span><span class="string">)</span> <span class="string">in</span> <span class="number">31</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.122</span> <span class="string">(executor</span> <span class="number">0</span><span class="string">)</span> <span class="string">(99/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSetManager:</span> <span class="string">Finished</span> <span class="string">task</span> <span class="number">99.0</span> <span class="string">in</span> <span class="string">stage</span> <span class="number">0.0</span> <span class="string">(TID</span> <span class="number">99</span><span class="string">)</span> <span class="string">in</span> <span class="number">20</span> <span class="string">ms</span> <span class="string">on</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.121</span> <span class="string">(executor</span> <span class="number">1</span><span class="string">)</span> <span class="string">(100/100)</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.TaskSchedulerImpl:</span> <span class="string">Removed</span> <span class="string">TaskSet</span> <span class="number">0.0</span><span class="string">,</span> <span class="string">whose</span> <span class="string">tasks</span> <span class="string">have</span> <span class="string">all</span> <span class="string">completed,</span> <span class="string">from</span> <span class="string">pool</span> </span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.DAGScheduler:</span> <span class="string">ResultStage</span> <span class="number">0</span> <span class="string">(reduce</span> <span class="string">at</span> <span class="string">SparkPi.scala:38)</span> <span class="string">finished</span> <span class="string">in</span> <span class="number">48.587</span> <span class="string">s</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO scheduler.DAGScheduler: Job 0 finished:</span> <span class="string">reduce</span> <span class="string">at</span> <span class="string">SparkPi.scala:38,</span> <span class="string">took</span> <span class="number">49.130196</span> <span class="string">s</span></span><br><span class="line"><span class="string">Pi</span> <span class="string">is</span> <span class="string">roughly</span> <span class="number">3.1412139141213915</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO server.AbstractConnector:</span> <span class="string">Stopped</span> <span class="string">Spark@4e4f58b8&#123;HTTP/1.1,[http/1.1]&#125;&#123;0.0.0.0:4040&#125;</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO ui.SparkUI:</span> <span class="string">Stopped</span> <span class="string">Spark</span> <span class="string">web</span> <span class="string">UI</span> <span class="string">at</span> <span class="string">http://master1:4040</span></span><br><span class="line"><span class="attr">19/12/09 22:51:59 INFO cluster.StandaloneSchedulerBackend:</span> <span class="string">Shutting</span> <span class="string">down</span> <span class="string">all</span> <span class="string">executors</span></span><br><span class="line"><span class="number">19</span><span class="string">/12/09</span> <span class="number">22</span><span class="string">:51:59</span> <span class="string">INFO</span> <span class="string">cluster.CoarseGrainedSchedulerBackend$DriverEndpoint:</span> <span class="string">Asking</span> <span class="string">each</span> <span class="string">executor</span> <span class="string">to</span> <span class="string">shut</span> <span class="string">down</span></span><br><span class="line"><span class="attr">19/12/09 22:52:00 INFO spark.MapOutputTrackerMasterEndpoint:</span> <span class="string">MapOutputTrackerMasterEndpoint</span> <span class="string">stopped!</span></span><br><span class="line"><span class="attr">19/12/09 22:52:00 INFO memory.MemoryStore:</span> <span class="string">MemoryStore</span> <span class="string">cleared</span></span><br><span class="line"><span class="attr">19/12/09 22:52:00 INFO storage.BlockManager:</span> <span class="string">BlockManager</span> <span class="string">stopped</span></span><br><span class="line"><span class="attr">19/12/09 22:52:00 INFO storage.BlockManagerMaster:</span> <span class="string">BlockManagerMaster</span> <span class="string">stopped</span></span><br><span class="line"><span class="number">19</span><span class="string">/12/09</span> <span class="number">22</span><span class="string">:52:00</span> <span class="string">INFO</span> <span class="string">scheduler.OutputCommitCoordinator$OutputCommitCoordinatorEndpoint:</span> <span class="string">OutputCommitCoordinator</span> <span class="string">stopped!</span></span><br><span class="line"><span class="attr">19/12/09 22:52:00 INFO spark.SparkContext:</span> <span class="string">Successfully</span> <span class="string">stopped</span> <span class="string">SparkContext</span></span><br><span class="line"><span class="attr">19/12/09 22:52:00 INFO util.ShutdownHookManager:</span> <span class="string">Shutdown</span> <span class="string">hook</span> <span class="string">called</span></span><br><span class="line"><span class="attr">19/12/09 22:52:00 INFO util.ShutdownHookManager:</span> <span class="string">Deleting</span> <span class="string">directory</span> <span class="string">/tmp/spark-f26e5cea-4f00-4647-af4d-dab993ca947c</span></span><br><span class="line"><span class="attr">19/12/09 22:52:00 INFO util.ShutdownHookManager:</span> <span class="string">Deleting</span> <span class="string">directory</span> <span class="string">/tmp/spark-c61eaf6a-be22-463a-9578-bb479e91105e</span></span><br></pre></td></tr></table></figure><p><img src="/images/spark/spark_pi.png" alt="运行过程中"><br><img src="/images/spark/spark_pi_result.png" alt="运行结束"><br>也可以用spark-shell连接到独立集群管理器上</p><h1 id="采用Hadoop-YARN管理器"><a href="#采用Hadoop-YARN管理器" class="headerlink" title="采用Hadoop YARN管理器"></a>采用Hadoop YARN管理器</h1><p>向Hadoop YARN集群管理器提交应用，需要把yarn-cluster作为主要参数传递给spark-submit。</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br></pre></td><td class="code"><pre><span class="line">root@master1:/usr/local/spark/spark-<span class="number">2.4</span>.<span class="number">4</span>-bin-hadoop2.<span class="number">6</span>/bin<span class="comment"># spark-submit --class org.apache.spark.examples.SparkPi --master yarn-cluster ../examples/jars/spark-examples_2.11-2.4.4.jarWarning: Master yarn-cluster is deprecated since 2.0. Please use master "yarn" with specified deploy mode instead.</span></span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">17</span> WARN util.NativeCodeLoader: Unable <span class="keyword">to</span> <span class="built_in">load</span> native-hadoop library <span class="keyword">for</span> your platform... using builtin-java classes where applicable</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">18</span> INFO client.RMProxy: Connecting <span class="keyword">to</span> ResourceManager at master1/<span class="number">192.168</span>.<span class="number">112.120</span>:<span class="number">8032</span></span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">18</span> INFO yarn.Client: Requesting a new application <span class="keyword">from</span> cluster with <span class="number">2</span> NodeManagers</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">19</span> INFO yarn.Client: Verifying our application has not requested more than the maximum memory capability of the cluster (<span class="number">8192</span> MB per container)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">19</span> INFO yarn.Client: Will allocate AM container, with <span class="number">1408</span> MB memory including <span class="number">384</span> MB overhead</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">19</span> INFO yarn.Client: Setting up container launch context <span class="keyword">for</span> our AM</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">19</span> INFO yarn.Client: Setting up the launch environment <span class="keyword">for</span> our AM container</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">19</span> INFO yarn.Client: Preparing resources <span class="keyword">for</span> our AM container</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">19</span> WARN yarn.Client: Neither spark.yarn.jars nor spark.yarn.archive is <span class="built_in">set</span>, falling back <span class="keyword">to</span> uploading libraries under SPARK_HOME.</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">25</span> INFO yarn.Client: Uploading resource file:/tmp/spark-<span class="number">1</span>d442b04-<span class="number">7</span>d9f-<span class="number">43</span>b5-b545-<span class="number">6</span>ba142b05fac/__spark_libs__8206803058515169480.zip -&gt; hdfs://master1:<span class="number">9000</span>/<span class="keyword">user</span>/root/.sparkStaging/application_1575900906070_0001/__spark_libs__8206803058515169480.zip</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">37</span> INFO yarn.Client: Uploading resource file:/usr/local/spark/spark-<span class="number">2.4</span>.<span class="number">4</span>-bin-hadoop2.<span class="number">6</span>/examples/jars/spark-examples_2.<span class="number">11</span>-<span class="number">2.4</span>.<span class="number">4</span>.jar -&gt; hdfs://master1:<span class="number">9000</span>/<span class="keyword">user</span>/root/.sparkStaging/application_1575900906070_0001/spark-examples_2.<span class="number">11</span>-<span class="number">2.4</span>.<span class="number">4</span>.jar</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">38</span> INFO yarn.Client: Uploading resource file:/tmp/spark-<span class="number">1</span>d442b04-<span class="number">7</span>d9f-<span class="number">43</span>b5-b545-<span class="number">6</span>ba142b05fac/__spark_conf__3621272077162715481.zip -&gt; hdfs://master1:<span class="number">9000</span>/<span class="keyword">user</span>/root/.sparkStaging/application_1575900906070_0001/__spark_conf__.zip</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">38</span> INFO spark.SecurityManager: Changing view acls <span class="keyword">to</span>: root</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">38</span> INFO spark.SecurityManager: Changing modify acls <span class="keyword">to</span>: root</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">38</span> INFO spark.SecurityManager: Changing view acls groups <span class="keyword">to</span>: </span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">38</span> INFO spark.SecurityManager: Changing modify acls groups <span class="keyword">to</span>: </span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">38</span> INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(root); groups with view permissions: Set(); users  with modify permissions: Set(root); groups with modify permissions: Set()</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">40</span> INFO yarn.Client: Submitting application application_1575900906070_0001 <span class="keyword">to</span> ResourceManager</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">41</span> INFO impl.YarnClientImpl: Submitted application application_1575900906070_0001</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">42</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">42</span> INFO yarn.Client: </span><br><span class="line">         client token: N/A</span><br><span class="line">         diagnostics: N/A</span><br><span class="line">         ApplicationMaster host: N/A</span><br><span class="line">         ApplicationMaster RPC <span class="keyword">port</span>: -<span class="number">1</span></span><br><span class="line">         queue: <span class="keyword">default</span></span><br><span class="line">         start time: <span class="number">1575903821002</span></span><br><span class="line">         final status: UNDEFINED</span><br><span class="line">         tracking URL: http://master1:<span class="number">8088</span>/proxy/application_1575900906070_0001/</span><br><span class="line">         <span class="keyword">user</span>: root</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">43</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">44</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">45</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">46</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">47</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">48</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">49</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">50</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">51</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">52</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">53</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">54</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">55</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">56</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">57</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">58</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">03</span>:<span class="number">59</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">00</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">01</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">02</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">03</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">04</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">05</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">06</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">07</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">08</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">09</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">10</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">11</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">12</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">13</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">14</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">15</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">16</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">17</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">18</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">19</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">20</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">21</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">22</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">23</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">24</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">25</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">26</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">27</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">28</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">29</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">30</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">31</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">32</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">33</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">34</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">35</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">36</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">37</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">38</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">39</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">40</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">41</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">42</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">43</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">44</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">45</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">46</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">47</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: ACCEPTED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">48</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">48</span> INFO yarn.Client: </span><br><span class="line">         client token: N/A</span><br><span class="line">         diagnostics: N/A</span><br><span class="line">         ApplicationMaster host: worker2</span><br><span class="line">         ApplicationMaster RPC <span class="keyword">port</span>: <span class="number">46666</span></span><br><span class="line">         queue: <span class="keyword">default</span></span><br><span class="line">         start time: <span class="number">1575903821002</span></span><br><span class="line">         final status: UNDEFINED</span><br><span class="line">         tracking URL: http://master1:<span class="number">8088</span>/proxy/application_1575900906070_0001/</span><br><span class="line">         <span class="keyword">user</span>: root</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">49</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">50</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">51</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">52</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">53</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">54</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">55</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">56</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">57</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">58</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">04</span>:<span class="number">59</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">00</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">01</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">02</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">03</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">04</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">05</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">06</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">07</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">08</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">09</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">10</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">11</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">12</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">13</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">14</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">15</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">16</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">17</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">18</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">19</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">20</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">21</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">22</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">23</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">24</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">25</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">26</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">27</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">28</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">29</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">30</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">31</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">32</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">33</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">34</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">35</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">36</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">37</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">38</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">39</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">40</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">41</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">42</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">43</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">44</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">45</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">46</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">47</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">48</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">49</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">50</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">51</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">52</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">53</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">54</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">55</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">56</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">57</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">58</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">05</span>:<span class="number">59</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">00</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">01</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">02</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">03</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">04</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">05</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">06</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">07</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">08</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">09</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">10</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">11</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">12</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">13</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">14</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">15</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">16</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">17</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">18</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">19</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">20</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">21</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: RUNNING)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">22</span> INFO yarn.Client: Application report <span class="keyword">for</span> application_1575900906070_0001 (<span class="keyword">state</span>: FINISHED)</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">22</span> INFO yarn.Client: </span><br><span class="line">         client token: N/A</span><br><span class="line">         diagnostics: N/A</span><br><span class="line">         ApplicationMaster host: worker2</span><br><span class="line">         ApplicationMaster RPC <span class="keyword">port</span>: <span class="number">46666</span></span><br><span class="line">         queue: <span class="keyword">default</span></span><br><span class="line">         start time: <span class="number">1575903821002</span></span><br><span class="line">         final status: SUCCEEDED</span><br><span class="line">         tracking URL: http://master1:<span class="number">8088</span>/proxy/application_1575900906070_0001/A</span><br><span class="line">         <span class="keyword">user</span>: root</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">22</span> INFO util.ShutdownHookManager: Shutdown hook called</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">22</span> INFO util.ShutdownHookManager: Deleting directory /tmp/spark-d61c2e6f-<span class="number">2691</span>-<span class="number">4</span>a92-<span class="number">84</span>cf-d0afa23334cc</span><br><span class="line"><span class="number">19</span>/<span class="number">12</span>/<span class="number">09</span> <span class="number">23</span>:<span class="number">06</span>:<span class="number">22</span> INFO util.ShutdownHookManager: Deleting directory /tmp/spark-<span class="number">1</span>d442b04-<span class="number">7</span>d9f-<span class="number">43</span>b5-b545-<span class="number">6</span>ba142b05fac</span><br></pre></td></tr></table></figure><p>这时查看hadoop yarn的管理界面<a href="http://192.168.112.120:8088/cluster" target="_blank" rel="noopener">192.168.112.120:8088</a>，可以看到有运行的job。<br><img src="/images/hadoop/hadoop_yarn_execute_job.png" alt="job运行中"><br><img src="/images/hadoop/hadoop_yarn_execute_job_result.png" alt="job运行结束"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;下面在搭建的集群中运行spark自带的例子，体验一下spark独立集群管理器和采用Hadoop YARN管理器的不同。&lt;/p&gt;
&lt;h1 id=&quot;采用独立集群管理器&quot;&gt;&lt;a href=&quot;#采用独立集群管理器&quot; class=&quot;headerlink&quot; title=&quot;采用独立集群管
      
    
    </summary>
    
    
      <category term="spark" scheme="http://sparkx.com.cn/categories/spark/"/>
    
    
      <category term="spark" scheme="http://sparkx.com.cn/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>spark集群环境搭建</title>
    <link href="http://sparkx.com.cn/spark/spark-setup/"/>
    <id>http://sparkx.com.cn/spark/spark-setup/</id>
    <published>2019-12-05T12:19:59.000Z</published>
    <updated>2019-12-09T15:14:40.399Z</updated>
    
    <content type="html"><![CDATA[<p>工欲善其事必先利其器，所以这节就简单介绍一下spark集群环境的搭建。</p><h1 id="虚拟机准备"><a href="#虚拟机准备" class="headerlink" title="虚拟机准备"></a>虚拟机准备</h1><p>虚拟机这里使用Ubuntn，具体版本可以自己选择，安装方法网上很容易搜索到，自行安装即可。</p><h1 id="Hadoop环境搭建"><a href="#Hadoop环境搭建" class="headerlink" title="Hadoop环境搭建"></a>Hadoop环境搭建</h1><p>搭建虚拟机环境可能遇到下面问题，根据给出的博客解决即可。</p><ul><li><a href="https://www.iteye.com/blog/kevin12-2271687" target="_blank" rel="noopener">Ubuntu15.10设置用root账号登录</a></li><li><a href="https://www.iteye.com/blog/kevin12-2271690" target="_blank" rel="noopener">VMware中安装了ubuntu全屏设置</a></li><li><a href="https://www.iteye.com/blog/kevin12-2273491" target="_blank" rel="noopener">ubuntu 15.10虚拟机设置静态ip</a></li><li><a href="https://www.iteye.com/blog/kevin12-2273532" target="_blank" rel="noopener">hadoop2.6.0集群的搭建方法</a></li><li><a href="https://www.iteye.com/blog/kevin12-2273556" target="_blank" rel="noopener">spark1.6.0搭建（基于hadoop2.6.0分布式）</a><h1 id="Spark2-x的搭建步骤"><a href="#Spark2-x的搭建步骤" class="headerlink" title="Spark2.x的搭建步骤"></a>Spark2.x的搭建步骤</h1>Spark2.x的搭建和1.6.0搭建基本一样，下面记录一下自己搭建的简单步骤：<br>下载如下图：<a href="http://spark.apache.org/downloads.html" target="_blank" rel="noopener">点击进入官网</a><br><img src="/images/spark/spark_down.png" alt=""><br>拷贝到master1的/usr/local/spark目录下面，执行<code>tar -zxvf spark-2.4.4-bin-hadoop2.6.tar</code>命令解压。<br>将路径添加到环境变量中：<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/usr/local/jdk/jdk1.8.0_71</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">JRE_HOME</span>=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">MAVEN_HOME</span>=/usr/local/maven/apache-maven-3.3.9</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">SCALA_HOME</span>=/usr/local/scala/scala-2.11.0</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HADOOP_HOME</span>=/usr/local/hadoop/hadoop-2.6.0</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HADOOP_CONF_DIR</span>=<span class="variable">$&#123;HADOOP_HOME&#125;</span>/etc/hadoop</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HADOOP_COMMON_LIB_NATIVE_DIR</span>=<span class="variable">$&#123;HADOOP_HOME&#125;</span>/lib/native</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HADOOP_OPTS</span>=<span class="string">"-Djava.library.path=<span class="variable">$&#123;HADOOP_HOME&#125;</span>/lib"</span></span><br><span class="line"><span class="comment">#export SPARK_HOME=/usr/local/spark/spark-1.6.0-bin-hadoop2.6</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">SPARK_HOME</span>=/usr/local/spark/spark-2.4.4-bin-hadoop2.6</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HIVE_HOME</span>=/usr/local/hive/apache-hive-1.2.1-bin</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HIVE_CONF_DIR</span>=<span class="variable">$&#123;HIVE_HOME&#125;</span>/conf</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ZOOKEEPER_HOME</span>=/usr/local/zookeeper/zookeeper-3.4.6</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">JSTORM_HOME</span>=/usr/local/jstorm/jstorm-2.1.1</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">STORM_HOME</span>=/usr/local/storm/apache-storm-1.0.1</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">KAFKA_HOME</span>=/usr/local/kafka/kafka_2.10-0.10.0.0</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">NODEJS_HOME</span>=/usr/local/nodejs/node-v4.4.7-linux-x64</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">IDEA_HOME</span>=/root/tools/idea</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ECLIPLSE_HOME</span>=/root/tools/eclipse</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOMCAT_HOME</span>=/usr/local/apache-tomcat-7.0.52</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CLASS_PATH</span>=.:$&#123;JAVA_HOME&#125;/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib:<span class="variable">$&#123;HIVE_HOME&#125;</span>/lib</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=.:$&#123;JAVA_HOME&#125;/bin:<span class="variable">$&#123;MAVEN_HOME&#125;</span>/bin:<span class="variable">$&#123;SCALA_HOME&#125;</span>/bin:<span class="variable">$&#123;HADOOP_HOME&#125;</span>/bin:<span class="variable">$&#123;HADOOP_HOME&#125;</span>/sbin:<span class="variable">$&#123;SPARK_HOME&#125;</span>/bin:<span class="variable">$&#123;SPARK_HOME&#125;</span>/sbin:<span class="variable">$&#123;IDEA_HOME&#125;</span>/bin:<span class="variable">$&#123;ECLIPLSE_HOME&#125;</span>:<span class="variable">$&#123;HIVE_HOME&#125;</span>/bin:<span class="variable">$&#123;ZOOKEEPER_HOME&#125;</span>/bin:<span class="variable">$&#123;JSTORM&#125;</span>/bin:<span class="variable">$&#123;STORM_HOME&#125;</span>/bin:<span class="variable">$&#123;KAFKA_HOME&#125;</span>/bin:<span class="variable">$&#123;NODEJS_HOME&#125;</span>/bin:<span class="variable">$&#123;TOMCAT_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>配置Spark<br>配置slaves文件,进入/usr/local/spark/spark-2.4.4-bin-hadoop2.6目录，执行<code>mv slaves.template slaves</code>命令，重命名。<br>将<code>localhost</code>改为：<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">worker1</span><br><span class="line">worker2</span><br></pre></td></tr></table></figure>配置spark-env.sh文件，进入/usr/local/spark/spark-2.4.4-bin-hadoop2.6目录，执行命令<code>mv spark-env.sh.template spark-env.sh</code>命令，重命名。<br>添加如下内容：<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/usr/local/jdk/jdk1.8.0_71</span><br><span class="line"><span class="builtin-name">export</span> <span class="builtin-name">export</span> <span class="attribute">SCALA_HOME</span>=/usr/local/scala/scala-2.11.0</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HADOOP_HOME</span>=/usr/local/hadoop/hadoop-2.6.0</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HADOOP_CONF_DIR</span>=<span class="variable">$&#123;HADOOP_HOME&#125;</span>/etc/hadoop</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">SPARK_MASTER_IP</span>=master1</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">SPARK_WORKER_MEMORY</span>=600m</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">SPARK_EXECUTOR_MEMORY</span>=600m</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">SPARK_DRIVER_MEMORY</span>=1g</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">SPARK_WORKDER_CORES</span>=2</span><br></pre></td></tr></table></figure>配置完成后，将master1上的/usr/local/spark/spark-2.4.4-bin-hadoop2.6拷贝到worer1和worker2中的/usr/local/spark目录下面。<br>命令:<code>scp -r ./spark-2.4.4-bin-hadoop2.6 worker1:/usr/local/spark/</code>拷贝到worker1。<br>命令:<code>scp -r ./spark-2.4.4-bin-hadoop2.6 worker2:/usr/local/spark/</code>拷贝到worker2。<br>至此，spark集群配置完成。<h1 id="启动Spark集群"><a href="#启动Spark集群" class="headerlink" title="启动Spark集群"></a>启动Spark集群</h1>首先启动hadoop集群。在master1节点上，进入root@master1:/usr/local/hadoop/hadoop-2.6.0/sbin目录运行如下命令<code>start-all.sh</code>启动hadoop。<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">root@master1:/usr/local/hadoop/hadoop-2.6.0/sbin# start-all.sh</span><br><span class="line">This<span class="built_in"> script </span>is Deprecated. Instead use start-dfs.sh <span class="keyword">and</span> start-yarn.sh</span><br><span class="line">19/12/09 22:14:46 WARN util.NativeCodeLoader: Unable <span class="keyword">to</span> load native-hadoop library <span class="keyword">for</span> your platform<span class="built_in">..</span>. using builtin-java classes where applicable</span><br><span class="line">Starting namenodes on [master1]</span><br><span class="line">master1: starting namenode,<span class="built_in"> logging </span><span class="keyword">to</span> /usr/local/hadoop/hadoop-2.6.0/logs/hadoop-root-namenode-master1.out</span><br><span class="line">worker2: starting datanode,<span class="built_in"> logging </span><span class="keyword">to</span> /usr/local/hadoop/hadoop-2.6.0/logs/hadoop-root-datanode-worker2.out</span><br><span class="line">worker1: starting datanode,<span class="built_in"> logging </span><span class="keyword">to</span> /usr/local/hadoop/hadoop-2.6.0/logs/hadoop-root-datanode-worker1.out</span><br><span class="line">Starting secondary namenodes [master1]</span><br><span class="line">master1: starting secondarynamenode,<span class="built_in"> logging </span><span class="keyword">to</span> /usr/local/hadoop/hadoop-2.6.0/logs/hadoop-root-secondarynamenode-master1.out</span><br><span class="line">19/12/09 22:15:03 WARN util.NativeCodeLoader: Unable <span class="keyword">to</span> load native-hadoop library <span class="keyword">for</span> your platform<span class="built_in">..</span>. using builtin-java classes where applicable</span><br><span class="line">starting yarn daemons</span><br><span class="line">starting resourcemanager,<span class="built_in"> logging </span><span class="keyword">to</span> /usr/local/hadoop/hadoop-2.6.0/logs/yarn-root-resourcemanager-master1.out</span><br><span class="line">worker1: starting nodemanager,<span class="built_in"> logging </span><span class="keyword">to</span> /usr/local/hadoop/hadoop-2.6.0/logs/yarn-root-nodemanager-worker1.out</span><br><span class="line">worker2: starting nodemanager,<span class="built_in"> logging </span><span class="keyword">to</span> /usr/local/hadoop/hadoop-2.6.0/logs/yarn-root-nodemanager-worker2.out</span><br><span class="line">root@master1:/usr/local/hadoop/hadoop-2.6.0/sbin# jps 用jps命令查看进程</span><br><span class="line">54320 SecondaryNameNode</span><br><span class="line">54706 ResourceManager</span><br><span class="line">58724 Jps</span><br><span class="line">53786 NameNode</span><br><span class="line">root@worker1:~# jps  worker1上的进程</span><br><span class="line">6069 Jps</span><br><span class="line">5766 DataNode</span><br><span class="line">5896 NodeManager</span><br><span class="line">root@worker2:~# jps  worker2上的进程</span><br><span class="line">5450 DataNode</span><br><span class="line">5756 Jps</span><br><span class="line">5580 NodeManager</span><br><span class="line">root@worker2:~# </span><br><span class="line">master1上显示以上4个进程，worker上显示上面3个进程说明hadoop启动成功。</span><br></pre></td></tr></table></figure>我的集群ip配置如下：<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@master1:~# cat /etc/hosts</span><br><span class="line"><span class="number">127.0.0.1</span>       localhost</span><br><span class="line"><span class="number">192.168.112.120</span> master1</span><br><span class="line"><span class="number">192.168.112.121</span> worker1</span><br><span class="line"><span class="number">192.168.112.122</span> worker2</span><br></pre></td></tr></table></figure>所以在浏览器中输入<a href="192.168.112.120:8088">192.168.112.120:8088</a>即可以查看hadoop yarn管理界。<br><img src="/images/hadoop/hadoop_cluster.png" alt=""><br>在浏览器中输入<a href="http://192.168.112.120:50070" target="_blank" rel="noopener">192.168.112.120:50070</a>可以查看hadoop集群状况。<br><img src="/images/hadoop/hadoop_cluster1.png" alt=""></li></ul><p><strong>启动Spark Mster节点</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root@</span>master1:/usr/local/spark/spark<span class="number">-2.4</span><span class="number">.4</span>-bin-hadoop2<span class="number">.6</span>/sbin# start-all.sh</span><br><span class="line">starting org.apache.spark.deploy.master.Master, logging to /usr/local/spark/spark<span class="number">-2.4</span><span class="number">.4</span>-bin-hadoop2<span class="number">.6</span>/logs/spark-root-org.apache.spark.deploy.master.Master<span class="number">-1</span>-master1.<span class="keyword">out</span></span><br><span class="line">worker2: starting org.apache.spark.deploy.worker.Worker, logging to /usr/local/spark/spark<span class="number">-2.4</span><span class="number">.4</span>-bin-hadoop2<span class="number">.6</span>/logs/spark-root-org.apache.spark.deploy.worker.Worker<span class="number">-1</span>-worker2.<span class="keyword">out</span></span><br><span class="line">worker1: starting org.apache.spark.deploy.worker.Worker, logging to /usr/local/spark/spark<span class="number">-2.4</span><span class="number">.4</span>-bin-hadoop2<span class="number">.6</span>/logs/spark-root-org.apache.spark.deploy.worker.Worker<span class="number">-1</span>-worker1.<span class="keyword">out</span></span><br><span class="line">再次查看进程</span><br><span class="line"><span class="symbol">root@</span>master1:/usr/local/spark/spark<span class="number">-2.4</span><span class="number">.4</span>-bin-hadoop2<span class="number">.6</span>/sbin# jps</span><br><span class="line"><span class="number">54320</span> SecondaryNameNode</span><br><span class="line"><span class="number">18386</span> Jps</span><br><span class="line"><span class="number">54706</span> ResourceManager</span><br><span class="line"><span class="number">53786</span> NameNode</span><br><span class="line"><span class="number">17563</span> Master</span><br><span class="line"></span><br><span class="line"><span class="symbol">root@</span>worker1:~# jps</span><br><span class="line"><span class="number">6370</span> Jps</span><br><span class="line"><span class="number">6310</span> Worker</span><br><span class="line"><span class="number">5766</span> DataNode</span><br><span class="line"><span class="number">5896</span> NodeManager</span><br><span class="line"></span><br><span class="line"><span class="symbol">root@</span>worker2:~# jps</span><br><span class="line"><span class="number">5991</span> Worker</span><br><span class="line"><span class="number">5450</span> DataNode</span><br><span class="line"><span class="number">6043</span> Jps</span><br><span class="line"><span class="number">5580</span> NodeManager</span><br><span class="line">可以看到master上多了一个Master进程，worker1和worker2上分别多了Worker进程,说明spark集群启动成功。</span><br></pre></td></tr></table></figure><p>在浏览器中输入<a href="http://192.168.112.120:8080/" target="_blank" rel="noopener">192.168.112.120:8080</a>即可进入spark web页面查看spark集群的信息。<br><img src="/images/spark/spark_web.png" alt=""></p><h1 id="关闭Spark集群"><a href="#关闭Spark集群" class="headerlink" title="关闭Spark集群"></a>关闭Spark集群</h1><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@master1</span><span class="symbol">:/usr/local/spark/spark-</span><span class="number">2.4</span>.<span class="number">4</span>-bin-hadoop2.<span class="number">6</span>/sbin<span class="comment"># stop-all.sh</span></span><br><span class="line"><span class="symbol">worker2:</span> stopping org.apache.spark.deploy.worker.Worker</span><br><span class="line"><span class="symbol">worker1:</span> stopping org.apache.spark.deploy.worker.Worker</span><br><span class="line">stopping org.apache.spark.deploy.master.Master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;工欲善其事必先利其器，所以这节就简单介绍一下spark集群环境的搭建。&lt;/p&gt;
&lt;h1 id=&quot;虚拟机准备&quot;&gt;&lt;a href=&quot;#虚拟机准备&quot; class=&quot;headerlink&quot; title=&quot;虚拟机准备&quot;&gt;&lt;/a&gt;虚拟机准备&lt;/h1&gt;&lt;p&gt;虚拟机这里使用Ubuntn，具
      
    
    </summary>
    
    
      <category term="spark" scheme="http://sparkx.com.cn/categories/spark/"/>
    
    
      <category term="spark" scheme="http://sparkx.com.cn/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>scala 快速入门3</title>
    <link href="http://sparkx.com.cn/scala/scala-note3/"/>
    <id>http://sparkx.com.cn/scala/scala-note3/</id>
    <published>2019-12-01T08:17:47.000Z</published>
    <updated>2019-12-09T13:48:28.706Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/scala.png" alt=""></p><h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><p>Scala中的继承与Java有着明显的不同，体现在下面几点：</p><ul><li>重写一个非抽象方法必须使用override修饰符</li><li>只有主构造器可以调用超类的主构造器</li><li>在子类中重写超类的抽象方法时，不需要使用override关键字</li><li>可以重写超类中的字段<br>Scala和Java一样，不允许类从多个超类继承。下面是一个抽象类和继承的例子，解释见注释。<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;<span class="comment">//抽象类，不能直接被实例化,必须使用abstract关键字</span></span><br><span class="line">  <span class="keyword">val</span> carBrand:<span class="type">String</span> <span class="comment">//字段没有初始化值，就是一个抽象字段，但是必须声明类型，否则编译报错</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">info</span></span>() <span class="comment">//抽象方法，不需要使用abstract关键字</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">greeting</span></span>()&#123;println(<span class="string">"welecome to my car"</span>)&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BMWCar</span> <span class="keyword">extends</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">  <span class="keyword">override</span> <span class="keyword">val</span> carBrand =<span class="string">"BMW"</span> <span class="comment">//重写超类字段，使用override关键字否则编译报错</span></span><br><span class="line">  <span class="comment">//重写超类抽象方法时，不需要使用override关键字，不过如果加上override编译也不会报错</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">info</span></span>()&#123;printf(<span class="string">"This is a %s car\n"</span>,carBrand)&#125;</span><br><span class="line">  <span class="comment">//重写超类的非抽象方法，必须使用关键字override</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">greeting</span></span>()&#123;println(<span class="string">"welcome to my BMW car"</span>)&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BYDCar</span> <span class="keyword">extends</span>  <span class="title">Car</span></span>&#123;</span><br><span class="line">  <span class="keyword">override</span> <span class="keyword">val</span> carBrand =<span class="string">"BYD"</span> <span class="comment">//重写超类字段，使用override关键字否则编译报错</span></span><br><span class="line">  <span class="comment">//重写超类抽象方法时，不需要使用override关键字，不过如果加上override编译也不会报错</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">info</span></span>()&#123;printf(<span class="string">"This is a %s car\n"</span>,carBrand)&#125;</span><br><span class="line">  <span class="comment">//重写超类的非抽象方法，必须使用关键字override</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">greeting</span></span>()&#123;println(<span class="string">"welcome to my BYD car"</span>)&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">MyCar</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> myCar1 = <span class="keyword">new</span> <span class="type">BMWCar</span>()</span><br><span class="line">    <span class="keyword">val</span> myCar2 = <span class="keyword">new</span> <span class="type">BYDCar</span>()</span><br><span class="line">    myCar1.greeting()</span><br><span class="line">    myCar1.info()</span><br><span class="line">    myCar2.greeting()</span><br><span class="line">    myCar2.info()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="特质-trait"><a href="#特质-trait" class="headerlink" title="特质(trait)"></a>特质(trait)</h1></li><li>特质概念<br>Scala中没有接口的概念，而是提供了<code>特质</code>，它不仅实现了接口的功能，还具备了很多其他的特性，<code>特质</code>是代码重用的基本元素，可以同时拥有<code>抽象方法</code>和<code>具体方法</code>；<br>一个类只能继承自一个超类，却可以实现多个<code>特质</code>，从而重用<code>特质</code>中的方法和字段，实现多重继承； </li><li>特质定义，把多个特征混入类<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">CarId</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> id :<span class="type">Int</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">currentId</span></span>():<span class="type">Int</span><span class="comment">//定义一个抽象方法</span></span><br><span class="line">&#125;</span><br><span class="line">注意：抽象方法不需要使用<span class="keyword">abstract</span>关键字，特质中没有方法体的方法默认就是抽象方法。</span><br><span class="line">特质定义好后，就可以使用<span class="keyword">extends</span>或<span class="keyword">with</span>关键字把特质混入类中。</span><br><span class="line">```scala</span><br><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">CarId</span> </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> id :<span class="type">Int</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">currentId</span></span>():<span class="type">Int</span> <span class="comment">//定义抽象方法</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">CarGreeting</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">greeting</span></span>(msg:<span class="type">String</span>)(println(msg))<span class="comment">//非抽象方法</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BYDCarId</span> <span class="keyword">extends</span> <span class="title">CarId</span> <span class="keyword">with</span> <span class="title">CarGreeting</span></span>&#123;<span class="comment">//使用extends关键字混入第一个特质，后面可以反复使用with关键字混入更多特质</span></span><br><span class="line">  <span class="keyword">override</span> <span class="keyword">var</span> id: <span class="type">Int</span> = <span class="number">10000</span><span class="comment">//BYD汽车编号从10000开始</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">currentId</span></span>(): <span class="type">Int</span> = &#123;id += <span class="number">1</span>;id&#125;<span class="comment">//返回汽车编号</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BMWCarId</span> <span class="keyword">extends</span> <span class="title">CarId</span></span>&#123;</span><br><span class="line">  <span class="keyword">override</span> <span class="keyword">var</span> id: <span class="type">Int</span> = <span class="number">20000</span><span class="comment">//BMW汽车编号从10000开始</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">currentId</span></span>(): <span class="type">Int</span> = &#123;id += <span class="number">1</span>;id&#125;<span class="comment">//返回汽车编号</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">MyCar2</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> myCarId1 = <span class="keyword">new</span> <span class="type">BYDCarId</span>()</span><br><span class="line">    <span class="keyword">var</span> myCarId2 = <span class="keyword">new</span> <span class="type">BMWCarId</span>()</span><br><span class="line">    printf(<span class="string">"My first CarId is %d.\n"</span>,myCarId1.currentId())</span><br><span class="line">    printf(<span class="string">"My second CarId is %d.\n"</span>,myCarId2.currentId())</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">运行结果:</span><br><span class="line"><span class="type">My</span> first <span class="type">CarId</span> is <span class="number">10001.</span></span><br><span class="line"><span class="type">My</span> second <span class="type">CarId</span> is <span class="number">20001.</span></span><br></pre></td></tr></table></figure>上面例子<code>特质</code>只包含了抽象字段和方法，相当于Java的接口功能，实际上，<code>特质</code>也可以包含具体实现，也就是说，<code>特质</code>中的字段和方法不一定要是抽象的。</li></ul><h1 id="模式匹配"><a href="#模式匹配" class="headerlink" title="模式匹配"></a>模式匹配</h1><ul><li>简单匹配<br>最常用语match语句中，下面是一个简单的整型值的匹配实例：<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">PatternMatch</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> colorNum = <span class="number">1</span></span><br><span class="line">    <span class="keyword">val</span> colorStr = colorNum <span class="keyword">match</span>&#123;</span><br><span class="line">      <span class="keyword">case</span>  <span class="number">1</span> =&gt;<span class="string">"red"</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span> =&gt; <span class="string">"green"</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span> =&gt; <span class="string">"yellow"</span></span><br><span class="line">      <span class="keyword">case</span> _ =&gt; <span class="string">"Not allowed"</span></span><br><span class="line">    &#125;</span><br><span class="line">    print(colorStr)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">运行结果:</span><br><span class="line">red</span><br><span class="line">将 <span class="keyword">case</span> _ =&gt; <span class="string">"Not allowed"</span>改为<span class="keyword">case</span> unexpected =&gt; unexpected + <span class="string">" is not allowed"</span>，即模式匹配<span class="keyword">case</span>语句中可以使用变量，再另<span class="keyword">case</span>=<span class="number">4</span>运行结果:</span><br><span class="line"><span class="number">4</span> is not allowed</span><br></pre></td></tr></table></figure></li><li>类型模式<br>Scala可以对表达式的类型进行匹配<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(elem &lt;- <span class="type">List</span>(<span class="number">9</span>,<span class="number">12.3</span>,<span class="string">"Scala"</span>,<span class="symbol">'Spark</span>))&#123;</span><br><span class="line"><span class="keyword">val</span> str = elem <span class="keyword">match</span>&#123;</span><br><span class="line">  <span class="keyword">case</span> i: <span class="type">Int</span> =&gt; i+<span class="string">" is an int value"</span></span><br><span class="line">  <span class="keyword">case</span> d: <span class="type">Double</span> =&gt; d+<span class="string">" is a double value"</span></span><br><span class="line">  <span class="keyword">case</span> <span class="string">"Scala"</span> =&gt; <span class="string">"Scala is found"</span></span><br><span class="line">  <span class="keyword">case</span> s: <span class="type">String</span> =&gt; s + <span class="string">" is a string value"</span></span><br><span class="line">  <span class="keyword">case</span> _ =&gt; <span class="string">"This is an unexpected value"</span></span><br><span class="line">&#125;</span><br><span class="line">println(str)</span><br><span class="line">运行结果：</span><br><span class="line"><span class="number">9</span> is an int value</span><br><span class="line"><span class="number">12.3</span> is a double value</span><br><span class="line"><span class="type">Scala</span> is found</span><br><span class="line"><span class="type">This</span> is an unexpected value</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>“守卫(guard)”语句<br>可以在模式匹配中添加一些必要的处理逻辑<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">for</span>(elem &lt;- <span class="type">List</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))&#123;</span><br><span class="line">    elem <span class="keyword">match</span>&#123;</span><br><span class="line">      <span class="keyword">case</span> _ <span class="keyword">if</span>(elem %<span class="number">2</span> == <span class="number">0</span>) =&gt; println(elem + <span class="string">" is even"</span>)</span><br><span class="line">      <span class="keyword">case</span> _ =&gt; println(elem + <span class="string">" is odd"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="number">1</span> is odd</span><br><span class="line"><span class="number">2</span> is even</span><br><span class="line"><span class="number">3</span> is odd</span><br><span class="line"><span class="number">4</span> is even</span><br></pre></td></tr></table></figure></li><li>case类的匹配<br>case类是一种特殊的类，它们经过优化以后被用于模式匹配<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span>(<span class="params">brand:<span class="type">String</span>,price:<span class="type">Int</span></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">val</span> myBYDCar = <span class="keyword">new</span> <span class="type">Car</span>(<span class="string">"BYD"</span>,<span class="number">100000</span>)</span><br><span class="line">  <span class="keyword">val</span> myBMWCar = <span class="keyword">new</span> <span class="type">Car</span>(<span class="string">"BMW"</span>,<span class="number">200000</span>)</span><br><span class="line">  <span class="keyword">val</span> myBenzCar = <span class="keyword">new</span> <span class="type">Car</span>(<span class="string">"Benz"</span>,<span class="number">300000</span>)</span><br><span class="line">  <span class="keyword">for</span>(car &lt;- <span class="type">List</span>(myBYDCar,myBMWCar,myBenzCar))&#123;</span><br><span class="line">    car <span class="keyword">match</span> &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="type">Car</span>(<span class="string">"BYD"</span>, <span class="number">100000</span>) =&gt; print(<span class="string">"hello BYD"</span>)</span><br><span class="line">      <span class="keyword">case</span> <span class="type">Car</span>(<span class="string">"BMW"</span>, <span class="number">200000</span>) =&gt; print(<span class="string">"hello BMW"</span>)</span><br><span class="line">      <span class="keyword">case</span> <span class="type">Car</span>(<span class="string">"Benz"</span>, <span class="number">300000</span>) =&gt; print(<span class="string">"hello Benz"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Option类型<br>标准类库中的Option类型用case类来表示那种可能存在，也可能不存在的值。<br>一般而言，对于每种语言来说，都会有一个关键字来表示一个对象引用的”无”，在Java中使用null。Scala融合了函数式编程风格，因此，当预计到变量或者函数返回值可能不会引用任何值的时候，建议使用Option类型。<br>Option类包含一个子类Some，当存在可以被引用的值时候，就可以使用Some来包含这个值，例如Some(“Scala”)。而None则被声明为一个对象，而不是一个类，表示没有值。<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建Map</span></span><br><span class="line">scala&gt; <span class="keyword">val</span> books = <span class="type">Map</span>(<span class="string">"Scala"</span> -&gt;<span class="number">3</span>,<span class="string">"Spark"</span>-&gt;<span class="number">5</span>)</span><br><span class="line">books: scala.collection.immutable.<span class="type">Map</span>[<span class="type">String</span>,<span class="type">Int</span>] = <span class="type">Map</span>(<span class="type">Scala</span> -&gt; <span class="number">3</span>, <span class="type">Spark</span> -&gt; <span class="number">5</span>)</span><br><span class="line"><span class="comment">//键存在，可以取到值，并且取到的值会包含在Some中返回</span></span><br><span class="line">scala&gt; books.get(<span class="string">"Scala"</span>)</span><br><span class="line">res0: <span class="type">Option</span>[<span class="type">Int</span>] = <span class="type">Some</span>(<span class="number">3</span>)</span><br><span class="line"><span class="comment">//键值不存在，所以取到的值是None对象</span></span><br><span class="line">scala&gt; books.get(<span class="string">"hadoop"</span>)</span><br><span class="line">res1: <span class="type">Option</span>[<span class="type">Int</span>] = <span class="type">None</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> sales = books.get(<span class="string">"hadoop"</span>)</span><br><span class="line">sales: <span class="type">Option</span>[<span class="type">Int</span>] = <span class="type">None</span></span><br><span class="line"><span class="comment">//Option类还提供了getOrElse方法，当这个方法在这个Option是Some的实例时返回对应的值，而在是None的实例时返回传入的参数</span></span><br><span class="line">scala&gt; sales.getOrElse(<span class="string">"No such book"</span>)</span><br><span class="line">res3: <span class="type">Any</span> = <span class="type">No</span> such book</span><br><span class="line"></span><br><span class="line">scala&gt; println(sales.getOrElse(<span class="string">"No such book"</span>))</span><br><span class="line"><span class="type">No</span> such book</span><br></pre></td></tr></table></figure>Option的情形在Scala使用非常频繁，经常会用到Option[T]类型，其中的T可以是String,Int或者其他各种数据类型。<br>Option[T]实际上就是一个容器，可以把它看做是一个集合，只不过这个集合要么只包含一个元素（被包装在Some中返回），要么不存在元素（返回None)。<br>既然是一个集合，我们当然可以对它使用map、foreach或者filter等方法。如：books.get(“Scala”).foreach(println)。<h1 id="函数式编程基础"><a href="#函数式编程基础" class="headerlink" title="函数式编程基础"></a>函数式编程基础</h1></li><li>语法定义：def 方法名(参数列表):结果类型={方法体}，如上面我们已经用到了，可以回顾之前的代码理解一下。</li><li>函数字面量<br>val i = 123 //123就是整数字面量<br>val i = 3.14 //3.14就是浮点数字面量<br>val i = true //true就是布尔型字面量<br>val i = ‘A’ //‘A’就是字符字面量<br>val i = “scala” //“scala”就是字符串字面量</li><li>函数字面量<br>函数字面量可以提现函数式编程的核心理念。<br>在函数式编程中，函数是”头等公民”，可以像任何其数据类型一样被传递和操作，也就是说，函数的使用方式和其他数据类型完全一致。<br>这时，我们就可以像定义变量那样取定义一个函数，由此导致的结果是函数也会想和其他变量一样，开始有“值”。<br>就像变量的“类型”和“值”是分开的两个概念一样，函数式编程中，函数的“类型”和“值”也成为两个分开的概念，函数的“值”就是“函数字面量”。</li><li>函数的类型和值<br>定义一个传统类型的函数，定义语法和之前介绍定义“类中的方法”类似。<br>def counter(value:Int):Int = { value += 1}<br>上面定义这个函数的“类型”是：(Int) =&gt; Int<br>实际上，只有一个参数时圆括号可以省略Int =&gt; Int(等价于上面)，上面就得到了函数的“类型”。</li></ul><p><strong>如何得到函数的“值”呢？</strong><br>实际上，只要把函数定义中的类型什么部分去除，剩下的就是函数的“值”，如下：<br>(value) =&gt; {value += 1} //只有一条语句时，大括号可以省略<br>注意：上面就是函数的“值”，需要注意的是，采用“=&gt;”而不是“=”，这是Scala的语法要求。<br>我们依葫芦（val num:Int = 5）画瓢形式定义Scala的函数：val counter:Int =&gt; Int{(value) =&gt; value += 1}<br>从上面可以看出，在Scala中函数已经是“头等公民”，单独剥离出来了“值”的概念，一个函数“值”就是函数字面量。这样，只要在某个需要声明函数的地方声明一个函数类型，在调用的时候传入一个对应的函数字面量即可，和使用普通变量一模一样。</p><ul><li>匿名函数、Lamda表达式与闭包<br>不需要给函数命名是，可以使用匿名函数，(num:Int) =&gt; num*2,这种经常称为“Lamda表达式”。Lamda表达式形式：(参数) =&gt;表达式//如果参数只有一个，参数的圆括号可以省略<br>可以直接把匿名函数放到变量中，如下：<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">val</span> myFunc: <span class="type">Int</span> =&gt; <span class="type">Int</span> = (num: <span class="type">Int</span>) =&gt; num * <span class="number">2</span> <span class="comment">//把匿名函数定义为一个值，赋值给变量</span></span><br><span class="line">myFunc: <span class="type">Int</span> =&gt; <span class="type">Int</span> = $$<span class="type">Lambda</span>$<span class="number">1039</span>/<span class="number">1942631655</span>@<span class="number">5696</span>c927 <span class="comment">//执行返回结果</span></span><br><span class="line"></span><br><span class="line">scala&gt; print(myFunc(<span class="number">3</span>)) <span class="comment">//函数调用</span></span><br></pre></td></tr></table></figure>Scala具有推断机制，可以自动推断变量类型,val num: Int = 2 等价于 val num = 2，所以上面的函数定义可以去掉“Int=&gt;Int”，即：val myFunc = (num: Int) =&gt; num * 2。<br>val myFunc = (num) =&gt; num * 2 //解释器无法推断出类型报错，val myFunc: Int =&gt;Int = (num) =&gt; num *2 可推断num类型是Int类型。</li></ul><p><strong>闭包</strong><br>闭包是一种比较特殊的函数，和普通函数有很多区别：<br>var more = 1<br>val addMore = (x: Int) =&gt; x&gt;0 //普通函数<br>val addMore = (x: Int) =&gt; x + more //闭包<br>闭包反应了一个从开发到封闭的过程，每次addMore函数被调用时都会创建一个新的闭包，每个闭包都会访问闭包创建时活跃的more变量。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">var</span> more = <span class="number">1</span></span><br><span class="line">more: <span class="type">Int</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> addMore = (x:<span class="type">Int</span>) =&gt; x + more</span><br><span class="line">addMore: <span class="type">Int</span> =&gt; <span class="type">Int</span> = $$<span class="type">Lambda</span>$<span class="number">1061</span>/<span class="number">1841213176</span>@<span class="number">7744195</span></span><br><span class="line"></span><br><span class="line">scala&gt; addMore(<span class="number">10</span>)</span><br><span class="line">res2: <span class="type">Int</span> = <span class="number">11</span></span><br><span class="line"></span><br><span class="line">scala&gt; more = <span class="number">9</span></span><br><span class="line">more: <span class="type">Int</span> = <span class="number">9</span></span><br><span class="line"></span><br><span class="line">scala&gt; addMore(<span class="number">10</span>)</span><br><span class="line">res3: <span class="type">Int</span> = <span class="number">19</span></span><br></pre></td></tr></table></figure><ul><li>占位符语法<br>为了让函数字面量更加简洁，可以使用下划线作为一个或者多个参数的占位符，只要每个参数在函数字面量内仅出现一次。<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">val</span> numList = <span class="type">List</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">-3</span>,<span class="number">4</span>,<span class="number">-5</span>)</span><br><span class="line">numList: <span class="type">List</span>[<span class="type">Int</span>] = <span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">-3</span>, <span class="number">4</span>, <span class="number">-5</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; numList.filter(x =&gt; x&gt;<span class="number">0</span>)</span><br><span class="line">res4: <span class="type">List</span>[<span class="type">Int</span>] = <span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; numList.filter(_&gt;<span class="number">0</span>)</span><br><span class="line">res5: <span class="type">List</span>[<span class="type">Int</span>] = <span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>)</span><br></pre></td></tr></table></figure>从上面运行结果可以看出，下面两个函数字面量是等价的，即x =&gt; x&gt;0 等价于<em>&gt;0 。<br>有时候把下划线作为参数的占位符时，编译器有可能没有足够的信息推断缺失参数的类型，如，</em>+_会报错，可以用冒号指定类型：<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">val</span> f = _ + _</span><br><span class="line">&lt;console&gt;:<span class="number">11</span>: error: missing parameter <span class="class"><span class="keyword">type</span> <span class="title">for</span> <span class="title">expanded</span> <span class="title">function</span> (<span class="params">(x$1: &lt;error&gt;, x$2</span>) <span class="title">=&gt;</span> <span class="title">x$1</span>.<span class="title">$plus</span>(<span class="params">x$2</span>))</span></span><br><span class="line"><span class="class">       <span class="title">val</span> <span class="title">f</span> </span>= _ + _</span><br><span class="line">               ^</span><br><span class="line">&lt;console&gt;:<span class="number">11</span>: error: missing parameter <span class="class"><span class="keyword">type</span> <span class="title">for</span> <span class="title">expanded</span> <span class="title">function</span> (<span class="params">(x$1: &lt;error&gt;, x$2: &lt;error&gt;</span>) <span class="title">=&gt;</span> <span class="title">x$1</span>.<span class="title">$plus</span>(<span class="params">x$2</span>))</span></span><br><span class="line"><span class="class">       <span class="title">val</span> <span class="title">f</span> </span>= _ + _</span><br><span class="line">                   ^</span><br><span class="line">scala&gt; <span class="keyword">val</span> f = (_:<span class="type">Int</span>) + (_:<span class="type">Int</span>)</span><br><span class="line">f: (<span class="type">Int</span>, <span class="type">Int</span>) =&gt; <span class="type">Int</span> = $$<span class="type">Lambda</span>$<span class="number">1099</span>/<span class="number">1579858776</span>@<span class="number">943</span>d0c2</span><br><span class="line"></span><br><span class="line">scala&gt; print(f(<span class="number">5</span>,<span class="number">10</span>))</span><br><span class="line"><span class="number">15</span></span><br></pre></td></tr></table></figure>注意：留心“<em>+</em>”将扩展成带两个参数的函数的字面量，这也是仅当每个参数的函数字面量中最多出现一次的情况先你才能运用这种短格式的原由。多个下划线指定多个参数，而不是单个参数的重复运用。第一个下划线代表第一个参数，第二个下划线代表第二个参数，第三个……，如此类推。</li></ul><h2 id="至此，Scala入门知识讲解完毕，但是Scala的其他知识还需进一步学习，点击Scala-Getting-Started去学习"><a href="#至此，Scala入门知识讲解完毕，但是Scala的其他知识还需进一步学习，点击Scala-Getting-Started去学习" class="headerlink" title="至此，Scala入门知识讲解完毕，但是Scala的其他知识还需进一步学习，点击Scala Getting Started去学习!"></a>至此，Scala入门知识讲解完毕，但是Scala的其他知识还需进一步学习，点击<a href="https://docs.scala-lang.org/getting-started/index.html" target="_blank" rel="noopener">Scala Getting Started</a>去学习!</h2><p><strong>声明:</strong><br>作者:上海IT技术圈<br>本文版权归作者和上海IT技术圈共有，任何人或团体、机构全部转载或者部分转载、摘录，请在文章明显位置注明作者和原文链接。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/scala.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;继承&quot;&gt;&lt;a href=&quot;#继承&quot; class=&quot;headerlink&quot; title=&quot;继承&quot;&gt;&lt;/a&gt;继承&lt;/h1&gt;&lt;p&gt;Scala中的继承与Java有着明显的不同，体现在下
      
    
    </summary>
    
    
      <category term="tools" scheme="http://sparkx.com.cn/categories/tools/"/>
    
    
      <category term="spark" scheme="http://sparkx.com.cn/tags/spark/"/>
    
      <category term="工具" scheme="http://sparkx.com.cn/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="scala" scheme="http://sparkx.com.cn/tags/scala/"/>
    
  </entry>
  
  <entry>
    <title>scala 快速入门2</title>
    <link href="http://sparkx.com.cn/scala/scala-note2/"/>
    <id>http://sparkx.com.cn/scala/scala-note2/</id>
    <published>2019-11-30T11:29:52.000Z</published>
    <updated>2019-12-09T13:48:28.685Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/scala.png" alt=""></p><h1 id="Scala类"><a href="#Scala类" class="headerlink" title="Scala类:"></a>Scala类:</h1><ul><li>类定义、字段、方法<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Counter</span></span>&#123; <span class="comment">//Counter是类名 </span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> privateValue = <span class="number">0</span> <span class="comment">//定义一个私有字段</span></span><br><span class="line"><span class="comment">//Scala没有提供getter和setter方法，可以通过定义类似getter和setter的方法，分别叫做value和value_=</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">value</span> </span>= privateValue <span class="comment">//定义一个方法，方法名称就是原来我们想要的字段名称</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">value_=</span> </span>(newValue: <span class="type">Int</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(newValue &gt;<span class="number">0</span> ) privateValue = newValue <span class="comment">//只有提供新值是正数，才允许修改</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">increment</span></span>():<span class="type">Unit</span> = &#123; value += <span class="number">1</span> &#125; <span class="comment">//increment是类方法,Unit后面的等号和大括号后面包含了该方法要执行的具体操作语句，如果只有一行语句，那么也可以直接去掉大括号；</span></span><br><span class="line"><span class="comment">//def increment():Unit = value += 1 等价于上面语句</span></span><br><span class="line"><span class="comment">//def increment() &#123;value += 1&#125; 等价于上面语句</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">increment2</span></span>(step:<span class="type">Int</span>):<span class="type">Unit</span> = &#123;value += <span class="type">Step</span>&#125;<span class="comment">//带参方法，参数为步长的值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">current</span></span>():<span class="type">Int</span> = &#123; value &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">MyCounter</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args:<span class="type">Array</span>[<span class="type">String</span>])&#123;</span><br><span class="line"><span class="keyword">val</span> myCounter = <span class="keyword">new</span> <span class="type">Counter</span> <span class="comment">//new Counter() //使用new关键字生成对象</span></span><br><span class="line">myCounter.increment() <span class="comment">//或者也可以不用圆括号，写成myCounter.increment</span></span><br><span class="line">myCounter.increment2(<span class="number">5</span>)<span class="comment">// 这里使用带参方法，设置步长5，每次增加5</span></span><br><span class="line">print(myCounter.value) <span class="comment">//不用getXxx获取字段的值</span></span><br><span class="line">myCounter.value = <span class="number">3</span> <span class="comment">// 不用setXxx设置字段值</span></span><br><span class="line">print(myCounter.current)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>辅助构造器<br>Scala构造器包含一个主构造器和若干个(0个或多个)辅助构造器；<br>辅助构造器的名称this，每个辅助构造器都必须调用一个此前定义的辅助构造器或主构造器；<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">counter</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> value = <span class="number">0</span> <span class="comment">//value用来存储计时器的起始值</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> name = <span class="string">""</span> <span class="comment">//表示计数器的名称</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> mode = <span class="number">1</span> <span class="comment">//mode用来表示计数器类型(比如，1表示步数计数器，2表示时间计数器)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">this</span></span>(name:<span class="type">String</span>)&#123;<span class="comment">//第一个辅助构造器</span></span><br><span class="line"><span class="keyword">this</span>() <span class="comment">//调用主构造器</span></span><br><span class="line"><span class="keyword">this</span>.name = name</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">this</span></span>(name:<span class="type">String</span>,mode:<span class="type">Int</span>)&#123;<span class="comment">//第二个辅助构造器</span></span><br><span class="line"><span class="keyword">this</span>(name) <span class="comment">//调用前一个辅助构造器</span></span><br><span class="line"><span class="keyword">this</span>.mode = mode</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">increment</span></span>(step:<span class="type">Int</span>):<span class="type">Unit</span> = &#123;value += step&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">current</span></span>():<span class="type">Int</span> = &#123;value&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">info</span></span>():<span class="type">Unit</span> = &#123;printf(<span class="string">"Name:%s and mode is %d\n"</span>,name,mode)&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">MyCounter</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(ars:<span class="type">Array</span>[<span class="type">String</span>])&#123;</span><br><span class="line"><span class="keyword">val</span> myCounter1 = <span class="keyword">new</span> <span class="type">Counter</span> <span class="comment">//主构造器</span></span><br><span class="line"><span class="keyword">val</span> myCounter2 = <span class="keyword">new</span> <span class="type">Counter</span>(<span class="string">"Runner"</span>) <span class="comment">//第一个辅助构造器，计数器的名称设置为Runner，用来计算跑步步数</span></span><br><span class="line"><span class="keyword">val</span> myCounter3 = <span class="keyword">new</span> <span class="type">Counter</span>(<span class="string">"Timer"</span>,<span class="number">2</span>) <span class="comment">//第二个辅助构造器，计数器的名称设置为Timer，用来计算秒数</span></span><br><span class="line">myCounter1.info <span class="comment">//显示计数器信息</span></span><br><span class="line">myCounter1.increment(<span class="number">1</span>) <span class="comment">//设置步长</span></span><br><span class="line">printf(<span class="string">"Current value is : %d\n"</span> ,myCounter1.current)<span class="comment">//显示计数器当前值</span></span><br><span class="line">myCounter2.info <span class="comment">//显示计数器信息</span></span><br><span class="line">myCounter2.increment(<span class="number">2</span>) <span class="comment">//设置步长</span></span><br><span class="line">printf(<span class="string">"Current value is : %d\n"</span>,myCounter2.current) <span class="comment">//显示计数器当前值</span></span><br><span class="line">myCounter3.info <span class="comment">//显示计数器信息</span></span><br><span class="line">myCounter3.increment(<span class="number">3</span>) <span class="comment">//设置步长</span></span><br><span class="line">printf(<span class="string">"Current value is : %d\n"</span>,myCounter3.current) <span class="comment">//显示计数器当前值</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">运行结果：</span><br><span class="line"><span class="type">Name</span>: and mode is <span class="number">1</span></span><br><span class="line"><span class="type">Current</span> value is : <span class="number">1</span></span><br><span class="line"><span class="type">Name</span>:<span class="type">Runner</span> and mode is <span class="number">1</span></span><br><span class="line"><span class="type">Current</span> value is : <span class="number">2</span></span><br><span class="line"><span class="type">Name</span>:<span class="type">Timer</span> and mode is <span class="number">2</span></span><br><span class="line"><span class="type">Current</span> value is : <span class="number">3</span></span><br></pre></td></tr></table></figure></li><li>主构造器<br>Scala的每个类都有主构造器，但是，Scala的主构造器和Java有着明显的不同，Scala的主构造器是整个类体，需要在类名成后面罗列出构造器所需要的所有参数，这些参数被编译成字段，字段的值就是创建对象时传入的参数的值。<br>对于上面给计数器设置name和mode的例子，使用辅助构造器来对name和mode的值进行设置，现在重新使用主构造器来设置name和mode的值。<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Counter2</span> (<span class="params">val name:<span class="type">String</span>,val mode:<span class="type">Int</span></span>)</span>&#123;<span class="comment">//直接在类名后面括号中定义name和mode</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">var</span> value = <span class="number">0</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">increment</span></span>(step:<span class="type">Int</span>):<span class="type">Unit</span> = &#123;value += step&#125;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">current</span></span>():<span class="type">Int</span> = &#123;value&#125;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">info</span></span>():<span class="type">Unit</span> = &#123;printf(<span class="string">"Name:%s and mode is %d\n"</span>,name,mode)&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">MyCounter2</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> myCounter2 = <span class="keyword">new</span> <span class="type">Counter2</span>(<span class="string">"Timer"</span>,<span class="number">2</span>)</span><br><span class="line">    myCounter2.info()</span><br><span class="line">    myCounter2.increment(<span class="number">1</span>)</span><br><span class="line">    printf(<span class="string">"Current value is:%d\n"</span>,myCounter2.current())</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">运行结果：</span><br><span class="line"><span class="type">The</span> id of zhangsan <span class="number">1.</span></span><br><span class="line"><span class="type">The</span> id of lisi <span class="number">2.</span></span><br></pre></td></tr></table></figure></li><li>单例对象<br>Scala并没有提供Java那样的静态方法或静态字段，但是，可以采用object关键字实现单例对象，具备和Java静态方法同样的功能。<br>单例对象的定义和类的定义很相似，只不过使用的是object关键字定义。<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Person</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> lastId = <span class="number">0</span> <span class="comment">//一个人的身份编号</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">newPersond</span></span>()=&#123;</span><br><span class="line">lastId += <span class="number">1</span></span><br><span class="line">lastId</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>伴生对象<br>在Java中，经常需要用到同时包含实例方法和静态方法的类，在Scala中可以通过伴生对象来实现。<br>当单例对象与某个类具有相同的名称时，它被称为这个类的“伴生对象”。<br>类和它的伴生对象必须存在于同一个文件中，而且可以相互访问是有成员(字段和方法)。<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> id  = <span class="type">Person</span>.newPersonId()<span class="comment">//调用伴生对象的方法</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">var</span> name = <span class="string">""</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">this</span></span>(name:<span class="type">String</span>)&#123;</span><br><span class="line">    <span class="keyword">this</span>()</span><br><span class="line">    <span class="keyword">this</span>.name = name</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">info</span></span>()&#123;printf(<span class="string">"The id of %s %d.\n"</span>,name,id)&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">var</span> lastId = <span class="number">0</span>;<span class="comment">//身份编号</span></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">newPersonId</span></span>()=&#123;</span><br><span class="line">    lastId += <span class="number">1</span></span><br><span class="line">    lastId</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> person1 = <span class="keyword">new</span> <span class="type">Person</span>(<span class="string">"zhangsan"</span>)</span><br><span class="line">    <span class="keyword">val</span> person2 = <span class="keyword">new</span> <span class="type">Person</span>(<span class="string">"lisi"</span>)</span><br><span class="line">    person1.info()</span><br><span class="line">    person2.info()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">运行结果：</span><br><span class="line"><span class="type">The</span> id of zhangsan <span class="number">1.</span></span><br><span class="line"><span class="type">The</span> id of lisi <span class="number">2.</span></span><br></pre></td></tr></table></figure>Scala源码编译后都变成JVM字节码，实际上在编译上面的源码文件后，在Scala里面的class和object在Java层面都会被合二为一，classs里面的成员成了实例成员，object成员成了静态成员。<br>伴生对象Person中的newPersonId前面的修饰符private去掉后进行编译，再反编译查看编译的代码可以看到newPersonId被编译成了Person类的static成员。<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进入类所在目录进行编译</span></span><br><span class="line">Administrator@WIN7-<span class="number">1705071516</span> MINGW64 <span class="regexp">/d/</span>IdeaProjects<span class="regexp">/ScalaTest/</span>src<span class="regexp">/main/</span>scala<span class="regexp">/com/</span>scala<span class="regexp">/study/</span>ch1 (master)</span><br><span class="line">$ scalac Person.scala</span><br><span class="line">在D:\IdeaProjects\ScalaTest\src\main\scala\com\scala\study\ch1\com\scala\study\ch1目录下生成两个文件Person$.<span class="keyword">class</span>,Person.<span class="keyword">class</span></span><br><span class="line"><span class="comment">//使用javap命令反编译</span></span><br><span class="line">D:\IdeaProjects\ScalaTest\src\main\scala\com\scala\stud</span><br><span class="line">警告: 二进制文件Person包含com.scala.study.ch1.Person</span><br><span class="line">Compiled <span class="keyword">from</span> <span class="string">"Person.scala"</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> com.scala.study.ch1.Person &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(java.lang.String[]);</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> newPersonId();<span class="comment">//编译成了静态成员</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> info();</span><br><span class="line">  <span class="keyword">public</span> com.scala.study.ch1.Person();</span><br><span class="line">  <span class="keyword">public</span> com.scala.study.ch1.Person(java.lang.String);</span><br></pre></td></tr></table></figure></li><li>apply方法和update方法<br>Scala里面经常用到对象的apply和udpate方法，实际上这两个方法都会遵循相关约定被调用，约定如下：<br>用括号传递给变量(对象)一个或多个参数时，Scala会把它转换成对apply方法的调用；<br>当对带有括号并包括一到若干个参数的对象进行赋值时，编译器将调用对象的update方法，在调用时，是把括号里的参数和等号右边的对象一起作为update方法的输入参数来执行调用；<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestApplyClass</span> &#123;</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">apply</span><span class="params">(<span class="symbol">param:</span>String)</span></span> <span class="symbol">:String</span>  = &#123;<span class="regexp">//</span>类中定义apply方法</span><br><span class="line">    printf(<span class="string">"apply method called,param is :%s\n"</span>,param)</span><br><span class="line">    <span class="string">"hello world"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">object TestApplySingleObject&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">apply</span><span class="params">(<span class="symbol">param1:</span>String,<span class="symbol">param2:</span>String)</span></span><span class="symbol">:String=</span>&#123;<span class="regexp">//</span>单例中定义apply方法</span><br><span class="line">    println(<span class="string">"apply methhod called"</span>)</span><br><span class="line">    param1+<span class="string">" and "</span>+ param2</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(<span class="symbol">args:</span> Array[String])</span></span>: Unit = &#123;</span><br><span class="line">    val obj = new TestApplyClass</span><br><span class="line">    println(obj(<span class="string">"test"</span>))</span><br><span class="line">    val obj2 = TestApplySingleObject(<span class="string">"zhansan"</span>,<span class="string">"lisi"</span>)</span><br><span class="line">    println(obj2)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">运行结果：</span><br><span class="line">apply method called,param is <span class="symbol">:test</span></span><br><span class="line">hello world</span><br><span class="line">apply methhod called</span><br><span class="line">zhansan <span class="keyword">and</span> lisi</span><br></pre></td></tr></table></figure>再来测试一个伴生类和伴生对象的apply方法实例。<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestApplyClassAndObject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ApplyTest</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">apply</span></span>() = println(<span class="string">"apply method in class is called"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">greetingOfClass</span></span>:<span class="type">Unit</span> = &#123;</span><br><span class="line">    println(<span class="string">"greeting method in class is called"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">ApplyTest</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">apply</span></span>()=&#123;</span><br><span class="line">    println(<span class="string">"apply method in object is called"</span>)</span><br><span class="line">    <span class="keyword">new</span> <span class="type">ApplyTest</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">TestApplyClassAndObject</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> a = <span class="type">ApplyTest</span>();<span class="comment">//这里调用伴生对象中的apply方法</span></span><br><span class="line">    a.greetingOfClass</span><br><span class="line">    a()<span class="comment">//这里调用半生类中的apply方法</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">运行结果:</span><br><span class="line">apply method in <span class="class"><span class="keyword">object</span> <span class="title">is</span> <span class="title">called</span></span></span><br><span class="line"><span class="class"><span class="title">greeting</span> <span class="title">method</span> <span class="title">in</span> <span class="title">class</span> <span class="title">is</span> <span class="title">called</span></span></span><br><span class="line"><span class="class"><span class="title">apply</span> <span class="title">method</span> <span class="title">in</span> <span class="title">class</span> <span class="title">is</span> <span class="title">called</span></span></span><br></pre></td></tr></table></figure>从上面代码看出，执行val a = ApplyTest()是，会导致apply方法调用并返回该方法调用的值，也就是ApplyTest的实例化对象。当执行a()时，又会导致调用伴生类的apply方法，所以，我们可以在伴生类的apply方法中写入一些处理逻辑，这样就可以把传入的参数赋值给实例化对象的变量。<br>其实，Scala中Array对象就定义了apply方法，我们可以采用val arr = Array(“Java”,”Scala”,”Spark”)方法，即不用new关键字和构造器初始化数组，而是调用伴生对象Array的apply方法完成数组初始化。<br>实际上，update方法也是类似的，比如：<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> strArr = <span class="keyword">new</span> <span class="type">Array</span>[<span class="type">String</span>](<span class="number">3</span>)<span class="comment">//声明一个长度3的字符串数组，每个元素初始化null</span></span><br><span class="line">strArr(<span class="number">0</span>) = <span class="string">"Java"</span> <span class="comment">//实际上调用了伴生类Array中的update方法，执行strArr.update(0,"Java")</span></span><br></pre></td></tr></table></figure>之所以没有采用java中的方括号strArr[0],而是采用圆括号的形式strArr(0)是因为存在上述update机制。<br>当对带有括号并包括一到若干参数的对象进行赋值时，编译器将调用对象的update方法，在调用是，是把括号里的参数和等号右边的对象一起作为update的输入参数来执行调用。</li></ul><hr><p><strong>声明:</strong><br>作者:上海IT技术圈<br>本文版权归作者和上海IT技术圈共有，任何人或团体、机构全部转载或者部分转载、摘录，请在文章明显位置注明作者和原文链接。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/scala.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Scala类&quot;&gt;&lt;a href=&quot;#Scala类&quot; class=&quot;headerlink&quot; title=&quot;Scala类:&quot;&gt;&lt;/a&gt;Scala类:&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;类定
      
    
    </summary>
    
    
      <category term="tools" scheme="http://sparkx.com.cn/categories/tools/"/>
    
    
      <category term="spark" scheme="http://sparkx.com.cn/tags/spark/"/>
    
      <category term="工具" scheme="http://sparkx.com.cn/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="scala" scheme="http://sparkx.com.cn/tags/scala/"/>
    
  </entry>
  
  <entry>
    <title>scala 快速入门1</title>
    <link href="http://sparkx.com.cn/scala/scala-note/"/>
    <id>http://sparkx.com.cn/scala/scala-note/</id>
    <published>2019-11-29T23:18:18.000Z</published>
    <updated>2019-12-09T13:48:28.628Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/scala.png" alt=""><br>学习Spark过程中查看源码是不是很多都是Scala语言写的？不了解Scala怎么办？这里有一份Scala快速入门课，助力你快速掌握Scala的基本语法和使用。<br>本博客只是Scala入门篇，要想真正掌握的话还需要系统学习滴！<a href="https://docs.scala-lang.org/getting-started/index.html" target="_blank" rel="noopener">Scala Getting Started</a></p><h1 id="Scala简介"><a href="#Scala简介" class="headerlink" title="Scala简介"></a>Scala简介</h1><p>Scala是一门类Java的多范式编程语言，它整合了面向对象编程和函数式编程的最佳特性。具体来讲：</p><ul><li>Scala运行与Java虚拟机（JVM）之上，并且兼容现在有的Java程序</li><li>Scala是一门纯粹的面向对象语言，也是一门函数式语言</li></ul><h1 id="Scala安装"><a href="#Scala安装" class="headerlink" title="Scala安装"></a>Scala安装</h1><p>Scala安装和平时安装的软件一样，也很简单，但是前提条件是必须先安装JDK。</p><blockquote><p>Scala安装参考：<a href="https://www.cnblogs.com/freeweb/p/5623372.html" target="_blank" rel="noopener">Scala安装以及在IDEA中配置Scala</a></p></blockquote><h1 id="Scala基础介绍"><a href="#Scala基础介绍" class="headerlink" title="Scala基础介绍"></a>Scala基础介绍</h1><ul><li>声明值和变量<br>Scala有两种类型的变量<ul><li>val : 是不可变的，在声明时就必须被初始化，二期初始化后就不能再赋值；</li><li>var : 是可变的，声明的时候需要进行初始化，初始化yihou还可以再次对其赋值；<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">val</span> myStr = <span class="string">"hello world"</span> <span class="comment">//声明val变量并赋值</span></span><br><span class="line">myStr: <span class="type">String</span> = hello world</span><br><span class="line"></span><br><span class="line">scala&gt; myStr = <span class="string">"hello scala"</span> <span class="comment">//val变量再次赋值会保存</span></span><br><span class="line">&lt;console&gt;:<span class="number">12</span>: error: reassignment to <span class="keyword">val</span></span><br><span class="line">       myStr = <span class="string">"hello scala"</span></span><br><span class="line">             ^</span><br><span class="line">scala&gt; <span class="keyword">var</span> myStr2 = <span class="string">"hello world"</span> <span class="comment">//声明var变量并赋值</span></span><br><span class="line">myStr2: <span class="type">String</span> = hello world</span><br><span class="line"></span><br><span class="line">scala&gt; myStr2 = <span class="string">"hello scala"</span> <span class="comment">//修改变量的值</span></span><br><span class="line">myStr2: <span class="type">String</span> = hello scala</span><br><span class="line"></span><br><span class="line">scala&gt; print(myStr2) <span class="comment">//打印修改后的值，后面的值覆盖了前面的值</span></span><br><span class="line">hello scala</span><br><span class="line"><span class="comment">//小技巧：在Scala解释器中输入多行代码</span></span><br><span class="line">scala&gt; <span class="keyword">val</span> myStr3 =</span><br><span class="line">     | <span class="string">"hello world"</span></span><br><span class="line">myStr3: <span class="type">String</span> = hello world</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> myStr4 =</span><br><span class="line">     |</span><br><span class="line">     |</span><br><span class="line"><span class="type">You</span> typed two blank lines.  <span class="type">Starting</span> a <span class="keyword">new</span> command.</span><br></pre></td></tr></table></figure></li></ul></li><li>基本数据类型和操作<br>Scala的数据类型包括：Byte、Char、Short、Int、Long、Float、Double和Boolean和Java不同的是，在Scala中，这些类型都是”类”，并且都是包scala的成员，比如，Int的全名是scala.Int。对于字符串，Scala用java.lang.String类来表示字符串。<table><thead><tr><th>值类型</th><th align="left">范围</th></tr></thead><tbody><tr><td>Byte</td><td align="left">8位有符号补码整数(-2^7~2^7-1)</td></tr><tr><td>Short</td><td align="left">16为有符号补码整数(-2^15~2^15-1)</td></tr><tr><td>Int</td><td align="left">32位有符号补码整数(-2^31~2^31-1)</td></tr><tr><td>Long</td><td align="left">64位有符号补码整数(-2^63~2^63-1)</td></tr><tr><td>Char</td><td align="left">16位无符号Unicode字符(0~2^16-1)</td></tr><tr><td>String</td><td align="left">字符序列</td></tr><tr><td>Float</td><td align="left">32为IEEE754单精度浮点</td></tr><tr><td>Double</td><td align="left">64为IEEE754双精度浮点</td></tr><tr><td>Boolean</td><td align="left">true或false</td></tr></tbody></table></li></ul><p><strong>操作符</strong>:在Scala中，可以使用加(+)、减(-)、乘(<em>)、除(/)、余数(%)等操作符，而且这些操作符就是方法。例如，5+3 和5.+3是等价的，也就是a 方法 b 等价于 a.方法(b)<br>前者是或者的简写形式，这里的+是方法名，是Int类中的一个方法。<br>Scala中没有 ++ 和 – 操作符，当需要递增和递减时可以使用 i += 1或者i -= 1;<br>*</em>富包装类**<br>    + 除了基本类型的各种操作外scala在富包装类中提供了许多常用运算方法。<br>    + 每个基本类型都对应一个富包装类，如,Int对应RichInt,String对应RichString，富包装类位于scala.runtime中。<br>    + 对一个基本类型的对象调用其富包装类提供的方法时，Scala会自动通过隐式转换将该对象转换成对应的富包装类行，然后调用相应的方法。</p><ul><li>Range<br>在执行for循环是，经常会用到数值序列，比如，i的值从1循环到5，就可以用Range实现，Range可以支持创建不同数据类型的数值序列，包括Int、Long、Float、Double、Char、BigInt、BigDecimal等<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="number">1</span> to <span class="number">5</span> <span class="comment">//创建从1到5的数值序列，包含区间终点5,步长默认1</span></span><br><span class="line">res1: scala.collection.immutable.<span class="type">Range</span>.<span class="type">Inclusive</span> = <span class="type">Range</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="number">1.</span>to(<span class="number">5</span>) <span class="comment">//同上</span></span><br><span class="line">res2: scala.collection.immutable.<span class="type">Range</span>.<span class="type">Inclusive</span> = <span class="type">Range</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="number">1</span> until <span class="number">5</span> <span class="comment">//创建从1到5的数值序列，不包含区间终点5,步长默认1</span></span><br><span class="line">res3: scala.collection.immutable.<span class="type">Range</span> = <span class="type">Range</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="number">1</span> to <span class="number">10</span> by <span class="number">2</span> <span class="comment">//创建从1到10的数值序列，包含终点10,步长2</span></span><br><span class="line">res4: scala.collection.immutable.<span class="type">Range</span> = <span class="type">Range</span>(<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="number">0.5</span>f to <span class="number">5.9</span>f by <span class="number">0.8</span>f <span class="comment">//创建Float类型的数值序列，从0.5f到5.9f,步长为0.8f</span></span><br><span class="line">res5: scala.collection.immutable.<span class="type">NumericRange</span>[<span class="type">Float</span>] = <span class="type">NumericRange</span>(<span class="number">0.5</span>, <span class="number">1.3</span>, <span class="number">2.1</span>, <span class="number">2.8999999</span>, <span class="number">3.6999998</span>, <span class="number">4.5</span>, <span class="number">5.3</span>)</span><br></pre></td></tr></table></figure></li><li>控制台输入和输出语句<ul><li>从控制台读使用以read为前缀的方法:readInt、readDouble、readBtye、readShort、readFloat、readLong、readChar、readBoolean及readLine分别对应9种基本数据类型，其中前8种方法没有参数，readLine可以不提供参数，也可以带一个字符串参数提示。</li><li>这些函数都属于对象scala.io.StdIn的方法，使用前必须导入。</li><li>输出语句使用print()、println()、printf()<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">import</span> io.<span class="type">StdIn</span>._</span><br><span class="line"><span class="keyword">import</span> io.<span class="type">StdIn</span>._</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">var</span> i = readInt()</span><br><span class="line">i: <span class="type">Int</span> = <span class="number">5222</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">var</span> str = readLine(<span class="string">"please input your na</span></span><br><span class="line"><span class="string">please input your name:str: String = zhangshan</span></span><br></pre></td></tr></table></figure></li></ul></li><li>读写文件夹<br>写入文件使用java.io.PrintWriter实现<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">import</span> java.io.<span class="type">PrintWriter</span></span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">PrintWriter</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> out = <span class="keyword">new</span> <span class="type">PrintWriter</span>(<span class="string">"D:\\test\\scala\\output.txt"</span>)</span><br><span class="line">out: java.io.<span class="type">PrintWriter</span> = java.io.<span class="type">PrintWriter</span>@<span class="number">283</span>ab206</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">for</span> (i &lt;- <span class="number">1</span> to <span class="number">5</span>) out.println(i)</span><br><span class="line"></span><br><span class="line">scala&gt; out.close()</span><br></pre></td></tr></table></figure>读取文件使用Scala.io.Source的getLines方法实现对文件所有行的读取<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">import</span> scala.io.<span class="type">Source</span></span><br><span class="line"><span class="keyword">import</span> scala.io.<span class="type">Source</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> inputFile = <span class="type">Source</span>.fromFile(<span class="string">"D:\\test\\scala\\output.txt"</span>)</span><br><span class="line">inputFile: scala.io.<span class="type">BufferedSource</span> = non-empty iterator</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> lines = inputFile.getLines</span><br><span class="line">lines: <span class="type">Iterator</span>[<span class="type">String</span>] = non-empty iterator</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">for</span> (line &lt;- lines) print(line)</span><br><span class="line"><span class="number">12345</span></span><br></pre></td></tr></table></figure></li><li>异常处理<br>在Scala中，try catch是一个表达式，不像Java是语句，Scala中的try catch是有返回值的。<br>catch中的下划线_是通配符的意思，意思是匹配所有的对象，<br>finally意思是无论有没有异常发生，我们总是会执行finally里面的代码块。<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.&#123;<span class="type">FileNotFoundException</span>, <span class="type">FileReader</span>, <span class="type">IOException</span>&#125;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">  ......</span><br><span class="line">&#125;<span class="keyword">catch</span> &#123;</span><br><span class="line"> <span class="keyword">case</span> ex: <span class="type">FileNotFoundException</span> =&gt;</span><br><span class="line">   <span class="comment">//文件不存在的时候操作</span></span><br><span class="line"> <span class="keyword">case</span> ex : <span class="type">IOException</span> =&gt;</span><br><span class="line">   <span class="comment">//I/O错误时操作</span></span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>控制结构</li></ul><p><strong>if表达式</strong><br>if(x&gt;0){</p><p>}else if(x==0){</p><p>}else{</p><p>}<br>与java不同的是Scala的if表达式的值可以赋值给变量<br>val x = 1<br>val a = if(x&gt;0) 1 else -1<br><strong>while循环</strong><br>var i = 5<br>while(i&gt;0){<br>    i -= 1<br>    print(i)<br>}<br><strong>do … while循环</strong><br>var i = 0<br>do{<br>    i += 1<br>    print(i)<br>}while(i&lt;5)<br><strong>for循环</strong><br>for(变量&lt;-表达式) 语句块，其中“变量 &lt;- 表达式”被称为“生成器(generator)”。<br>表达式后面可以添加“守卫(guard)”表达式，进行过滤，比如，只输入出1到5的偶数：<br>for(i&lt;-1 to 5 if i%2==0) println(i)<br>Scala 也支持“多个生成器”的情形，可以用分号分割开，如：for(i &lt;- 1 to 5;j &lt;- 1 to 3) println(i<em>j)<br>也可以给每个生成器添加一个“守卫”，如：for(i &lt;- 1 to 5 if i%2==0;j &lt;- 1 to 3 if j!=i) println(i</em>j)<br>Scala的for结构可以在每次执行的时候创造一个值，然后将包含了所有产生的值的集合作为for循环表达式的结果返回，集合的类型有生成器中的集合类型确定；<br>通过for循环遍历一个或多个集合，对集合中的元素“推导”，从而计算得到新的集合，用于后续的其他处理；<br>for (变量 &lt;- 表达式) yield {语句块}</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">val</span> r = <span class="keyword">for</span>(i &lt;- <span class="number">1</span> to <span class="number">5</span> <span class="keyword">if</span> i%<span class="number">2</span>==<span class="number">0</span>) <span class="keyword">yield</span>&#123;println(i);i&#125;</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line">r: scala.collection.immutable.<span class="type">IndexedSeq</span>[<span class="type">Int</span>] = <span class="type">Vector</span>(<span class="number">2</span>, <span class="number">4</span>)</span><br></pre></td></tr></table></figure><ul><li>数据结构<ul><li>容器(Collection)</li><li>列表(List)</li><li>集合(Set)</li><li>映射(Map)</li><li>迭代器(Iterator)</li><li>数组(Array)</li><li>元组(Tuple)</li></ul></li></ul><p><strong>下面分别讲解scala的数据结构</strong></p><ul><li>容器(Collection)<br>根据容器中元素组织方式和操作方式，可以区分为有序和无序、可变和不可变等不同的容器类别；<br>Scala用三个包组织容器类：scala.collection、scala.collection.nutable和scala.collection.immutable；</li><li>列表(List)<br>Scala的List一旦被定义其值就不能改变，因此声明List时必须初始化<br>var strList = List(“apple”,”oranges”, “pears”)<br>strList.head //返回列表第一个元素值<br>strList.tail //返回除第一个元素外的其他值构成的新列表<br>val otherList = “abc”::strList //使用”::”操作符拼接生成新的列表<br>val intList = 1::2::3::Nil 与val intList = List(1,2,3)等效 //Scala定义了一个空列表对象Nil，可以将多个元素用操作符”::”串起来初始一个列表<br>val dim:List[List[Int]] = List(List(1,2,3),List(4,5,6),List(7,8,9))//二维List</li><li>集合(Set)<br>Set集合是以“哈希”方法对元素的值进行组织，并且不重复的无顺序的，可以快速查找某个元素；<br>缺省创建的是不可变的集合scala.collection.immutable，可以使用符号”+=”添加元素到Set中。<br>var mySet = Set(“Java”,”Scalc”)<br>mySet += “Spark”<br>如果要创建可变集合,则要提前引入scala.collection.mutable.Set<br>val myMutableSet = Set(“Database”,”BigData”)<br>myMutableSet += “Other”</li><li>映射(Map)<br>映射是(k,v)对的形式存储，默认Scala使用不可变的映射(scala.collection.immutable.Map)，如果使用可变映射必须导入scala.collection.mutable.Map,<br>val map = Map(“a”-&gt;111,”b”-&gt;222,”c”-&gt;333)<br>print(map(“a”))//获取值，这种方式如果给定的键不存在，则会抛出异常，为此，访问前可以先调用contains方法确定键是否存在<br>val v = if(map.contains(“a”)) map(“a”) else 0<br>print(v)<br>//导入可变的map<br>import scala.collection.mutable.Map<br>val map2 = Map(“a”-&gt;111,”b”-&gt;222,”c”-&gt;333)<br>map2(“a”)=123//更新已有元素值<br>map2(“d”)=444//添加新元素<br>map2 +=(“e” -&gt;555)//可以用+= 添加一个新元素<br>map2 +=(“f” -&gt;666,”g”-&gt;777)//同时添加两个元素<br>迭代映射语法:for((k,v)&lt;-映射) 语句块<br>for((k,v)&lt;-map2) print(“k:”+k+”,v:”+v) //遍历key和value<br>for(k &lt;- map2.keys) print(k) //只遍历key<br>for(v &lt;- map2.values) print(v)//只遍历value</li><li>迭代器(Iterator)<br>在Scala中，迭代器不是一个集合，但是提供了访问集合的一种方法；<br>迭代器包含两个基本操作：next和hasNext，next可以返回迭代器的下一个元素，hasNext用于检测是否还有下一个元素；<br>val iter = Iterator(“Java”,”Scala”,”Spark”)<br>while(iter.hasNext){<br>  print(iter.next())<br>}<br>for(elem &lt;- iter){<br>  print(elem)<br>}<br>迭代器有两个方法返回迭代器：    grouped返回元素的增量分块；sliding生成一个滑动元素的窗口，效果如下：<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">val</span> xs = <span class="type">List</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">xs: <span class="type">List</span>[<span class="type">Int</span>] = <span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> grd = xs grouped <span class="number">3</span></span><br><span class="line">grd: <span class="type">Iterator</span>[<span class="type">List</span>[<span class="type">Int</span>]] = non-empty iterator</span><br><span class="line"></span><br><span class="line">scala&gt; grd.next()</span><br><span class="line">res12: <span class="type">List</span>[<span class="type">Int</span>] = <span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; grd.next()</span><br><span class="line">res14: <span class="type">List</span>[<span class="type">Int</span>] = <span class="type">List</span>(<span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">val</span> sli = xs sliding <span class="number">3</span></span><br><span class="line">sli: <span class="type">Iterator</span>[<span class="type">List</span>[<span class="type">Int</span>]] = non-empty iterator</span><br><span class="line"></span><br><span class="line">scala&gt; sli.next()</span><br><span class="line">res15: <span class="type">List</span>[<span class="type">Int</span>] = <span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; sli.next()</span><br><span class="line">res16: <span class="type">List</span>[<span class="type">Int</span>] = <span class="type">List</span>(<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; sli.next()</span><br><span class="line">res17: <span class="type">List</span>[<span class="type">Int</span>] = <span class="type">List</span>(<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure></li><li>数组(Array)<br>数组是一种可变的、可索引的、元素具有相同类型的数据集合，可以通过显示指定类型或者通过隐式判断来实例化一个数组。<br>val arr = new Array<a href="3">Int</a>//声明长度为3的整型数组，每个元素初始为0<br>arr(0) = 11//给数组赋值<br>arr(1) = 22<br>arr(2) = 33<br>val strArr = new Array<a href="3">String</a>//声明长度为3的字符串数组，每个元素初始为null<br>strArr(0) = “Java”<br>strArr(1) = “Scala”<br>strArr(2) = “Spark”<br>for(i &lt;- 0 to 2) print(strArr(i)) //变量数组元素<br>可以不给出数组类型，Scala会自动根据提供的初始化数据来推断出数组的类型：<br>val intArr = Array(1,2,3)<br>val strArr = Array(“aa”,”bb”,”cc”)<br>Array提供了函数ofDim来定义二维和三维数组，用法如下：<br>val myMatrix = Array.ofDim<a href="3,4">Int</a>//实际就是Array[Array[Int]]<br>val myCube = Array.ofDim<a href="3,2,4">String</a>//实际就是Array[Array[Array[String]]<br>可以使用多级圆括号来访问多维数组的元素，利润myMatrix(0)(1)返回第一行第二列的元素；<br>Array类型定义的数组属于定长数组，其长度在初始化后就不能改变，如果要定义边长数组，需要使用ArrayBuffer参数类型，位于scala.collection.mutable中，如：<br>import scala.collection.mutable.ArrayBuffer<br>val arrB = ArrayBuffer(10,20,30)<br>arrB += 40 //添加元素<br>arrB.insert(2,60,40) //指定位置添加元素<br>arrB -= 40 //删除元素<br>var temp arrB.remove(2) //删除元素</li><li>元组(Tuple)<br>元组是不同类型的值的聚集，元组和列表不同，列表各个元素必须是相同类型，而元组可以包含不同类型的元素:<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">val</span> tuple = (<span class="string">"java"</span>,<span class="number">123</span>,<span class="number">12.3</span>)</span><br><span class="line">tuple: (<span class="type">String</span>, <span class="type">Int</span>, <span class="type">Double</span>) = (java,<span class="number">123</span>,<span class="number">12.3</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; print(tuple._1)</span><br><span class="line">java</span><br><span class="line">scala&gt; print(tuple._2)</span><br><span class="line"><span class="number">123</span></span><br><span class="line">scala&gt; print(tuple._3)</span><br><span class="line"><span class="number">12.3</span></span><br></pre></td></tr></table></figure><h1 id="遍历操作"><a href="#遍历操作" class="headerlink" title="遍历操作"></a>遍历操作</h1></li></ul><p><strong>列表遍历:</strong><br>for循环列表：for(elem &lt;- List(1,2,3)) println(elem)<br>foreach循环列表：<code>List(1,2,3).foreach(elem =&gt; println(elem))</code>等价于<code>List(1,2,3).foreach(println)</code>等价于<code>List(1,2,3) foreach println</code>。<br><strong>映射遍历:</strong></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">val</span>  books = <span class="type">Map</span>(<span class="string">"Scala"</span>-&gt;<span class="number">80</span>,<span class="string">"Spark"</span>-&gt;<span class="number">100</span>)</span><br><span class="line">books: scala.collection.immutable.<span class="type">Map</span>[<span class="type">String</span>,<span class="type">Int</span>] = <span class="type">Map</span>(<span class="type">Scala</span> -&gt; <span class="number">80</span>, <span class="type">Spark</span> -&gt; <span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">for</span>((k,v) &lt;- books) println(k+<span class="string">":"</span>+v)</span><br><span class="line"><span class="type">Scala</span>:<span class="number">80</span></span><br><span class="line"><span class="type">Spark</span>:<span class="number">100</span></span><br><span class="line"></span><br><span class="line">scala&gt; books foreach &#123;<span class="keyword">case</span>(k,v) =&gt; println(k+<span class="string">":"</span>+v)&#125;</span><br><span class="line"><span class="type">Scala</span>:<span class="number">80</span></span><br><span class="line"><span class="type">Spark</span>:<span class="number">100</span></span><br><span class="line"></span><br><span class="line">scala&gt; books foreach &#123;kv =&gt; println(kv._1 +<span class="string">":"</span>+kv._2)&#125;</span><br><span class="line"><span class="type">Scala</span>:<span class="number">80</span></span><br><span class="line"><span class="type">Spark</span>:<span class="number">100</span></span><br></pre></td></tr></table></figure><p><strong>map操作</strong><br>map操作是针对集合的经典变换操作，它将某个函数应用到集合中的每个元素，并产生一个结果集合。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">val</span> books = <span class="type">List</span>(<span class="string">"Scala"</span>,<span class="string">"Spark"</span>)</span><br><span class="line">books: <span class="type">List</span>[<span class="type">String</span>] = <span class="type">List</span>(<span class="type">Scala</span>, <span class="type">Spark</span>)</span><br><span class="line">scala&gt; books.map(s =&gt; s.toUpperCase)</span><br><span class="line">res13: <span class="type">List</span>[<span class="type">String</span>] = <span class="type">List</span>(<span class="type">SCALA</span>, <span class="type">SPARK</span>)</span><br></pre></td></tr></table></figure><p><strong>flatMap操作</strong><br>flatMap是map的一种扩展。在flatMap中，会传入一个函数，该函数对每个输入都会返回一个集合（而不是一个元素），然后，flatMap把生成的多个集合“拍扁”成为一个集合。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; books.flatMap(s =&gt; s.toList)</span><br><span class="line">res14: <span class="type">List</span>[<span class="type">Char</span>] = <span class="type">List</span>(<span class="type">S</span>, c, a, l, a, <span class="type">S</span>, p, a, r, k)</span><br></pre></td></tr></table></figure><p>上面flatMap执行时，会把books中的每个元素都toList，生成List[Char]，最终，多个Char的集合被“拍扁”成一个集合。<br><strong>filter操作</strong><br>遍历一个集合并从中获取满足指定条件的元素组成一个新的集合。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; books.filter(elem=&gt;elem.contains(<span class="string">"c"</span>)) foreach println</span><br><span class="line"><span class="type">Scala</span></span><br></pre></td></tr></table></figure><p><strong>reduce操作</strong><br>reduce是二元操作对集合中的元素进行规约，包含reduceLeft和reduceRight两种操作，前者从集合头部开始，后再从尾部开始操作。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">val</span> list = <span class="type">List</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">list: <span class="type">List</span>[<span class="type">Int</span>] = <span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; list.reduceLeft(_+_)</span><br><span class="line">res21: <span class="type">Int</span> = <span class="number">6</span></span><br><span class="line"><span class="comment">// 执行顺序</span></span><br><span class="line"><span class="comment">// 1+2 = 3</span></span><br><span class="line"><span class="comment">// 3+3 = 6</span></span><br><span class="line">scala&gt; list.reduceRight(_+_)</span><br><span class="line">res22: <span class="type">Int</span> = <span class="number">6</span></span><br><span class="line"><span class="comment">// 执行顺序</span></span><br><span class="line"><span class="comment">// 2+3 = 5</span></span><br><span class="line"><span class="comment">// 1+5 = 6</span></span><br></pre></td></tr></table></figure><p><strong>fold操作</strong><br>折叠（fold)操作和reduce(规约)操作比较类似。fold操作需要一个初始的“种子”值开始，并以该值作为上下文，处理集合中的每个元素。<br>也有foldLeft和foldRight函数，对于自身而言一般从左到右遍历。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">val</span> list = <span class="type">List</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">list: <span class="type">List</span>[<span class="type">Int</span>] = <span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; list.fold(<span class="number">10</span>)(_*_)</span><br><span class="line">res24: <span class="type">Int</span> = <span class="number">60</span></span><br></pre></td></tr></table></figure><hr><p><strong>声明:</strong><br>作者:上海IT技术圈<br>本文版权归作者和上海IT技术圈共有，任何人或团体、机构全部转载或者部分转载、摘录，请在文章明显位置注明作者和原文链接。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/scala.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;学习Spark过程中查看源码是不是很多都是Scala语言写的？不了解Scala怎么办？这里有一份Scala快速入门课，助力你快速掌握Scala的基本语法和使用。&lt;br&gt;本博客只是Scala入门篇
      
    
    </summary>
    
    
      <category term="tools" scheme="http://sparkx.com.cn/categories/tools/"/>
    
    
      <category term="spark" scheme="http://sparkx.com.cn/tags/spark/"/>
    
      <category term="工具" scheme="http://sparkx.com.cn/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="scala" scheme="http://sparkx.com.cn/tags/scala/"/>
    
  </entry>
  
  <entry>
    <title>spark stage划分</title>
    <link href="http://sparkx.com.cn/spark/spark-stage/"/>
    <id>http://sparkx.com.cn/spark/spark-stage/</id>
    <published>2019-11-28T11:23:02.000Z</published>
    <updated>2019-12-09T13:48:28.812Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Stage是什么"><a href="#Stage是什么" class="headerlink" title="Stage是什么"></a>Stage是什么</h2><p><code>Stage</code>是<code>Job</code>的基本调度单位，一个<code>Job</code>会分为多组<code>Task</code>，每组<code>Task</code>称为<code>Stage</code>，或者也被称为<code>TaskSet</code>，代表了一组关联的、相互之间没有<code>Shuffle</code>的依赖关系的任务组成的任务集。</p><h2 id="Stage划分方法"><a href="#Stage划分方法" class="headerlink" title="Stage划分方法"></a>Stage划分方法</h2><ul><li>在<code>DAG</code>中进行反方向解析，遇到宽依赖就断开，划分为一个stage；</li><li>遇到窄依赖就把当前的<code>RDD</code>加入到<code>Stage</code>中，将窄依赖尽量划分到同一个<code>Stage</code>中，可以实现流水线计算；</li></ul><p><img src="/images/spark/spark_stage_split.png" alt="根据RDD分区的依赖关系划分Stage"></p><p>上图是经典的<code>Stage</code>划分图,被分成三个<code>Stage</code>,在<code>Stage2</code>中，从<code>map</code>到<code>union</code>都是窄依赖，这两步操作可以形成一个流水操作。<br>流水操作实例分区7通过<code>map</code>操作生成的分区9，可以不用等待分区8到分区10这个<code>map</code>操作的计算结束，而是继续进行<code>union</code>操作，得到分区13，这样的流水执行大大提高了计算效率。</p><h2 id="源码分析Stage划分"><a href="#源码分析Stage划分" class="headerlink" title="源码分析Stage划分"></a>源码分析Stage划分</h2><p>Stage 位置: <code>org.apache.spark.scheduler.Stage</code></p><ul><li>Stage定义<br>其中rdd和parents分别记录的是切分处的RDD列表和父stage信息。<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span>[scheduler] <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Stage</span>(<span class="params"></span></span></span><br><span class="line"><span class="class"><span class="params">    val id: <span class="type">Int</span>,</span></span></span><br><span class="line"><span class="class"><span class="params">    val rdd: <span class="type">RDD</span>[_],</span></span></span><br><span class="line"><span class="class"><span class="params">    val numTasks: <span class="type">Int</span>,</span></span></span><br><span class="line"><span class="class"><span class="params">    val parents: <span class="type">List</span>[<span class="type">Stage</span>],</span></span></span><br><span class="line"><span class="class"><span class="params">    val firstJobId: <span class="type">Int</span>,</span></span></span><br><span class="line"><span class="class"><span class="params">    val callSite: <span class="type">CallSite</span></span>)</span></span><br><span class="line"><span class="class">  <span class="keyword">extends</span> <span class="title">Logging</span> </span>&#123;......&#125;</span><br></pre></td></tr></table></figure></li><li>Stage两个子类<br>子类分别增加了一个重要的属性。<table><thead><tr><th>stage</th><th align="left">差异属性</th><th align="left">作用</th></tr></thead><tbody><tr><td><code>ShuffleMapStage</code></td><td align="left"><code>shuffleDep: ShuffleDependency[_, _, _]</code></td><td align="left">保存依赖信息</td></tr><tr><td><code>ResultStage</code></td><td align="left"><code>func: (TaskContext, Iterator[_]) =&gt; _</code></td><td align="left">保存action对应的处理函数</td></tr></tbody></table></li><li>处理事件<br><code>DAGScheduler</code>的<code>handleJobSubmitted</code>方法处理<code>JobSubmitted</code>事件，源码及解释如下：<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span>[scheduler] <span class="keyword">val</span> activeJobs = <span class="keyword">new</span> <span class="type">HashSet</span>[<span class="type">ActiveJob</span>]</span><br><span class="line"><span class="keyword">private</span>[scheduler] <span class="function"><span class="keyword">def</span> <span class="title">handleJobSubmitted</span></span>(jobId: <span class="type">Int</span>,</span><br><span class="line">     finalRDD: <span class="type">RDD</span>[_],</span><br><span class="line">     func: (<span class="type">TaskContext</span>, <span class="type">Iterator</span>[_]) =&gt; _,</span><br><span class="line">     partitions: <span class="type">Array</span>[<span class="type">Int</span>],</span><br><span class="line">     callSite: <span class="type">CallSite</span>,</span><br><span class="line">     listener: <span class="type">JobListener</span>,</span><br><span class="line">     properties: <span class="type">Properties</span>): <span class="type">Unit</span> = &#123;</span><br><span class="line">   <span class="keyword">var</span> finalStage: <span class="type">ResultStage</span> = <span class="literal">null</span></span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">     <span class="comment">// New stage creation may throw an exception if, for example, jobs are run on a HadoopRDD whose underlying HDFS files have been deleted.</span></span><br><span class="line">  <span class="comment">//划分Stage,返回ResultStage，Stage使用parents属性保存父Stage</span></span><br><span class="line">     finalStage = createResultStage(finalRDD, func, partitions, jobId, callSite)</span><br><span class="line">   &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">    ......</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//创建ActiveJob，并添加到对应集合管理</span></span><br><span class="line">   <span class="keyword">val</span> job = <span class="keyword">new</span> <span class="type">ActiveJob</span>(jobId, finalStage, callSite, listener, properties)</span><br><span class="line">   clearCacheLocs()</span><br><span class="line">   <span class="keyword">val</span> jobSubmissionTime = clock.getTimeMillis()</span><br><span class="line">   jobIdToActiveJob(jobId) = job</span><br><span class="line">   activeJobs += job</span><br><span class="line">   finalStage.setActiveJob(job)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">val</span> stageIds = jobIdToStageIds(jobId).toArray</span><br><span class="line">   <span class="keyword">val</span> stageInfos = stageIds.flatMap(id =&gt; stageIdToStage.get(id).map(_.latestInfo))</span><br><span class="line">   listenerBus.post(</span><br><span class="line">     <span class="type">SparkListenerJobStart</span>(job.jobId, jobSubmissionTime, stageInfos, properties))</span><br><span class="line"> <span class="comment">//提交Stage</span></span><br><span class="line">   submitStage(finalStage)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li><li>划分Stage<br><code>DAGScheduler</code>的 <code>createResultStage</code>方法负责划分<code>DAG</code>生成<code>Stage</code>，<code>createResultStage</code>方法：<ul><li>1 调用 <code>getOrCreateParentStages</code>方法创建父<code>Stage</code>;</li><li>2 创建 <code>ResultStage</code>;<br>createResultStage：<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create a ResultStage associated with the provided jobId.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">createResultStage</span></span>(</span><br><span class="line">    rdd: <span class="type">RDD</span>[_],</span><br><span class="line">    func: (<span class="type">TaskContext</span>, <span class="type">Iterator</span>[_]) =&gt; _,</span><br><span class="line">    partitions: <span class="type">Array</span>[<span class="type">Int</span>],</span><br><span class="line">    jobId: <span class="type">Int</span>,</span><br><span class="line">    callSite: <span class="type">CallSite</span>): <span class="type">ResultStage</span> = &#123;</span><br><span class="line">  checkBarrierStageWithDynamicAllocation(rdd)</span><br><span class="line">  checkBarrierStageWithNumSlots(rdd)</span><br><span class="line">  checkBarrierStageWithRDDChainPattern(rdd, partitions.toSet.size)</span><br><span class="line">  <span class="comment">//创建父Stage</span></span><br><span class="line">  <span class="keyword">val</span> parents = getOrCreateParentStages(rdd, jobId)</span><br><span class="line">  <span class="keyword">val</span> id = nextStageId.getAndIncrement()</span><br><span class="line">  <span class="comment">//创建ResulteStage</span></span><br><span class="line">  <span class="keyword">val</span> stage = <span class="keyword">new</span> <span class="type">ResultStage</span>(id, rdd, func, partitions, parents, jobId, callSite)</span><br><span class="line">  stageIdToStage(id) = stage</span><br><span class="line">  updateJobIdStageIdMaps(jobId, stage)</span><br><span class="line">  stage</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><code>getOrCreateParentStages</code>方法很简单：<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get or create the list of parent stages for a given RDD.  The new Stages will be created with</span></span><br><span class="line"><span class="comment"> * the provided firstJobId.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">getOrCreateParentStages</span></span>(rdd: <span class="type">RDD</span>[_], firstJobId: <span class="type">Int</span>): <span class="type">List</span>[<span class="type">Stage</span>] = &#123;</span><br><span class="line">  getShuffleDependencies(rdd).map &#123; shuffleDep =&gt;</span><br><span class="line">    getOrCreateShuffleMapStage(shuffleDep, firstJobId)</span><br><span class="line">  &#125;.toList</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>首先根据方法<code>getShuffleDependencies</code>获取所有的<code>ShuffleDependency</code>:<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns shuffle dependencies that are immediate parents of the given RDD.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This function will not return more distant ancestors.  For example, if C has a shuffle</span></span><br><span class="line"><span class="comment"> * dependency on B which has a shuffle dependency on A:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * A &lt;-- B &lt;-- C</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * calling this function with rdd C will only return the B &lt;-- C dependency.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This function is scheduler-visible for the purpose of unit testing.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span>[scheduler] <span class="function"><span class="keyword">def</span> <span class="title">getShuffleDependencies</span></span>(</span><br><span class="line">    rdd: <span class="type">RDD</span>[_]): <span class="type">HashSet</span>[<span class="type">ShuffleDependency</span>[_, _, _]] = &#123;</span><br><span class="line">  <span class="comment">//记录所有ShuffleDependency</span></span><br><span class="line">  <span class="keyword">val</span> parents = <span class="keyword">new</span> <span class="type">HashSet</span>[<span class="type">ShuffleDependency</span>[_, _, _]]</span><br><span class="line">  <span class="comment">//记录所有已经处理的RDD</span></span><br><span class="line">  <span class="keyword">val</span> visited = <span class="keyword">new</span> <span class="type">HashSet</span>[<span class="type">RDD</span>[_]]</span><br><span class="line">  <span class="comment">//记录所有待处理的RDD</span></span><br><span class="line">  <span class="keyword">val</span> waitingForVisit = <span class="keyword">new</span> <span class="type">ListBuffer</span>[<span class="type">RDD</span>[_]]</span><br><span class="line">  <span class="comment">//把当前的ResultRdd,也就是最后一个RDD，放到watingForVistit中</span></span><br><span class="line">  waitingForVisit += rdd</span><br><span class="line">  <span class="keyword">while</span> (waitingForVisit.nonEmpty) &#123;</span><br><span class="line">    <span class="comment">//从waitingForVisit取出一个RDD去处理</span></span><br><span class="line">    <span class="keyword">val</span> toVisit = waitingForVisit.remove(<span class="number">0</span>)</span><br><span class="line">    <span class="comment">//已经处理的RDD列表中，包含要处理的这个RDD，保证下面的流程都是针对要处理的RDD</span></span><br><span class="line">    <span class="keyword">if</span> (!visited(toVisit)) &#123;</span><br><span class="line">      visited += toVisit</span><br><span class="line">      <span class="comment">//RDD的dependencies方法保存了所有RDD的依赖</span></span><br><span class="line">      toVisit.dependencies.foreach &#123;</span><br><span class="line">      <span class="comment">//如果是宽依赖，则添加到parents中</span></span><br><span class="line">      <span class="keyword">case</span> shuffleDep: <span class="type">ShuffleDependency</span>[_, _, _] =&gt;</span><br><span class="line">          parents += shuffleDep</span><br><span class="line">  <span class="comment">//如果是窄依赖，则把这个依赖的RDD添加到waitingForVisit，一直往上找，直到找到下一个宽依赖</span></span><br><span class="line">        <span class="keyword">case</span> dependency =&gt;</span><br><span class="line">          waitingForVisit.prepend(dependency.rdd)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  parents</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><code>getShuffleDependencies</code>里主要逻辑为：通过<code>action</code>操作后的<code>RDD</code>，往上遍历所有<code>RDD</code>，寻找所有的<code>ShuffleDependency</code>列表，并返回然后根据每个<code>Shuffle</code>划分<code>Stage</code>，看下<code>getOrCreateShuffleMapStage</code>代码：<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Mapping from shuffle dependency ID to the ShuffleMapStage that will generate the data for</span></span><br><span class="line"><span class="comment"> * that dependency. Only includes stages that are part of currently running job (when the job(s)</span></span><br><span class="line"><span class="comment"> * that require the shuffle stage complete, the mapping will be removed, and the only record of</span></span><br><span class="line"><span class="comment"> * the shuffle data will be in the MapOutputTracker).</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span>[scheduler] <span class="keyword">val</span> shuffleIdToMapStage = <span class="keyword">new</span> <span class="type">HashMap</span>[<span class="type">Int</span>, <span class="type">ShuffleMapStage</span>]</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Gets a shuffle map stage if one exists in shuffleIdToMapStage. Otherwise, if the</span></span><br><span class="line"><span class="comment"> * shuffle map stage doesn't already exist, this method will create the shuffle map stage in</span></span><br><span class="line"><span class="comment"> * addition to any missing ancestor shuffle map stages.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">getOrCreateShuffleMapStage</span></span>(</span><br><span class="line">    shuffleDep: <span class="type">ShuffleDependency</span>[_, _, _],</span><br><span class="line">    firstJobId: <span class="type">Int</span>): <span class="type">ShuffleMapStage</span> = &#123;</span><br><span class="line">  shuffleIdToMapStage.get(shuffleDep.shuffleId) <span class="keyword">match</span> &#123;</span><br><span class="line">    <span class="comment">//如果配配直接返回</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">Some</span>(stage) =&gt;</span><br><span class="line">      stage</span><br><span class="line">    <span class="comment">//否则重新调用createShuffleMapStage方法创建stage</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">None</span> =&gt;</span><br><span class="line">      <span class="comment">// Create stages for all missing ancestor shuffle dependencies.</span></span><br><span class="line">      getMissingAncestorShuffleDependencies(shuffleDep.rdd).foreach &#123; dep =&gt;</span><br><span class="line">        <span class="comment">// Even though getMissingAncestorShuffleDependencies only returns shuffle dependencies</span></span><br><span class="line">        <span class="comment">// that were not already in shuffleIdToMapStage, it's possible that by the time we</span></span><br><span class="line">        <span class="comment">// get to a particular dependency in the foreach loop, it's been added to</span></span><br><span class="line">        <span class="comment">// shuffleIdToMapStage by the stage creation process for an earlier dependency. See</span></span><br><span class="line">        <span class="comment">// SPARK-13902 for more information.</span></span><br><span class="line">        <span class="keyword">if</span> (!shuffleIdToMapStage.contains(dep.shuffleId)) &#123;</span><br><span class="line">          createShuffleMapStage(dep, firstJobId)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// Finally, create a stage for the given shuffle dependency.</span></span><br><span class="line">      createShuffleMapStage(shuffleDep, firstJobId)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>而<code>getMissingAncestorShuffleDependencies</code> 方法查找在<code>shuffleToMapStage</code>中未注的shuffle dependencies,并返回父shuffleDep用来创建stage<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** Find ancestor shuffle dependencies that are not registered in shuffleToMapStage yet */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">getMissingAncestorShuffleDependencies</span></span>(</span><br><span class="line">    rdd: <span class="type">RDD</span>[_]): <span class="type">ListBuffer</span>[<span class="type">ShuffleDependency</span>[_, _, _]] = &#123;</span><br><span class="line">  <span class="keyword">val</span> ancestors = <span class="keyword">new</span> <span class="type">ListBuffer</span>[<span class="type">ShuffleDependency</span>[_, _, _]]</span><br><span class="line">  <span class="keyword">val</span> visited = <span class="keyword">new</span> <span class="type">HashSet</span>[<span class="type">RDD</span>[_]]</span><br><span class="line">  <span class="comment">// We are manually maintaining a stack here to prevent StackOverflowError</span></span><br><span class="line">  <span class="comment">// caused by recursively visiting</span></span><br><span class="line">  <span class="keyword">val</span> waitingForVisit = <span class="keyword">new</span> <span class="type">ListBuffer</span>[<span class="type">RDD</span>[_]]</span><br><span class="line">  waitingForVisit += rdd</span><br><span class="line">  <span class="keyword">while</span> (waitingForVisit.nonEmpty) &#123;</span><br><span class="line">    <span class="keyword">val</span> toVisit = waitingForVisit.remove(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> (!visited(toVisit)) &#123;</span><br><span class="line">      visited += toVisit</span><br><span class="line">      getShuffleDependencies(toVisit).foreach &#123; shuffleDep =&gt;</span><br><span class="line">        <span class="keyword">if</span> (!shuffleIdToMapStage.contains(shuffleDep.shuffleId)) &#123;</span><br><span class="line">          ancestors.prepend(shuffleDep)</span><br><span class="line">          waitingForVisit.prepend(shuffleDep.rdd)</span><br><span class="line">        &#125; <span class="comment">// Otherwise, the dependency and its ancestors have already been registered.</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  ancestors</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>至此，<code>Stage</code>划分基本完毕。</li></ul></li></ul><hr><p><strong>声明:</strong><br>作者:上海IT技术圈<br>本文版权归作者和上海IT技术圈共有，任何人或团体、机构全部转载或者部分转载、摘录，请在文章明显位置注明作者和原文链接。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Stage是什么&quot;&gt;&lt;a href=&quot;#Stage是什么&quot; class=&quot;headerlink&quot; title=&quot;Stage是什么&quot;&gt;&lt;/a&gt;Stage是什么&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Stage&lt;/code&gt;是&lt;code&gt;Job&lt;/code&gt;的基本调度单位，一个&lt;
      
    
    </summary>
    
    
      <category term="spark" scheme="http://sparkx.com.cn/categories/spark/"/>
    
    
      <category term="spark" scheme="http://sparkx.com.cn/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>spark rdd介绍</title>
    <link href="http://sparkx.com.cn/spark/spark-rdd/"/>
    <id>http://sparkx.com.cn/spark/spark-rdd/</id>
    <published>2019-11-28T01:35:26.000Z</published>
    <updated>2019-12-09T13:48:28.762Z</updated>
    
    <content type="html"><![CDATA[<h2 id="RDD是什么"><a href="#RDD是什么" class="headerlink" title="RDD是什么"></a>RDD是什么</h2><p><code>RDD</code>是Resillient Distributed DataSet(弹性分布式数据集)的简称,是分布式内存的一个抽象概念，提供了一种高度受限的共享内存模型</p><h2 id="RDD运行原理"><a href="#RDD运行原理" class="headerlink" title="RDD运行原理"></a>RDD运行原理</h2><h4 id="设计背景"><a href="#设计背景" class="headerlink" title="设计背景"></a>设计背景</h4><p>许多迭代算法（比如机器学习、图计算）和交互式数据挖掘工具，不同计算阶段之间会重用中间结果，RDD就是满足这种需求出现的，它提供一个抽象的数据结构，我们不必担心底层数据的分布式特性，只需将具体的应用逻辑表达为一系列转换处理，不同RDD之间的转换操作形成依赖关系，可以实现管道化，避免中间数据存储</p><h4 id="RDD概念"><a href="#RDD概念" class="headerlink" title="RDD概念"></a>RDD概念</h4><ul><li><code>RDD</code>就是一个分布式对象集合，本质上是一个只读的分区记录集合，每个<code>RDD</code>可以分成多个分区，每个分区就是一个数据集片段，并且<code>RDD</code>的不同分区可以被保存到集群中不同的节点上，从而可以在集群中的不同节点上进行并行计算</li><li><code>RDD</code>提供了一种高度受限的共享内存模型，即<code>RDD</code>是只读的记录分区的集合，不能直接修改，只能基于稳定的物理存储中的数据集合创建<code>RDD</code>,或者通过在其他<code>RDD</code>上执行确定的转换操作（如map、join、group by等）而创建得到新的<code>RDD</code></li><li><code>RDD</code>提供了一组丰富的操作以支持常见数据运算，分为”动作”（action)和”转换”（Transformation）两种类型</li><li><code>RDD</code>提供的转换接口都非常简单，都是类似map、filter、groupBy、join等粗粒度的数据转换操作，而不是针对某个数据项的细粒度修改（不适合网页爬虫）,表面上<code>RDD</code>功能受限、不够强大，实际上它已经被实践证明可以高效地表达许多框架的编程模型（比如MapReduce、SQL、Pregel)<h4 id="RDD的2种创建方式"><a href="#RDD的2种创建方式" class="headerlink" title="RDD的2种创建方式"></a>RDD的2种创建方式</h4><img src="/images/spark/spark_rdd_run.png" alt="rdd执行过程的一个实例"></li><li>由一个已经存在的scala集合创建,一般只在试验性代码中使用，生产环境不大可能用到<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> rdd = sc.paralellize(<span class="type">List</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))</span><br></pre></td></tr></table></figure></li><li>由外部存储系统的数据创建，比如本地文件，HDFS, Hbase等，常用textFile方法<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> rdd = sc.textFile(<span class="string">"hdfs:///tmp/myfile.txt"</span>)</span><br></pre></td></tr></table></figure><h4 id="RDD的2种操作"><a href="#RDD的2种操作" class="headerlink" title="RDD的2种操作"></a>RDD的2种操作</h4></li><li>Transtormation算子<table><thead><tr><th>方法名</th><th align="left">解释</th></tr></thead><tbody><tr><td><code>map(func</code>)</td><td align="left">返回一个新的分布式数据集，由每个原元素经过func函数处理后的新元素组成</td></tr><tr><td><code>filter(func)</code></td><td align="left">返回一个新的数据集，由经过func函数处理后返回值为true的元素组成</td></tr><tr><td><code>flatMap(func)</code></td><td align="left">类似<code>map</code>，但每一个输入元素，会被映射为0个或多个输出元素，（因此func函数返回值是一个seq，而不是单一元素）</td></tr><tr><td><code>mapPartitions(func)</code></td><td align="left">类似于<code>map</code>，对<code>RDD</code>的每个分区起作用，在类型为T的<code>RDD</code>运行时，func的函数类型必须是<code>Iterator[T]=&gt;Iterator[U]</code></td></tr><tr><td><code>mapPartitionsWithIndex(func)</code></td><td align="left">和<code>mapPartitions</code>类似，但func带有一个整数参数表上分区的索引值，在类型为T的<code>RDD</code>上运行时，func的函数参数类型必须序是<code>(int,Iterator[T])=&gt;Iterator[U]</code></td></tr><tr><td><code>smap(withReplacement,fraction,seed)</code></td><td align="left">根据给定的随机种子<code>seed</code>，随机抽样出数量为<code>fraction</code>的数据</td></tr><tr><td><code>pipe(command,[envVars])</code></td><td align="left">通过管道的方式对<code>RDD</code>的每个分区使用shell命令进行操作，返回对应的结果</td></tr><tr><td><code>union(otherDataSet)</code></td><td align="left">返回一个新的数据集，由元素数据集参数联合而成</td></tr><tr><td><code>intersection(otherDataSet)</code></td><td align="left">求两个<code>RDD</code>的交集</td></tr><tr><td><code>distinct([numPartitions])</code></td><td align="left">返回一个包含源数据集中所有不重复元素的新数据集</td></tr><tr><td><code>groupByKey([numPartitions])</code></td><td align="left">在一个由(k,v)对组成的数据集上调用，返回一个(k,Seq[V])对组成的数据集。默认情况下，输出结果的并行度依赖于父<code>RDD</code>的分区数目，如果要想对key进行聚合的话，使用<code>reduceByKey</code>或者<code>combineByKey</code>会有更好的性能</td></tr><tr><td><code>reduceByKey(func,[numPartitions])</code></td><td align="left">在一个(k,v)对的数据集上使用，返回一个(k,v)对数据集，key相同值都会被使用指定的<code>reduce</code>函数聚合到一起，<code>reduce</code>任务的个数据是可以通过第二个可选参数来配置</td></tr><tr><td><code>sortByKey([ascending],[numPartitions])</code></td><td align="left">在类型为(k,v)的数据集上调用，返回以k为键进行排序的(k,v)对数据集，升序或者降序有boolean型的<code>ascending</code>参数决定</td></tr><tr><td><code>join(otherDataSet,[numPartitions])</code></td><td align="left">在类型为(k,v)和(k,w)类型的数据集上调用，返回一个(k,(v,w))对，每个key中的所有元素都在一起的数据集</td></tr><tr><td><code>cogroup(otherDataSet,[numPartitions])</code></td><td align="left">在类型为(k,v)和(k,w)类型的数据上调用，返回一个数据集，组成元素为<code>(k,Iterable[V],Iterable[W] tuples)</code></td></tr><tr><td><code>cartesian(otherDataSet</code>)</td><td align="left">笛卡尔积，但在数据集T合U上调用时，返回一个(T,U)对的数据集，所有元素交互进行笛卡尔积</td></tr><tr><td><code>coalesce(numPartitions</code>)</td><td align="left">对<code>RDD</code>中的分区减少指定数目，通常在过滤完一个大数据集之后进行操作</td></tr><tr><td><code>repartition(numPartitions)</code></td><td align="left">将<code>RDD</code>中素有<code>records</code>平均划分到<code>numPartitions</code>个<code>partition</code>中</td></tr></tbody></table></li><li>Action算子<table><thead><tr><th>方法名</th><th align="left">解释</th></tr></thead><tbody><tr><td><code>reduce(func)</code></td><td align="left">通过函数func聚集数据集中的所有元素，这个函数必须是关联性的，确保可以被正确的并发执行</td></tr><tr><td><code>collect()</code></td><td align="left">在driver的程序中，以数组的形式，返回数据集的所有元素，这通常会在使用<code>filter</code>或者其他操作后，返回一个足够小的数据集在使用</td></tr><tr><td><code>count()</code></td><td align="left">返回数据的元素个数</td></tr><tr><td><code>first()</code></td><td align="left">返回数据集的第一个元素(类似于take(1))</td></tr><tr><td><code>take(n)</code></td><td align="left">返回一个数组，由数据集的前n个元素组成。注意此操作目前并非并行执行的，而是<code>driver</code>程序所在集群</td></tr><tr><td><code>takeSample(withReplacement,num,seed)</code></td><td align="left">返回一个数组，在数据集中随机采样<code>num</code>个元素组成，可以选择是否用随机数替换不足的部分，<code>seed</code>用于指定随机数生成器种子</td></tr><tr><td><code>takeOrderd(n,[ordering])</code></td><td align="left">排序后的<code>limit (n)</code></td></tr><tr><td><code>saveAsTextFile(path)</code></td><td align="left">将数据集的元素，以<code>textfile</code>的形式保存到本地文件系统<code>hdfs</code>或者任何其他<code>hadoop</code>支持的文件系统，<code>spark</code>将会调用每个元素的<code>toString</code>方法，并将它转换为文件中的一行文本</td></tr><tr><td><code>saveAsSequenceFile(path)</code></td><td align="left">将数据集的元素以sequencefile的格式保存到指定的目录下、本地系统、<code>hdfs</code>或者任何其他<code>hadoop</code>支持的文件系统，<code>RDD</code>的元素必须有<code>key-value</code>对组成，并都实现了<code>hadoop</code>的<code>writable</code>接口或隐式可以转换为<code>writable</code></td></tr><tr><td><code>saveAsObjectFlie(path)</code></td><td align="left">使用java的序列化方法保存到本地文件，可以被<code>sparkContext.objextFlie()</code>加载</td></tr><tr><td><code>countByKey()</code></td><td align="left">对(k,v)类型的RDD有效，返回一个(k,Int)对的map,表示每一个可以对应的元素个数</td></tr><tr><td><code>foreache(func)</code></td><td align="left">在数据集的每一个元素上，运行函数func，通常用于更新一个累加器变量，或者和外部存储系统做交互</td></tr></tbody></table></li></ul><h4 id="RDD特点"><a href="#RDD特点" class="headerlink" title="RDD特点"></a>RDD特点</h4><ul><li>高效的容错性<ul><li>现有容错机制：数据复制或者记录日志</li><li>血缘关系：重新计算丢失分区无需回滚系统、重算过程在不同节点之间并行、只记录粗粒度的操作</li></ul></li><li>中间结果持久化到内存，数据在内存中的多个<code>RDD</code>操作之间进行传递，避免了不必要的读写磁盘开销</li><li>存放的数据key是Java对象，避免了不必要的对象序列化和反序列化，但是为了节约内存一般还会选序列化，比如：lz4。</li></ul><blockquote><p>缓存数据时可以选择是否同时进行序列化。序列化后占用的空间会减少，但有序列化/反序列化的成本。<br>如果确定需要使用序列化，则同时应该设置序列化的方式，默认是使用java自带的序列化机制，可以通过kyro等框架优化序列化效率。<br>即使完全无其它属性，一个java对象都要占据8个字节的内存，包括：锁标志位、经历了几次gc、类的类信息等，因此序列化可节省此部分的空间。</p></blockquote><h4 id="RDD源码"><a href="#RDD源码" class="headerlink" title="RDD源码"></a>RDD源码</h4><p>RDD 位置: <code>org.apache.spark.rdd.RDD</code></p><ul><li>RDD是一个抽象类定义了所有RDD共有的一些属性和方法，定义如下：<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">RDD</span>[<span class="type">T</span>: <span class="type">ClassTag</span>](<span class="params"></span></span></span><br><span class="line"><span class="class"><span class="params">    @transient private var _sc: <span class="type">SparkContext</span>,</span></span></span><br><span class="line"><span class="class"><span class="params">    @transient private var deps: <span class="type">Seq</span>[<span class="type">Dependency</span>[_]]</span></span></span><br><span class="line"><span class="class"><span class="params">  </span>) <span class="keyword">extends</span> <span class="title">Serializable</span> <span class="keyword">with</span> <span class="title">Logging</span> </span>&#123; ......&#125;</span><br></pre></td></tr></table></figure><code>@transient private var _sc: SparkContex</code> 在主构建函数中定义，表示RDD所在运行环境，可用于获取配置，清理环境等。<br><code>@transient private var deps: Seq[Dependency[_]]</code> 定义了这个RDD对父RDD的依赖关系。</li><li>RDD有5个主要属性:<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注释说明</span></span><br><span class="line"> *  - <span class="type">A</span> list of partitions</span><br><span class="line"> *  - <span class="type">A</span> function <span class="keyword">for</span> computing each split</span><br><span class="line"> *  - <span class="type">A</span> list of dependencies on other <span class="type">RDDs</span></span><br><span class="line"> *  - <span class="type">Optionally</span>, a <span class="type">Partitioner</span> <span class="keyword">for</span> key-value <span class="type">RDDs</span> (e.g. to say that the <span class="type">RDD</span> is hash-partitioned)</span><br><span class="line"> *  - <span class="type">Optionally</span>, a list of preferred locations to compute each split on (e.g. block locations <span class="keyword">for</span></span><br><span class="line"> *    an <span class="type">HDFS</span> file)</span><br><span class="line"><span class="comment">//5个属性的源码</span></span><br><span class="line"><span class="comment">// =======================================================================</span></span><br><span class="line"><span class="comment">// Methods that should be implemented by subclasses of RDD</span></span><br><span class="line"><span class="comment">// =======================================================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* :: DeveloperApi ::</span></span><br><span class="line"><span class="comment">* Implemented by subclasses to compute a given partition.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@DeveloperApi</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">compute</span></span>(split: <span class="type">Partition</span>, context: <span class="type">TaskContext</span>): <span class="type">Iterator</span>[<span class="type">T</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Implemented by subclasses to return the set of partitions in this RDD. This method will only</span></span><br><span class="line"><span class="comment">* be called once, so it is safe to implement a time-consuming computation in it.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* The partitions in this array must satisfy the following property:</span></span><br><span class="line"><span class="comment">*   `rdd.partitions.zipWithIndex.forall &#123; case (partition, index) =&gt; partition.index == index &#125;`</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">def</span> <span class="title">getPartitions</span></span>: <span class="type">Array</span>[<span class="type">Partition</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Implemented by subclasses to return how this RDD depends on parent RDDs. This method will only</span></span><br><span class="line"><span class="comment">* be called once, so it is safe to implement a time-consuming computation in it.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">def</span> <span class="title">getDependencies</span></span>: <span class="type">Seq</span>[<span class="type">Dependency</span>[_]] = deps</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Optionally overridden by subclasses to specify placement preferences.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">def</span> <span class="title">getPreferredLocations</span></span>(split: <span class="type">Partition</span>): <span class="type">Seq</span>[<span class="type">String</span>] = <span class="type">Nil</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Optionally overridden by subclasses to specify how they are partitioned. */</span></span><br><span class="line"><span class="meta">@transient</span> <span class="keyword">val</span> partitioner: <span class="type">Option</span>[<span class="type">Partitioner</span>] = <span class="type">None</span></span><br></pre></td></tr></table></figure></li><li>Tranformation和Action方法<br>RDD中定义了所有RDD所共用的tranformation与action，如map, filter, reduce, first等，举个filter的例子：<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Return a new RDD containing only the elements that satisfy a predicate.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">filter</span></span>(f: <span class="type">T</span> =&gt; <span class="type">Boolean</span>): <span class="type">RDD</span>[<span class="type">T</span>] = withScope &#123;</span><br><span class="line"><span class="keyword">val</span> cleanF = sc.clean(f)</span><br><span class="line"><span class="keyword">new</span> <span class="type">MapPartitionsRDD</span>[<span class="type">T</span>, <span class="type">T</span>](</span><br><span class="line">  <span class="keyword">this</span>,</span><br><span class="line">  (_, _, iter) =&gt; iter.filter(cleanF),</span><br><span class="line">  preservesPartitioning = <span class="literal">true</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="RDD子类"><a href="#RDD子类" class="headerlink" title="RDD子类"></a>RDD子类</h4><code>CoGroupedRDD, EdgeRDD, EdgeRDDImpl, HadoopRDD, JdbcRDD, NewHadoopRDD, PartitionPruningRDD, ShuffledRDD, UnionRDD, VertexRDD, VertexRDDImpl</code><h4 id="RDD缓存方式"><a href="#RDD缓存方式" class="headerlink" title="RDD缓存方式"></a>RDD缓存方式</h4>对于一个经常被使用的RDD或者计算代价较大的RDD，将其缓存下来，会大大的提高处理速度，缓存方法有如下两种：</li><li>persist()是标准的缓存方法 </li><li>cache()是persist简化方法，当只使用内存作缓存时使用,看源码一目了然<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** Persist RDDs of this DStream with the default storage level (MEMORY_ONLY_SER) */</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cache</span></span>(): <span class="type">DStream</span>[<span class="type">T</span>] = persist()</span><br></pre></td></tr></table></figure><h4 id="12种缓存级别"><a href="#12种缓存级别" class="headerlink" title="12种缓存级别"></a>12种缓存级别</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * :: DeveloperApi ::</span></span><br><span class="line"><span class="comment"> * Flags for controlling the storage of an RDD. Each StorageLevel records whether to use memory,</span></span><br><span class="line"><span class="comment"> * or ExternalBlockStore, whether to drop the RDD to disk if it falls out of memory or</span></span><br><span class="line"><span class="comment"> * ExternalBlockStore, whether to keep the data in memory in a serialized format, and whether</span></span><br><span class="line"><span class="comment"> * to replicate the RDD partitions on multiple nodes.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The [[org.apache.spark.storage.StorageLevel$]] singleton object contains some static constants</span></span><br><span class="line"><span class="comment"> * for commonly useful storage levels. To create your own storage level object, use the</span></span><br><span class="line"><span class="comment"> * factory method of the singleton object (`StorageLevel(...)`).</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@DeveloperApi</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StorageLevel</span> <span class="title">private</span>(<span class="params"></span></span></span><br><span class="line"><span class="class"><span class="params">    private var _useDisk: <span class="type">Boolean</span>,</span></span></span><br><span class="line"><span class="class"><span class="params">    private var _useMemory: <span class="type">Boolean</span>,</span></span></span><br><span class="line"><span class="class"><span class="params">    private var _useOffHeap: <span class="type">Boolean</span>,</span></span></span><br><span class="line"><span class="class"><span class="params">    private var _deserialized: <span class="type">Boolean</span>,</span></span></span><br><span class="line"><span class="class"><span class="params">    private var _replication: <span class="type">Int</span> = 1</span>)<span class="keyword">extends</span> <span class="title">Externalizable</span> </span></span><br><span class="line"><span class="class">......</span></span><br><span class="line"><span class="class"><span class="title">/**</span></span></span><br><span class="line"><span class="class"> <span class="title">*</span> <span class="title">Various</span> [[org.apache.spark.storage.<span class="type">StorageLevel</span>]] <span class="title">defined</span> <span class="title">and</span> <span class="title">utility</span> <span class="title">functions</span> <span class="title">for</span> <span class="title">creating</span> <span class="title">new</span> <span class="title">storage</span> <span class="title">levels</span>.</span></span><br><span class="line"><span class="class"> <span class="title">*</span> <span class="title">对应参数见构造函数</span></span></span><br><span class="line"><span class="class"> <span class="title">*/</span></span></span><br><span class="line"><span class="class"><span class="title">object</span> <span class="title">StorageLevel</span> </span>&#123;</span><br><span class="line">  <span class="keyword">val</span> <span class="type">NONE</span> = <span class="keyword">new</span> <span class="type">StorageLevel</span>(<span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>)  <span class="comment">//不缓存</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">DISK_ONLY</span> = <span class="keyword">new</span> <span class="type">StorageLevel</span>(<span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>) <span class="comment">//只使用磁盘</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">DISK_ONLY_2</span> = <span class="keyword">new</span> <span class="type">StorageLevel</span>(<span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="number">2</span>)<span class="comment">// 只使用磁盘,副本数2</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">MEMORY_ONLY</span> = <span class="keyword">new</span> <span class="type">StorageLevel</span>(<span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">true</span>) <span class="comment">//只使用内存</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">MEMORY_ONLY_2</span> = <span class="keyword">new</span> <span class="type">StorageLevel</span>(<span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">true</span>, <span class="number">2</span>) <span class="comment">//只使用内存，副本数2</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">MEMORY_ONLY_SER</span> = <span class="keyword">new</span> <span class="type">StorageLevel</span>(<span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>) <span class="comment">//使用内存并序列化</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">MEMORY_ONLY_SER_2</span> = <span class="keyword">new</span> <span class="type">StorageLevel</span>(<span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="number">2</span>) <span class="comment">//使用内存并序列化，复本数2</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">MEMORY_AND_DISK</span> = <span class="keyword">new</span> <span class="type">StorageLevel</span>(<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">true</span>) <span class="comment">//使用缓存和磁盘，缓存不足写到磁盘</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">MEMORY_AND_DISK_2</span> = <span class="keyword">new</span> <span class="type">StorageLevel</span>(<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">true</span>, <span class="number">2</span>)<span class="comment">//使用缓存和磁盘，缓存不足写到磁盘，副本数2</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">MEMORY_AND_DISK_SER</span> = <span class="keyword">new</span> <span class="type">StorageLevel</span>(<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>)<span class="comment">//使用缓存和磁盘并序列化，缓存不足写到磁盘</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">MEMORY_AND_DISK_SER_2</span> = <span class="keyword">new</span> <span class="type">StorageLevel</span>(<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="number">2</span>) <span class="comment">//使用缓存和磁盘并序列化，缓存不足写到磁盘，副本数2</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">OFF_HEAP</span> = <span class="keyword">new</span> <span class="type">StorageLevel</span>(<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="number">1</span>) <span class="comment">//使用JVM堆外内存</span></span><br><span class="line">  ......</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>从1.6.0版本开始，Spark内存管理模型发生了变化。旧的内存管理模型由StaticMemoryManager类实现，现在称为“legacy（遗留）”。默认情况下，“Legacy”模式被禁用，这意味着在Spark 1.5.x和1.6.0上运行相同的代码会导致不同的行为。<br>为了兼容，您可以使用spark.memory.useLegacyMode参数（目前spark2.4版本中也依然保留这个静态内存管理模型）启用“旧”内存模型：<br>spark.memory.useLegacyMode=true（默认为false）<blockquote><p>注意：在Spark1.x以前，默认的off_heap使用的是Tachyon。但是Spark中默认操作Tachyon的TachyonBlockManager开发完成之后，代码就不再更新。当Tachyon升级为Alluxio之后移除不使用的API，导致Spark默认off_heap不可用（spark1.6+）。<br>错误情况可参考：<a href="https://alluxio.atlassian.net/browse/ALLUXIO-1881" target="_blank" rel="noopener">https://alluxio.atlassian.net/browse/ALLUXIO-1881</a></p></blockquote></li></ul><h4 id="RDD之间的依赖关系"><a href="#RDD之间的依赖关系" class="headerlink" title="RDD之间的依赖关系"></a>RDD之间的依赖关系</h4><ul><li>窄依赖表现为一个父<code>RDD</code>的分区对应于一个子<code>RDD</code>的分区或多个父<code>RDD</code>的分区对应于一个子<code>RDD</code>的分区（不依赖于全部分区）</li><li>宽依赖则表现为存在一个父<code>RDD</code>的一个分区对应一个子<code>RDD</code>的多个分区<br><img src="/images/spark/spark_rdd_dependency.png" alt=""><h4 id="RDD依赖源码分析"><a href="#RDD依赖源码分析" class="headerlink" title="RDD依赖源码分析"></a>RDD依赖源码分析</h4>与依赖相关的5个类，<code>Dependency</code>、<code>NarrowDependency</code>、<code>OneToOneDependency</code>、<code>RangeDependency</code>、<code>ShuffleDependency</code>，它们位于同一个Scala文件中；<br>Dependency 位置 <code>org.apache.spark.Dependency</code> 2.4.x版。</li></ul><p><code>NarrowDependency(abstract class)</code>与<code>ShuffleDependency</code>直接继承<code>Dependency</code><br><code>OneToOneDependency</code>与<code>RangeDependency</code>继承自<code>NarrowDependency</code><br>所以，关于<code>Dependency</code>的真正实现有三个，2个窄依赖：<code>OneToOneDependency</code>与<code>RangeDependency</code>，一个宽依赖：<code>ShuffleDependency</code>。</p><ul><li>Dependency是抽象类<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * :: DeveloperApi ::</span></span><br><span class="line"><span class="comment"> * Base class for dependencies.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@DeveloperApi</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Dependency</span>[<span class="type">T</span>] <span class="keyword">extends</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">rdd</span></span>: <span class="type">RDD</span>[<span class="type">T</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="窄依赖"><a href="#窄依赖" class="headerlink" title="窄依赖"></a>窄依赖</h6></li><li>NarrowDependency<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * :: DeveloperApi ::</span></span><br><span class="line"><span class="comment"> * Base class for dependencies where each partition of the child RDD depends on a small number</span></span><br><span class="line"><span class="comment"> * of partitions of the parent RDD. Narrow dependencies allow for pipelined execution.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@DeveloperApi</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">NarrowDependency</span>[<span class="type">T</span>](<span class="params">_rdd: <span class="type">RDD</span>[<span class="type">T</span>]</span>) <span class="keyword">extends</span> <span class="title">Dependency</span>[<span class="type">T</span>] </span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Get the parent partitions for a child partition.</span></span><br><span class="line"><span class="comment">   * @param partitionId a partition of the child RDD</span></span><br><span class="line"><span class="comment">   * @return the partitions of the parent RDD that the child partition depends upon</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">getParents</span></span>(partitionId: <span class="type">Int</span>): <span class="type">Seq</span>[<span class="type">Int</span>]</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">rdd</span></span>: <span class="type">RDD</span>[<span class="type">T</span>] = _rdd</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>getParents根据子RDD的分区ID返回父RDD的分区ID,主构建函数中的rdd是父RDD，下同。</li><li>OneToOneDependency<br>一对一依赖，即每个子RDD的分区的与父RDD的分区一一对应。重写了NarrowDependency的getParents方法，返回一个List，这个List只有一个元素，且与子RDD的分区ID相同。即子分区的ID与父分区的ID一一对应且相等<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * :: DeveloperApi ::</span></span><br><span class="line"><span class="comment"> * Represents a one-to-one dependency between partitions of the parent and child RDDs.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@DeveloperApi</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OneToOneDependency</span>[<span class="type">T</span>](<span class="params">rdd: <span class="type">RDD</span>[<span class="type">T</span>]</span>) <span class="keyword">extends</span> <span class="title">NarrowDependency</span>[<span class="type">T</span>](<span class="params">rdd</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">getParents</span></span>(partitionId: <span class="type">Int</span>): <span class="type">List</span>[<span class="type">Int</span>] = <span class="type">List</span>(partitionId)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>RangeDependency<br>子RDD中的每个分区依赖于父RDD的几个分区，而父RDD的每个分区仅被一个子RDD分区所依赖，即多对一的关系。它仅仅被UnionRDD所使用。<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * :: DeveloperApi ::</span></span><br><span class="line"><span class="comment"> * Represents a one-to-one dependency between ranges of partitions in the parent and child RDDs.</span></span><br><span class="line"><span class="comment"> * @param rdd the parent RDD</span></span><br><span class="line"><span class="comment"> * @param inStart the start of the range in the parent RDD</span></span><br><span class="line"><span class="comment"> * @param outStart the start of the range in the child RDD</span></span><br><span class="line"><span class="comment"> * @param length the length of the range</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@DeveloperApi</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RangeDependency</span>[<span class="type">T</span>](<span class="params">rdd: <span class="type">RDD</span>[<span class="type">T</span>], inStart: <span class="type">Int</span>, outStart: <span class="type">Int</span>, length: <span class="type">Int</span></span>)</span></span><br><span class="line"><span class="class">  <span class="keyword">extends</span> <span class="title">NarrowDependency</span>[<span class="type">T</span>](<span class="params">rdd</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">getParents</span></span>(partitionId: <span class="type">Int</span>): <span class="type">List</span>[<span class="type">Int</span>] = &#123;</span><br><span class="line">    <span class="keyword">if</span> (partitionId &gt;= outStart &amp;&amp; partitionId &lt; outStart + length) &#123;</span><br><span class="line">      <span class="type">List</span>(partitionId - outStart + inStart)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="type">Nil</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="宽依赖"><a href="#宽依赖" class="headerlink" title="宽依赖"></a>宽依赖</h6>宽依赖只有一种：shuffleDependency，即子RDD依赖于父RDD的所有分区，父RDD的分每个区被所有子RDD的分区所依赖。<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * :: DeveloperApi ::</span></span><br><span class="line"><span class="comment"> * Represents a dependency on the output of a shuffle stage. Note that in the case of shuffle,</span></span><br><span class="line"><span class="comment"> * the RDD is transient since we don't need it on the executor side.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param _rdd the parent RDD</span></span><br><span class="line"><span class="comment"> * @param partitioner partitioner used to partition the shuffle output</span></span><br><span class="line"><span class="comment"> * @param serializer [[org.apache.spark.serializer.Serializer Serializer]] to use. If not set</span></span><br><span class="line"><span class="comment"> *                   explicitly then the default serializer, as specified by `spark.serializer`</span></span><br><span class="line"><span class="comment"> *                   config option, will be used.</span></span><br><span class="line"><span class="comment"> * @param keyOrdering key ordering for RDD's shuffles</span></span><br><span class="line"><span class="comment"> * @param aggregator map/reduce-side aggregator for RDD's shuffle</span></span><br><span class="line"><span class="comment"> * @param mapSideCombine whether to perform partial aggregation (also known as map-side combine)</span></span><br><span class="line"><span class="comment"> * @param shuffleWriterProcessor the processor to control the write behavior in ShuffleMapTask</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@DeveloperApi</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShuffleDependency</span>[<span class="type">K</span>: <span class="type">ClassTag</span>, <span class="type">V</span>: <span class="type">ClassTag</span>, <span class="type">C</span>: <span class="type">ClassTag</span>](<span class="params"></span></span></span><br><span class="line"><span class="class"><span class="params">    @transient private val _rdd: <span class="type">RDD</span>[_ &lt;: <span class="type">Product2</span>[<span class="type">K</span>, <span class="type">V</span>]],</span></span></span><br><span class="line"><span class="class"><span class="params">    val partitioner: <span class="type">Partitioner</span>,</span></span></span><br><span class="line"><span class="class"><span class="params">    val serializer: <span class="type">Serializer</span> = <span class="type">SparkEnv</span>.get.serializer,</span></span></span><br><span class="line"><span class="class"><span class="params">    val keyOrdering: <span class="type">Option</span>[<span class="type">Ordering</span>[<span class="type">K</span>]] = <span class="type">None</span>,</span></span></span><br><span class="line"><span class="class"><span class="params">    val aggregator: <span class="type">Option</span>[<span class="type">Aggregator</span>[<span class="type">K</span>, <span class="type">V</span>, <span class="type">C</span>]] = <span class="type">None</span>,</span></span></span><br><span class="line"><span class="class"><span class="params">    val mapSideCombine: <span class="type">Boolean</span> = false,</span></span></span><br><span class="line"><span class="class"><span class="params">    val shuffleWriterProcessor: <span class="type">ShuffleWriteProcessor</span> = new <span class="type">ShuffleWriteProcessor</span></span>)</span></span><br><span class="line"><span class="class">  <span class="keyword">extends</span> <span class="title">Dependency</span>[<span class="type">Product2</span>[<span class="type">K</span>, <span class="type">V</span>]] </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (mapSideCombine) &#123;</span><br><span class="line">    require(aggregator.isDefined, <span class="string">"Map-side combine without Aggregator specified!"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">rdd</span></span>: <span class="type">RDD</span>[<span class="type">Product2</span>[<span class="type">K</span>, <span class="type">V</span>]] = _rdd.asInstanceOf[<span class="type">RDD</span>[<span class="type">Product2</span>[<span class="type">K</span>, <span class="type">V</span>]]]</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span>[spark] <span class="keyword">val</span> keyClassName: <span class="type">String</span> = reflect.classTag[<span class="type">K</span>].runtimeClass.getName</span><br><span class="line">  <span class="keyword">private</span>[spark] <span class="keyword">val</span> valueClassName: <span class="type">String</span> = reflect.classTag[<span class="type">V</span>].runtimeClass.getName</span><br><span class="line">  <span class="comment">// Note: It's possible that the combiner class tag is null, if the combineByKey</span></span><br><span class="line">  <span class="comment">// methods in PairRDDFunctions are used instead of combineByKeyWithClassTag.</span></span><br><span class="line">  <span class="keyword">private</span>[spark] <span class="keyword">val</span> combinerClassName: <span class="type">Option</span>[<span class="type">String</span>] =</span><br><span class="line">    <span class="type">Option</span>(reflect.classTag[<span class="type">C</span>]).map(_.runtimeClass.getName)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">val</span> shuffleId: <span class="type">Int</span> = _rdd.context.newShuffleId()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">val</span> shuffleHandle: <span class="type">ShuffleHandle</span> = _rdd.context.env.shuffleManager.registerShuffle(</span><br><span class="line">    shuffleId, <span class="keyword">this</span>)</span><br><span class="line"></span><br><span class="line">  _rdd.sparkContext.cleaner.foreach(_.registerShuffleForCleanup(<span class="keyword">this</span>))</span><br><span class="line">  _rdd.sparkContext.shuffleDriverComponents.registerShuffle(shuffleId)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="stage的划分"><a href="#stage的划分" class="headerlink" title="stage的划分"></a>stage的划分</h4><code>DAG</code>根据宽依赖来划分<code>stage</code>，每个宽依赖的处理均会是一个<code>stage</code>的划分点，后面专门章节讲解<code>stage</code>的划分。</li></ul><hr><p><strong>声明:</strong><br>作者:上海IT技术圈<br>本文版权归作者和上海IT技术圈共有，任何人或团体、机构全部转载或者部分转载、摘录，请在文章明显位置注明作者和原文链接。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;RDD是什么&quot;&gt;&lt;a href=&quot;#RDD是什么&quot; class=&quot;headerlink&quot; title=&quot;RDD是什么&quot;&gt;&lt;/a&gt;RDD是什么&lt;/h2&gt;&lt;p&gt;&lt;code&gt;RDD&lt;/code&gt;是Resillient Distributed DataSet(弹性分布式数
      
    
    </summary>
    
    
      <category term="spark" scheme="http://sparkx.com.cn/categories/spark/"/>
    
    
      <category term="spark" scheme="http://sparkx.com.cn/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>spark简介-快速入门</title>
    <link href="http://sparkx.com.cn/spark/spark-note/"/>
    <id>http://sparkx.com.cn/spark/spark-note/</id>
    <published>2019-11-27T10:16:42.000Z</published>
    <updated>2019-12-09T13:48:28.723Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Spark是什么"><a href="#Spark是什么" class="headerlink" title="Spark是什么"></a>Spark是什么</h2><p>Apache Spark™是一个用于大规模数据处理的统一分析引擎。我们来看下官方说明:</p><blockquote><p>Apache Spark™ is a unified analytics engine for large-scale data processing.<br>Spark具有以下特点:</p></blockquote><ul><li>运行速度快：使用DAG执行引擎以支持循环数据流与内存计算</li><li>易使用：支持Scala、Java、Python和R语言编程，通过Spark Shell互交式编程</li><li>通用性：提供完整而强大的技术栈，包括SQL查询、流式计算、机器学习和图算法组件</li><li>运行模式多样：可运行于独立集群模式、Hadoop中、Amazon EC2等云环境中，并且可以访问HDFS、Cassandra、HBase、Hive等数据源<br><img src="/images/spark/spark.png" alt=""><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2>了解spark之前我们必须认识一下spark中的相关名词概念：</li></ul><table><thead><tr><th>名词</th><th align="left">解释</th></tr></thead><tbody><tr><td><code>RDD</code></td><td align="left">Resillient Distributed DataSet(弹性分布式数据集)的简称,是分布式内存的一个抽象概念，提供了一种高度受限的共享内存模型</td></tr><tr><td><code>DAG</code></td><td align="left">是Directed Acyclic Graph(有向无环图)的简称，反映RDD之间的依赖关系</td></tr><tr><td><code>Executor</code></td><td align="left">是运行在工作节点（WorkerNode)的一个进程，负责运行Task</td></tr><tr><td><code>Application</code></td><td align="left">用户编写的Spark应用程序</td></tr><tr><td><code>Task</code></td><td align="left">运行在Executor上的工作单元</td></tr><tr><td><code>Job</code></td><td align="left">一个Job包含多个RDD及作用于相应RDD的各种操作</td></tr><tr><td><code>Stage</code></td><td align="left">是Job的基本调度单位，一个Job会分为多组Task，每组Task称为Stage，或者也被称为TaskSet，代表了一组关联的、相互之间没有Shuffle的依赖关系的任务组成的任务集</td></tr></tbody></table><h2 id="架构设计"><a href="#架构设计" class="headerlink" title="架构设计"></a>架构设计</h2><ul><li>Spark运行架构包括集群资源管理器(Cluster Manager)、运行作业任务的工作节点(Worker Node)、每个应用的任务控制节点（Driver）和每个工作节点负责具体任务的执行进程（Executor)</li><li>自带的资源管理器或者Messos或者YARN</li><li>与Hadoop MapReduce计算框架相比，Spark所采用的的Executor的两个优点：<ul><li>利用多线程执行具体的任务，减少任务的启动开销</li><li>Executor中有一个BlockManager存储模块，会将内存和磁盘共同作为存储设备，有效减少IO开销</li></ul></li></ul><p><img src="/images/spark/spark_run_arch.png" alt=""></p><ul><li>一个<code>Application</code>由一个<code>Driver</code>和若干个<code>Job</code>构成</li><li>一个<code>Job</code>由多个<code>Stage</code>构成</li><li>一个<code>Stage</code>由多个没有<code>Shuffle</code>关系的<code>Task</code>组成</li><li>当执行一个<code>Application</code>时，<code>Driver</code>会向集群管理器申请资源，启动<code>Executor</code>，并向<code>Executor</code>发送应用程序代码和文件，然后在<code>Executor</code>上执行<code>Task</code>，运行结束后，执行返回结果会返回给<code>Driver</code>，或者不返回写到<code>HDFS</code>或者其他数据库中<br><img src="/images/spark/spark_element_relation.png" alt="spark中各种概念之间的关系"><h2 id="运行基本流程"><a href="#运行基本流程" class="headerlink" title="运行基本流程"></a>运行基本流程</h2><img src="/images/spark/spark_run_flow.png" alt="spark运行流程图"></li></ul><p>1.构建运行环境，即有<code>Driver</code>创建一个<code>SparkContext</code>，进行资源申请、任务分配和监控<br>2.资源管理器为<code>Executor</code>分配资源并在<code>WorkerNode</code>启动节点<code>Executor</code>进程<br>3.<code>SparkContext</code>根据RDD的依赖关系构建<code>DAG图</code>，<code>DAG图</code>提交给<code>DAGScheduler</code>解析成<code>Stage</code>，然后把一个个<code>TaskSet</code>提交给底层调度器<code>TaskScheduler</code>处理，<code>Executor</code>向<code>SparkContext</code>申请<code>Task</code>,<code>TaskScheduler</code>将<code>Task</code>发放给<code>Executor</code>运行，并提供应用程序代码<br>4.<code>Task</code>在<code>Executor</code>上运行，把执行结果反馈给<code>TaskScheduler</code>，然后反馈给<code>DAGScheduler</code>，运行完毕后写入数据并释放所有资源</p><h4 id="Spark运行架构具体有一下特点"><a href="#Spark运行架构具体有一下特点" class="headerlink" title="Spark运行架构具体有一下特点"></a>Spark运行架构具体有一下特点</h4><ul><li>每个<code>Application</code>都有自己专属的<code>Executor</code>进程，该进程在运行期一直驻留，<code>Executor</code>进程以多线程方式运行Task，线程数量一般推荐3~5个</li><li><code>Spark</code>运行过程与资源管理器无关，只要能够获取<code>Executor</code>进程并保持通信即可</li><li><code>Task</code>采用了数据本地性和推测执行等优化机制</li></ul><hr><p><strong>声明:</strong><br>作者:上海IT技术圈<br>本文版权归作者和上海IT技术圈共有，任何人或团体、机构全部转载或者部分转载、摘录，请在文章明显位置注明作者和原文链接。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Spark是什么&quot;&gt;&lt;a href=&quot;#Spark是什么&quot; class=&quot;headerlink&quot; title=&quot;Spark是什么&quot;&gt;&lt;/a&gt;Spark是什么&lt;/h2&gt;&lt;p&gt;Apache Spark™是一个用于大规模数据处理的统一分析引擎。我们来看下官方说明:&lt;/p
      
    
    </summary>
    
    
      <category term="spark" scheme="http://sparkx.com.cn/categories/spark/"/>
    
    
      <category term="spark" scheme="http://sparkx.com.cn/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记--快速入门</title>
    <link href="http://sparkx.com.cn/mysql/mysql-note/"/>
    <id>http://sparkx.com.cn/mysql/mysql-note/</id>
    <published>2019-11-26T11:42:45.000Z</published>
    <updated>2019-12-09T13:48:28.566Z</updated>
    
    <content type="html"><![CDATA[<p>最近学习mysql，发现一个很好的MySQL入门笔记总结，果断收藏，希望也能帮助到你，在此感谢作者。</p><blockquote><p>原文地址：<a href="https://shockerli.net/post/1000-line-mysql-note/" target="_blank" rel="noopener">https://shockerli.net/post/1000-line-mysql-note/</a><br>作者:格物<br><img src="/images/mysql.png" alt=""></p></blockquote><h4 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 启动MySQL</span></span><br><span class="line">    net <span class="keyword">start</span> mysql</span><br><span class="line"><span class="comment">-- 创建Windows服务</span></span><br><span class="line">    sc <span class="keyword">create</span> mysql binPath= mysqld_bin_path(注意：等号与值之间有空格)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 连接与断开服务器</span></span><br><span class="line">mysql -h 地址 -P 端口 -u 用户名 -p 密码</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">PROCESSLIST</span> <span class="comment">-- 显示哪些线程正在运行</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="comment">-- 显示系统变量信息</span></span><br></pre></td></tr></table></figure><h4 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看当前数据库</span></span><br><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">DATABASE</span>();</span><br><span class="line"><span class="comment">-- 显示当前时间、用户名、数据库版本</span></span><br><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">now</span>(), <span class="keyword">user</span>(), <span class="keyword">version</span>();</span><br><span class="line"><span class="comment">-- 创建库</span></span><br><span class="line">    <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span>[ <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] 数据库名 数据库选项</span><br><span class="line">    数据库选项：</span><br><span class="line">        <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> charset_name</span><br><span class="line">        <span class="keyword">COLLATE</span> collation_name</span><br><span class="line"><span class="comment">-- 查看已有库</span></span><br><span class="line">    <span class="keyword">SHOW</span> <span class="keyword">DATABASES</span>[ <span class="keyword">LIKE</span> <span class="string">'PATTERN'</span>]</span><br><span class="line"><span class="comment">-- 查看当前库信息</span></span><br><span class="line">    <span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> 数据库名</span><br><span class="line"><span class="comment">-- 修改库的选项信息</span></span><br><span class="line">    <span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> 库名 选项信息</span><br><span class="line"><span class="comment">-- 删除库</span></span><br><span class="line">    <span class="keyword">DROP</span> <span class="keyword">DATABASE</span>[ <span class="keyword">IF</span> <span class="keyword">EXISTS</span>] 数据库名</span><br><span class="line">        同时删除该数据库相关的目录及其目录内容</span><br></pre></td></tr></table></figure><h4 id="表的操作"><a href="#表的操作" class="headerlink" title="表的操作"></a>表的操作</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表</span></span><br><span class="line">    <span class="keyword">CREATE</span> [<span class="keyword">TEMPORARY</span>] <span class="keyword">TABLE</span>[ <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] [库名.]表名 ( 表的结构定义 )[ 表选项]</span><br><span class="line">        每个字段必须有数据类型</span><br><span class="line">        最后一个字段后不能有逗号</span><br><span class="line">        <span class="keyword">TEMPORARY</span> 临时表，会话结束时表自动消失</span><br><span class="line">        对于字段的定义：</span><br><span class="line">            字段名 数据类型 [<span class="keyword">NOT</span> <span class="literal">NULL</span> | <span class="literal">NULL</span>] [<span class="keyword">DEFAULT</span> default_value] [AUTO_INCREMENT] [<span class="keyword">UNIQUE</span> [<span class="keyword">KEY</span>] | [PRIMARY] <span class="keyword">KEY</span>] [<span class="keyword">COMMENT</span> <span class="string">'string'</span>]</span><br><span class="line"><span class="comment">-- 表选项</span></span><br><span class="line">    <span class="comment">-- 字符集</span></span><br><span class="line">        <span class="keyword">CHARSET</span> = charset_name</span><br><span class="line">        如果表没有设定，则使用数据库字符集</span><br><span class="line">    <span class="comment">-- 存储引擎</span></span><br><span class="line">        <span class="keyword">ENGINE</span> = engine_name</span><br><span class="line">        表在管理数据时采用的不同的数据结构，结构不同会导致处理方式、提供的特性操作等不同</span><br><span class="line">        常见的引擎：<span class="keyword">InnoDB</span> MyISAM <span class="keyword">Memory</span>/<span class="keyword">Heap</span> BDB <span class="keyword">Merge</span> Example CSV MaxDB <span class="keyword">Archive</span></span><br><span class="line">        不同的引擎在保存表的结构和数据时采用不同的方式</span><br><span class="line">        MyISAM表文件含义：.frm表定义，.MYD表数据，.MYI表索引</span><br><span class="line">        <span class="keyword">InnoDB</span>表文件含义：.frm表定义，表空间数据和日志文件</span><br><span class="line">        <span class="keyword">SHOW</span> <span class="keyword">ENGINES</span> <span class="comment">-- 显示存储引擎的状态信息</span></span><br><span class="line">        <span class="keyword">SHOW</span> <span class="keyword">ENGINE</span> 引擎名 &#123;<span class="keyword">LOGS</span>|<span class="keyword">STATUS</span>&#125; <span class="comment">-- 显示存储引擎的日志或状态信息</span></span><br><span class="line">    <span class="comment">-- 自增起始数</span></span><br><span class="line">    AUTO_INCREMENT = 行数</span><br><span class="line">    <span class="comment">-- 数据文件目录</span></span><br><span class="line">        <span class="keyword">DATA</span> <span class="keyword">DIRECTORY</span> = <span class="string">'目录'</span></span><br><span class="line">    <span class="comment">-- 索引文件目录</span></span><br><span class="line">        <span class="keyword">INDEX</span> <span class="keyword">DIRECTORY</span> = <span class="string">'目录'</span></span><br><span class="line">    <span class="comment">-- 表注释</span></span><br><span class="line">        <span class="keyword">COMMENT</span> = <span class="string">'string'</span></span><br><span class="line">    <span class="comment">-- 分区选项</span></span><br><span class="line">        <span class="keyword">PARTITION</span> <span class="keyword">BY</span> ... (详细见手册)</span><br><span class="line"><span class="comment">-- 查看所有表</span></span><br><span class="line">    <span class="keyword">SHOW</span> <span class="keyword">TABLES</span>[ <span class="keyword">LIKE</span> <span class="string">'pattern'</span>]</span><br><span class="line">    <span class="keyword">SHOW</span> <span class="keyword">TABLES</span> <span class="keyword">FROM</span> 表名</span><br><span class="line"><span class="comment">-- 查看表机构</span></span><br><span class="line">    <span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名 （信息更详细）</span><br><span class="line">    <span class="keyword">DESC</span> 表名 / <span class="keyword">DESCRIBE</span> 表名 / <span class="keyword">EXPLAIN</span> 表名 / <span class="keyword">SHOW</span> <span class="keyword">COLUMNS</span> <span class="keyword">FROM</span> 表名 [<span class="keyword">LIKE</span> <span class="string">'PATTERN'</span>]</span><br><span class="line">    <span class="keyword">SHOW</span> <span class="keyword">TABLE</span> <span class="keyword">STATUS</span> [<span class="keyword">FROM</span> db_name] [<span class="keyword">LIKE</span> <span class="string">'pattern'</span>]</span><br><span class="line"><span class="comment">-- 修改表</span></span><br><span class="line">    <span class="comment">-- 修改表本身的选项</span></span><br><span class="line">        <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 表的选项</span><br><span class="line">        eg: <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ENGINE</span>=MYISAM;</span><br><span class="line">    <span class="comment">-- 对表进行重命名</span></span><br><span class="line">        <span class="keyword">RENAME</span> <span class="keyword">TABLE</span> 原表名 <span class="keyword">TO</span> 新表名</span><br><span class="line">        <span class="keyword">RENAME</span> <span class="keyword">TABLE</span> 原表名 <span class="keyword">TO</span> 库名.表名 （可将表移动到另一个数据库）</span><br><span class="line">        <span class="comment">-- RENAME可以交换两个表名</span></span><br><span class="line">    <span class="comment">-- 修改表的字段机构（13.1.2. ALTER TABLE语法）</span></span><br><span class="line">        <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 操作名</span><br><span class="line">        <span class="comment">-- 操作名</span></span><br><span class="line">            <span class="keyword">ADD</span>[ <span class="keyword">COLUMN</span>] 字段定义       <span class="comment">-- 增加字段</span></span><br><span class="line">                <span class="keyword">AFTER</span> 字段名          <span class="comment">-- 表示增加在该字段名后面</span></span><br><span class="line">                <span class="keyword">FIRST</span>               <span class="comment">-- 表示增加在第一个</span></span><br><span class="line">            <span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span>(字段名)   <span class="comment">-- 创建主键</span></span><br><span class="line">            <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> [索引名] (字段名)<span class="comment">-- 创建唯一索引</span></span><br><span class="line">            <span class="keyword">ADD</span> <span class="keyword">INDEX</span> [索引名] (字段名) <span class="comment">-- 创建普通索引</span></span><br><span class="line">            <span class="keyword">DROP</span>[ <span class="keyword">COLUMN</span>] 字段名      <span class="comment">-- 删除字段</span></span><br><span class="line">            <span class="keyword">MODIFY</span>[ <span class="keyword">COLUMN</span>] 字段名 字段属性     <span class="comment">-- 支持对字段属性进行修改，不能修改字段名(所有原有属性也需写上)</span></span><br><span class="line">            <span class="keyword">CHANGE</span>[ <span class="keyword">COLUMN</span>] 原字段名 新字段名 字段属性      <span class="comment">-- 支持对字段名修改</span></span><br><span class="line">            <span class="keyword">DROP</span> PRIMARY <span class="keyword">KEY</span>    <span class="comment">-- 删除主键(删除主键前需删除其AUTO_INCREMENT属性)</span></span><br><span class="line">            <span class="keyword">DROP</span> <span class="keyword">INDEX</span> 索引名 <span class="comment">-- 删除索引</span></span><br><span class="line">            <span class="keyword">DROP</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> 外键    <span class="comment">-- 删除外键</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除表</span></span><br><span class="line">    <span class="keyword">DROP</span> <span class="keyword">TABLE</span>[ <span class="keyword">IF</span> <span class="keyword">EXISTS</span>] 表名 ...</span><br><span class="line"><span class="comment">-- 清空表数据</span></span><br><span class="line">    <span class="keyword">TRUNCATE</span> [<span class="keyword">TABLE</span>] 表名</span><br><span class="line"><span class="comment">-- 复制表结构</span></span><br><span class="line">    <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">LIKE</span> 要复制的表名</span><br><span class="line"><span class="comment">-- 复制表结构和数据</span></span><br><span class="line">    <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名 [<span class="keyword">AS</span>] <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> 要复制的表名</span><br><span class="line"><span class="comment">-- 检查表是否有错误</span></span><br><span class="line">    <span class="keyword">CHECK</span> <span class="keyword">TABLE</span> tbl_name [, tbl_name] ... [<span class="keyword">option</span>] ...</span><br><span class="line"><span class="comment">-- 优化表</span></span><br><span class="line">    <span class="keyword">OPTIMIZE</span> [<span class="keyword">LOCAL</span> | <span class="keyword">NO_WRITE_TO_BINLOG</span>] <span class="keyword">TABLE</span> tbl_name [, tbl_name] ...</span><br><span class="line"><span class="comment">-- 修复表</span></span><br><span class="line">    <span class="keyword">REPAIR</span> [<span class="keyword">LOCAL</span> | <span class="keyword">NO_WRITE_TO_BINLOG</span>] <span class="keyword">TABLE</span> tbl_name [, tbl_name] ... [<span class="keyword">QUICK</span>] [<span class="keyword">EXTENDED</span>] [USE_FRM]</span><br><span class="line"><span class="comment">-- 分析表</span></span><br><span class="line">    <span class="keyword">ANALYZE</span> [<span class="keyword">LOCAL</span> | <span class="keyword">NO_WRITE_TO_BINLOG</span>] <span class="keyword">TABLE</span> tbl_name [, tbl_name] ...</span><br></pre></td></tr></table></figure><h4 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 增</span></span><br><span class="line">    <span class="keyword">INSERT</span> [<span class="keyword">INTO</span>] 表名 [(字段列表)] <span class="keyword">VALUES</span> (值列表)[, (值列表), ...]</span><br><span class="line">        <span class="comment">-- 如果要插入的值列表包含所有字段并且顺序一致，则可以省略字段列表。</span></span><br><span class="line">        <span class="comment">-- 可同时插入多条数据记录！</span></span><br><span class="line">        <span class="keyword">REPLACE</span> 与 <span class="keyword">INSERT</span> 完全一样，可互换。</span><br><span class="line">    <span class="keyword">INSERT</span> [<span class="keyword">INTO</span>] 表名 <span class="keyword">SET</span> 字段名=值[, 字段名=值, ...]</span><br><span class="line"><span class="comment">-- 删</span></span><br><span class="line">    <span class="keyword">DELETE</span> <span class="keyword">FROM</span> 表名[ 删除条件子句]</span><br><span class="line">        没有条件子句，则会删除全部</span><br><span class="line"><span class="comment">-- 改</span></span><br><span class="line">    <span class="keyword">UPDATE</span> 表名 <span class="keyword">SET</span> 字段名=新值[, 字段名=新值] [更新条件]</span><br><span class="line"><span class="comment">-- 查</span></span><br><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表名[ 其他子句]</span><br><span class="line"><span class="comment">-- 可来自多个表的多个字段</span></span><br><span class="line"><span class="comment">-- 其他子句可以不使用</span></span><br><span class="line"><span class="comment">-- 字段列表可以用*代替，表示所有字段</span></span><br></pre></td></tr></table></figure><h4 id="字符集编码"><a href="#字符集编码" class="headerlink" title="字符集编码"></a>字符集编码</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- MySQL、数据库、表、字段均可设置编码</span></span><br><span class="line"><span class="comment">-- 数据编码与客户端编码不需一致</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">'character_set_%'</span>   <span class="comment">-- 查看所有字符集编码项</span></span><br><span class="line">    character_set_client        客户端向服务器发送数据时使用的编码</span><br><span class="line">    character_set_results       服务器端将结果返回给客户端所使用的编码</span><br><span class="line">    character_set_connection    连接层编码</span><br><span class="line"><span class="keyword">SET</span> 变量名 = 变量值</span><br><span class="line">    <span class="keyword">SET</span> character_set_client = gbk;</span><br><span class="line">    <span class="keyword">SET</span> character_set_results = gbk;</span><br><span class="line">    <span class="keyword">SET</span> character_set_connection = gbk;</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">NAMES</span> GBK;  <span class="comment">-- 相当于完成以上三个设置</span></span><br><span class="line"><span class="comment">-- 校对集</span></span><br><span class="line">    校对集用以排序</span><br><span class="line">    <span class="keyword">SHOW</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> [<span class="keyword">LIKE</span> <span class="string">'pattern'</span>]/<span class="keyword">SHOW</span> <span class="keyword">CHARSET</span> [<span class="keyword">LIKE</span> <span class="string">'pattern'</span>]   查看所有字符集</span><br><span class="line">    <span class="keyword">SHOW</span> <span class="keyword">COLLATION</span> [<span class="keyword">LIKE</span> <span class="string">'pattern'</span>]     查看所有校对集</span><br><span class="line">    <span class="keyword">CHARSET</span> 字符集编码     设置字符集编码</span><br><span class="line">    <span class="keyword">COLLATE</span> 校对集编码     设置校对集编码</span><br></pre></td></tr></table></figure><h4 id="数据类型（列类型）"><a href="#数据类型（列类型）" class="headerlink" title="数据类型（列类型）"></a>数据类型（列类型）</h4><h6 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h6><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">-- a. 整型 ----------</span><br><span class="line">    类型         字节     范围（有符号位）</span><br><span class="line">    tinyint     <span class="number">1</span>字节    <span class="number">-128</span> ~ <span class="number">127</span>      无符号位：<span class="number">0</span> ~ <span class="number">255</span></span><br><span class="line">    smallint    <span class="number">2</span>字节    <span class="number">-32768</span> ~ <span class="number">32767</span></span><br><span class="line">    mediumint   <span class="number">3</span>字节    <span class="number">-8388608</span> ~ <span class="number">8388607</span></span><br><span class="line">    <span class="built_in">int</span>         <span class="number">4</span>字节</span><br><span class="line">    bigint      <span class="number">8</span>字节</span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span>(M)  M表示总位数</span><br><span class="line">    - 默认存在符号位，unsigned 属性修改</span><br><span class="line">    - 显示宽度，如果某个数不够定义字段时设置的位数，则前面以<span class="number">0</span>补填，zerofill 属性修改</span><br><span class="line">        例：<span class="built_in">int</span>(<span class="number">5</span>)   插入一个数<span class="string">'123'</span>，补填后为<span class="string">'00123'</span></span><br><span class="line">    - 在满足要求的情况下，越小越好。</span><br><span class="line">    - <span class="number">1</span>表示<span class="built_in">bool</span>值真，<span class="number">0</span>表示<span class="built_in">bool</span>值假。MySQL没有布尔类型，通过整型<span class="number">0</span>和<span class="number">1</span>表示。常用tinyint(<span class="number">1</span>)表示布尔型。</span><br><span class="line"></span><br><span class="line">-- b. 浮点型 ----------</span><br><span class="line">    类型             字节     范围</span><br><span class="line">    <span class="built_in">float</span>(单精度)     <span class="number">4</span>字节</span><br><span class="line">    <span class="built_in">double</span>(双精度)    <span class="number">8</span>字节</span><br><span class="line">    浮点型既支持符号位 unsigned 属性，也支持显示宽度 zerofill 属性。</span><br><span class="line">        不同于整型，前后均会补填<span class="number">0.</span></span><br><span class="line">    定义浮点型时，需指定总位数和小数位数。</span><br><span class="line">        <span class="built_in">float</span>(M, D)     <span class="built_in">double</span>(M, D)</span><br><span class="line">        M表示总位数，D表示小数位数。</span><br><span class="line">        M和D的大小会决定浮点数的范围。不同于整型的固定范围。</span><br><span class="line">        M既表示总位数（不包括小数点和正负号），也表示显示宽度（所有显示符号均包括）。</span><br><span class="line">        支持科学计数法表示。</span><br><span class="line">        浮点数表示近似值。</span><br><span class="line">-- c. 定点数 ----------</span><br><span class="line">    decimal -- 可变长度</span><br><span class="line">    decimal(M, D)   M也表示总位数，D表示小数位数。</span><br><span class="line">    保存一个精确的数值，不会发生数据的改变，不同于浮点数的四舍五入。</span><br><span class="line">    将浮点数转换为字符串来保存，每<span class="number">9</span>位数字保存为<span class="number">4</span>个字节。</span><br></pre></td></tr></table></figure><h6 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h6><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- a. char, varchar ----------</span></span><br><span class="line">    <span class="type">char</span>    定长字符串，速度快，但浪费空间</span><br><span class="line">    <span class="type">varchar</span> 变长字符串，速度慢，但节省空间</span><br><span class="line">    M表示能存储的最大长度，此长度是字符数，非字节数。</span><br><span class="line">    不同的编码，所占用的空间不同。</span><br><span class="line">    <span class="type">char</span>,最多<span class="number">255</span>个字符，与编码无关。</span><br><span class="line">    <span class="type">varchar</span>,最多<span class="number">65535</span>字符，与编码有关。</span><br><span class="line">    一条有效记录最大不能超过<span class="number">65535</span>个字节。</span><br><span class="line">        utf8 最大为<span class="number">21844</span>个字符，gbk 最大为<span class="number">32766</span>个字符，latin1 最大为<span class="number">65532</span>个字符</span><br><span class="line">    <span class="type">varchar</span> 是变长的，需要利用存储空间保存 <span class="type">varchar</span> 的长度，如果数据小于<span class="number">255</span>个字节，则采用一个字节来保存长度，反之需要两个字节来保存。</span><br><span class="line">    <span class="type">varchar</span> 的最大有效长度由最大行大小和使用的字符集确定。</span><br><span class="line">    最大有效长度是<span class="number">65532</span>字节，因为在<span class="type">varchar</span>存字符串时，第一个字节是空的，不存在任何数据，然后还需两个字节来存放字符串的长度，所以有效长度是<span class="number">64432</span><span class="number">-1</span><span class="number">-2</span>=<span class="number">65532</span>字节。</span><br><span class="line">    例：若一个表定义为 <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb(c1 <span class="type">int</span>, c2 <span class="type">char</span>(<span class="number">30</span>), c3 <span class="type">varchar</span>(N)) charset=utf8; 问N的最大值是多少？ 答：(<span class="number">65535</span><span class="number">-1</span><span class="number">-2</span><span class="number">-4</span><span class="number">-30</span>*<span class="number">3</span>)/<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- b. blob, text ----------</span></span><br><span class="line">    blob 二进制字符串（字节字符串）</span><br><span class="line">        tinyblob, blob, mediumblob, longblob</span><br><span class="line">    <span class="type">text</span> 非二进制字符串（字符字符串）</span><br><span class="line">        tinytext, <span class="type">text</span>, mediumtext, longtext</span><br><span class="line">    <span class="type">text</span> 在定义时，不需要定义长度，也不会计算总长度。</span><br><span class="line">    <span class="type">text</span> 类型在定义时，不可给<span class="keyword">default</span>值</span><br><span class="line"></span><br><span class="line"><span class="comment">-- c. binary, varbinary ----------</span></span><br><span class="line">    类似于<span class="type">char</span>和<span class="type">varchar</span>，用于保存二进制字符串，也就是保存字节字符串而非字符字符串。</span><br><span class="line">    <span class="type">char</span>, <span class="type">varchar</span>, <span class="type">text</span> 对应 binary, varbinary, blob.</span><br></pre></td></tr></table></figure><h6 id="日期时间类型"><a href="#日期时间类型" class="headerlink" title="日期时间类型"></a>日期时间类型</h6><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">一般用整型保存时间戳，因为PHP可以很方便的将时间戳进行格式化。</span><br><span class="line">    datetime    <span class="number">8</span>字节    日期及时间     <span class="number">1000</span><span class="number">-01</span><span class="number">-01</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> 到 <span class="number">9999</span><span class="number">-12</span><span class="number">-31</span> <span class="number">23</span>:<span class="number">59</span>:<span class="number">59</span></span><br><span class="line">    date        <span class="number">3</span>字节    日期         <span class="number">1000</span><span class="number">-01</span><span class="number">-01</span> 到 <span class="number">9999</span><span class="number">-12</span><span class="number">-31</span></span><br><span class="line">    timestamp   <span class="number">4</span>字节    时间戳        <span class="number">19700101000000</span> 到 <span class="number">2038</span><span class="number">-01</span><span class="number">-19</span> <span class="number">03</span>:<span class="number">14</span>:<span class="number">07</span></span><br><span class="line">    time        <span class="number">3</span>字节    时间         <span class="number">-838</span>:<span class="number">59</span>:<span class="number">59</span> 到 <span class="number">838</span>:<span class="number">59</span>:<span class="number">59</span></span><br><span class="line">    year        <span class="number">1</span>字节    年份         <span class="number">1901</span> - <span class="number">2155</span></span><br><span class="line"></span><br><span class="line">datetime    YYYY-MM-DD hh:mm:ss</span><br><span class="line">timestamp   YY-MM-DD hh:mm:ss</span><br><span class="line">            YYYYMMDDhhmmss</span><br><span class="line">            YYMMDDhhmmss</span><br><span class="line">            YYYYMMDDhhmmss</span><br><span class="line">            YYMMDDhhmmss</span><br><span class="line">date        YYYY-MM-DD</span><br><span class="line">            YY-MM-DD</span><br><span class="line">            YYYYMMDD</span><br><span class="line">            YYMMDD</span><br><span class="line">            YYYYMMDD</span><br><span class="line">            YYMMDD</span><br><span class="line">time        hh:mm:ss</span><br><span class="line">            hhmmss</span><br><span class="line">            hhmmss</span><br><span class="line">year        YYYY</span><br><span class="line">            YY</span><br><span class="line">            YYYY</span><br><span class="line">            YY</span><br></pre></td></tr></table></figure><h6 id="枚举和集合"><a href="#枚举和集合" class="headerlink" title="枚举和集合"></a>枚举和集合</h6><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-- 枚举(<span class="class"><span class="keyword">enum</span>) ----------</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span>(<span class="title">val1</span>, <span class="title">val2</span>, <span class="title">val3</span>...)</span></span><br><span class="line">    在已知的值中进行单选。最大数量为<span class="number">65535</span>.</span><br><span class="line">    枚举值在保存时，以<span class="number">2</span>个字节的整型(smallint)保存。每个枚举值，按保存的位置顺序，从<span class="number">1</span>开始逐一递增。</span><br><span class="line">    表现为字符串类型，存储却是整型。</span><br><span class="line">    NULL值的索引是NULL。</span><br><span class="line">    空字符串错误值的索引值是<span class="number">0</span>。</span><br><span class="line"></span><br><span class="line">-- 集合（set） ----------</span><br><span class="line">set(val1, val2, val3...)</span><br><span class="line">    create table tab ( gender set(<span class="string">'男'</span>, <span class="string">'女'</span>, <span class="string">'无'</span>) );</span><br><span class="line">    insert into tab values (<span class="string">'男, 女'</span>);</span><br><span class="line">    最多可以有<span class="number">64</span>个不同的成员。以bigint存储，共<span class="number">8</span>个字节。采取位运算的形式。</span><br><span class="line">    当创建表时，SET成员值的尾部空格将自动被删除。</span><br></pre></td></tr></table></figure><h4 id="选择类型"><a href="#选择类型" class="headerlink" title="选择类型"></a>选择类型</h4><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-- PHP角度</span><br><span class="line"><span class="number">1.</span> 功能满足</span><br><span class="line"><span class="number">2.</span> 存储空间尽量小，处理效率更高</span><br><span class="line"><span class="number">3.</span> 考虑兼容问题</span><br><span class="line"></span><br><span class="line">-- IP存储 ----------</span><br><span class="line"><span class="number">1.</span> 只需存储，可用字符串</span><br><span class="line"><span class="number">2.</span> 如果需计算，查找等，可存储为<span class="number">4</span>个字节的无符号int，即unsigned</span><br><span class="line">    <span class="number">1</span>) PHP函数转换</span><br><span class="line">        ip2long可转换为整型，但会出现携带符号问题。需格式化为无符号的整型。</span><br><span class="line">        利用sprintf函数格式化字符串</span><br><span class="line">        sprintf(<span class="string">"%u"</span>, ip2long('<span class="number">192.168</span><span class="number">.3</span><span class="number">.134</span>'));</span><br><span class="line">        然后用long2ip将整型转回IP字符串</span><br><span class="line">    <span class="number">2</span>) MySQL函数转换(无符号整型，UNSIGNED)</span><br><span class="line">        INET_ATON('<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>') 将IP转为整型</span><br><span class="line">        INET_NTOA(<span class="number">2130706433</span>) 将整型转为IP</span><br></pre></td></tr></table></figure><h4 id="列属性（列约束）"><a href="#列属性（列约束）" class="headerlink" title="列属性（列约束）"></a>列属性（列约束）</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="keyword">PRIMARY</span> 主键</span><br><span class="line">    - 能唯一标识记录的字段，可以作为主键。</span><br><span class="line">    - 一个表只能有一个主键。</span><br><span class="line">    - 主键具有唯一性。</span><br><span class="line">    - 声明字段时，用 <span class="keyword">primary key</span> 标识。</span><br><span class="line">        也可以在字段列表之后声明</span><br><span class="line">            例：<span class="keyword">create</span> <span class="keyword">table</span> tab ( id <span class="type">int</span>, stu <span class="type">varchar</span>(<span class="number">10</span>), <span class="keyword">primary key</span> (id));</span><br><span class="line">    - 主键字段的值不能为<span class="keyword">null</span>。</span><br><span class="line">    - 主键可以由多个字段共同组成。此时需要在字段列表后声明的方法。</span><br><span class="line">        例：<span class="keyword">create</span> <span class="keyword">table</span> tab ( id <span class="type">int</span>, stu <span class="type">varchar</span>(<span class="number">10</span>), age <span class="type">int</span>, <span class="keyword">primary key</span> (stu, age));</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> <span class="keyword">UNIQUE</span> 唯一索引（唯一约束）</span><br><span class="line">    使得某字段的值也不能重复。</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> <span class="keyword">NULL</span> 约束</span><br><span class="line">    <span class="keyword">null</span>不是数据类型，是列的一个属性。</span><br><span class="line">    表示当前列是否可以为<span class="keyword">null</span>，表示什么都没有。</span><br><span class="line">    <span class="keyword">null</span>, 允许为空。默认。</span><br><span class="line">    <span class="keyword">not</span> <span class="keyword">null</span>, 不允许为空。</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> tab <span class="keyword">values</span> (<span class="keyword">null</span>, <span class="string">'val'</span>);</span><br><span class="line">        <span class="comment">-- 此时表示将第一个字段的值设为null, 取决于该字段是否允许为null</span></span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> <span class="keyword">DEFAULT</span> 默认值属性</span><br><span class="line">    当前字段的默认值。</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> tab <span class="keyword">values</span> (<span class="keyword">default</span>, <span class="string">'val'</span>);    <span class="comment">-- 此时表示强制使用默认值。</span></span><br><span class="line">    <span class="keyword">create</span> <span class="keyword">table</span> tab ( add_time <span class="type">timestamp</span> <span class="keyword">default</span> <span class="built_in">current_timestamp</span> );</span><br><span class="line">        <span class="comment">-- 表示将当前时间的时间戳设为默认值。</span></span><br><span class="line">        <span class="built_in">current_date</span>, <span class="built_in">current_time</span></span><br><span class="line"></span><br><span class="line"><span class="number">5.</span> AUTO_INCREMENT 自动增长约束</span><br><span class="line">    自动增长必须为索引（主键或<span class="keyword">unique</span>）</span><br><span class="line">    只能存在一个字段为自动增长。</span><br><span class="line">    默认为<span class="number">1</span>开始自动增长。可以通过表属性 auto_increment = x进行设置，或 <span class="keyword">alter</span> <span class="keyword">table</span> tbl auto_increment = x;</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span> <span class="keyword">COMMENT</span> 注释</span><br><span class="line">    例：<span class="keyword">create</span> <span class="keyword">table</span> tab ( id <span class="type">int</span> ) <span class="keyword">comment</span> <span class="string">'注释内容'</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span> <span class="keyword">FOREIGN KEY</span> 外键约束</span><br><span class="line">    用于限制主表与从表数据完整性。</span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">table</span> t1 <span class="keyword">add</span> <span class="keyword">constraint</span> `t1_t2_fk` <span class="keyword">foreign key</span> (t1_id) <span class="keyword">references</span> t2(id);</span><br><span class="line">        <span class="comment">-- 将表t1的t1_id外键关联到表t2的id字段。</span></span><br><span class="line">        <span class="comment">-- 每个外键都有一个名字，可以通过 constraint 指定</span></span><br><span class="line"></span><br><span class="line">    存在外键的表，称之为从表（子表），外键指向的表，称之为主表（父表）。</span><br><span class="line"></span><br><span class="line">    作用：保持数据一致性，完整性，主要目的是控制存储在外键表（从表）中的数据。</span><br><span class="line"></span><br><span class="line">    MySQL中，可以对InnoDB引擎使用外键约束：</span><br><span class="line">    语法：</span><br><span class="line">    <span class="keyword">foreign key</span> (外键字段） <span class="keyword">references</span> 主表名 (关联字段) [主表记录删除时的动作] [主表记录更新时的动作]</span><br><span class="line">    此时需要检测一个从表的外键需要约束为主表的已存在的值。外键在没有关联的情况下，可以设置为<span class="keyword">null</span>.前提是该外键列，没有<span class="keyword">not</span> <span class="keyword">null</span>。</span><br><span class="line"></span><br><span class="line">    可以不指定主表记录更改或更新时的动作，那么此时主表的操作被拒绝。</span><br><span class="line">    如果指定了 <span class="keyword">on</span> <span class="keyword">update</span> 或 <span class="keyword">on</span> <span class="keyword">delete</span>：在删除或更新时，有如下几个操作可以选择：</span><br><span class="line">    <span class="number">1.</span> <span class="keyword">cascade</span>，级联操作。主表数据被更新（主键值更新），从表也被更新（外键值更新）。主表记录被删除，从表相关记录也被删除。</span><br><span class="line">    <span class="number">2.</span> <span class="keyword">set</span> <span class="keyword">null</span>，设置为<span class="keyword">null</span>。主表数据被更新（主键值更新），从表的外键被设置为<span class="keyword">null</span>。主表记录被删除，从表相关记录外键被设置成<span class="keyword">null</span>。但注意，要求该外键列，没有<span class="keyword">not</span> <span class="keyword">null</span>属性约束。</span><br><span class="line">    <span class="number">3.</span> <span class="keyword">restrict</span>，拒绝父表删除和更新。</span><br><span class="line"></span><br><span class="line">    注意，外键只被InnoDB存储引擎所支持。其他引擎是不支持的。</span><br></pre></td></tr></table></figure><h4 id="建表规范"><a href="#建表规范" class="headerlink" title="建表规范"></a>建表规范</h4><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">- Normal Format, NF</span></span><br><span class="line"><span class="ruby">- 每个表保存一个实体信息</span></span><br><span class="line"><span class="ruby">- 每个具有一个ID字段作为主键</span></span><br><span class="line"><span class="ruby">- ID主键 + 原子表</span></span><br><span class="line"><span class="ruby">-- <span class="number">1</span>NF, 第一范式</span></span><br><span class="line"><span class="ruby">字段不能再分，就满足第一范式。</span></span><br><span class="line"><span class="ruby">-- <span class="number">2</span>NF, 第二范式</span></span><br><span class="line"><span class="ruby">满足第一范式的前提下，不能出现部分依赖。</span></span><br><span class="line"><span class="ruby">消除符合主键就可以避免部分依赖。增加单列关键字。</span></span><br><span class="line"><span class="ruby">-- <span class="number">3</span>NF, 第三范式</span></span><br><span class="line"><span class="ruby">满足第二范式的前提下，不能出现传递依赖。</span></span><br><span class="line"><span class="ruby">某个字段依赖于主键，而有其他字段依赖于该字段。这就是传递依赖。</span></span><br><span class="line"><span class="ruby">将一个实体信息的数据放在一个表内实现。</span></span><br></pre></td></tr></table></figure><h4 id="SELECT"><a href="#SELECT" class="headerlink" title="SELECT"></a>SELECT</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">SELECT [ALL|DISTINCT] select_expr <span class="keyword">FROM</span> -&gt; WHERE -&gt;<span class="built_in"> GROUP </span>BY [合计函数] -&gt; HAVING -&gt; ORDER BY -&gt; LIMIT</span><br><span class="line"></span><br><span class="line">a. select_expr</span><br><span class="line">    -- 可以用 * 表示所有字段。</span><br><span class="line">        select * <span class="keyword">from</span> tb;</span><br><span class="line">    -- 可以使用表达式（计算公式、函数调用、字段也是个表达式）</span><br><span class="line">        select stu, 29+25, now() <span class="keyword">from</span> tb;</span><br><span class="line">    -- 可以为每个列使用别名。适用于简化列标识，避免多个列标识符重复。</span><br><span class="line">        - 使用 as 关键字，也可省略 as.</span><br><span class="line">        select stu+10 as add10 <span class="keyword">from</span> tb;</span><br><span class="line"></span><br><span class="line">b. <span class="keyword">FROM</span> 子句</span><br><span class="line">    用于标识查询来源。</span><br><span class="line">    -- 可以为表起别名。使用as关键字。</span><br><span class="line">        SELECT * <span class="keyword">FROM</span> tb1 AS tt, tb2 AS bb;</span><br><span class="line">    -- <span class="keyword">from</span>子句后，可以同时出现多个表。</span><br><span class="line">        -- 多个表会横向叠加到一起，而数据会形成一个笛卡尔积。</span><br><span class="line">        SELECT * <span class="keyword">FROM</span> tb1, tb2;</span><br><span class="line">    -- 向优化符提示如何选择索引</span><br><span class="line">        USE INDEX、IGNORE INDEX、FORCE INDEX</span><br><span class="line">        SELECT * <span class="keyword">FROM</span> table1 USE INDEX (key1,key2) WHERE <span class="attribute">key1</span>=1 <span class="keyword">AND</span> <span class="attribute">key2</span>=2 <span class="keyword">AND</span> <span class="attribute">key3</span>=3;</span><br><span class="line">        SELECT * <span class="keyword">FROM</span> table1 IGNORE INDEX (key3) WHERE <span class="attribute">key1</span>=1 <span class="keyword">AND</span> <span class="attribute">key2</span>=2 <span class="keyword">AND</span> <span class="attribute">key3</span>=3;</span><br><span class="line"></span><br><span class="line">c. WHERE 子句</span><br><span class="line">    -- 从<span class="keyword">from</span>获得的数据源中进行筛选。</span><br><span class="line">    -- 整型1表示真，0表示假。</span><br><span class="line">    -- 表达式由运算符和运算数组成。</span><br><span class="line">        -- 运算数：变量（字段）、值、函数返回值</span><br><span class="line">        -- 运算符：</span><br><span class="line">            =, &lt;=&gt;, &lt;&gt;, !=, &lt;=, &lt;, &gt;=, &gt;, !, &amp;&amp;, ||,</span><br><span class="line">            <span class="keyword">in</span> (<span class="keyword">not</span>) <span class="literal">null</span>, (<span class="keyword">not</span>) like, (<span class="keyword">not</span>) <span class="keyword">in</span>, (<span class="keyword">not</span>) between <span class="keyword">and</span>, is (<span class="keyword">not</span>), <span class="keyword">and</span>, <span class="keyword">or</span>, <span class="keyword">not</span>, xor</span><br><span class="line">            is/is <span class="keyword">not</span> 加上ture/<span class="literal">false</span>/unknown，检验某个值的真假</span><br><span class="line">            &lt;=&gt;与&lt;&gt;功能相同，&lt;=&gt;可用于<span class="literal">null</span>比较</span><br><span class="line"></span><br><span class="line">d.<span class="built_in"> GROUP </span>BY 子句, 分组子句</span><br><span class="line">   <span class="built_in"> GROUP </span>BY 字段/别名 [排序方式]</span><br><span class="line">    分组后会进行排序。升序：ASC，降序：DESC</span><br><span class="line"></span><br><span class="line">    以下[合计函数]需配合<span class="built_in"> GROUP </span>BY 使用：</span><br><span class="line">    count 返回不同的非<span class="literal">NULL</span>值数目  count(*)、count(字段)</span><br><span class="line">    sum 求和</span><br><span class="line">    max 求最大值</span><br><span class="line">    min 求最小值</span><br><span class="line">    avg 求平均值</span><br><span class="line">    group_concat 返回带有来自一个组的连接的非<span class="literal">NULL</span>值的字符串结果。组内字符串连接。</span><br><span class="line"></span><br><span class="line">e. HAVING 子句，条件子句</span><br><span class="line">    与 where 功能、用法相同，执行时机不同。</span><br><span class="line">    where 在开始时执行检测数据，对原数据进行过滤。</span><br><span class="line">    having 对筛选出的结果再次进行过滤。</span><br><span class="line">    having 字段必须是查询出来的，where 字段必须是数据表存在的。</span><br><span class="line">    where 不可以使用字段的别名，having 可以。因为执行WHERE代码时，可能尚未确定列值。</span><br><span class="line">    where 不可以使用合计函数。一般需用合计函数才会用 having</span><br><span class="line">    SQL标准要求HAVING必须引用GROUP BY子句中的列或用于合计函数中的列。</span><br><span class="line"></span><br><span class="line">f. ORDER BY 子句，排序子句</span><br><span class="line">    order by 排序字段/别名 排序方式 [,排序字段/别名 排序方式]<span class="built_in">..</span>.</span><br><span class="line">    升序：ASC，降序：DESC</span><br><span class="line">    支持多个字段的排序。</span><br><span class="line"></span><br><span class="line">g. LIMIT 子句，限制结果数量子句</span><br><span class="line">    仅对处理好的结果进行数量限制。将处理好的结果的看作是一个集合，按照记录出现的顺序，索引从0开始。</span><br><span class="line">    limit 起始位置, 获取条数</span><br><span class="line">    省略第一个参数，表示从索引0开始。limit 获取条数</span><br><span class="line"></span><br><span class="line">h. DISTINCT, ALL 选项</span><br><span class="line">    distinct 去除重复记录</span><br><span class="line">    默认为 all, 全部记录</span><br></pre></td></tr></table></figure><h4 id="UNION"><a href="#UNION" class="headerlink" title="UNION"></a>UNION</h4><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">将多个<span class="keyword">select</span>查询的结果组合成一个结果集合。</span><br><span class="line"><span class="keyword">SELECT</span> ... <span class="keyword">UNION</span> [<span class="keyword">ALL</span>|<span class="keyword">DISTINCT</span>] <span class="keyword">SELECT</span> ...</span><br><span class="line">默认 <span class="keyword">DISTINCT</span> 方式，即所有返回的行都是唯一的</span><br><span class="line">建议，对每个<span class="keyword">SELECT</span>查询加上小括号包裹。</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 排序时，需加上 <span class="keyword">LIMIT</span> 进行结合。</span><br><span class="line">需要各<span class="keyword">select</span>查询的字段数量一样。</span><br><span class="line">每个<span class="keyword">select</span>查询的字段列表(数量、类型)应一致，因为结果中的字段名以第一条<span class="keyword">select</span>语句为准。</span><br></pre></td></tr></table></figure><h4 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 子查询需用括号包裹。</span></span><br><span class="line"><span class="comment">-- from型</span></span><br><span class="line">    from后要求是一个表，必须给子查询结果取个别名。</span><br><span class="line">    - 简化每个查询内的条件。</span><br><span class="line">    - from型需将结果生成一个临时表格，可用以原表的锁定的释放。</span><br><span class="line">    - 子查询返回一个表，表型子查询。</span><br><span class="line">    <span class="keyword">select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> * <span class="keyword">from</span> tb <span class="keyword">where</span> <span class="keyword">id</span>&gt;<span class="number">0</span>) <span class="keyword">as</span> subfrom <span class="keyword">where</span> <span class="keyword">id</span>&gt;<span class="number">1</span>;</span><br><span class="line"><span class="comment">-- where型</span></span><br><span class="line">    - 子查询返回一个值，标量子查询。</span><br><span class="line">    - 不需要给子查询取别名。</span><br><span class="line">    - where子查询内的表，不能直接用以更新。</span><br><span class="line">    <span class="keyword">select</span> * <span class="keyword">from</span> tb <span class="keyword">where</span> money = (<span class="keyword">select</span> <span class="keyword">max</span>(money) <span class="keyword">from</span> tb);</span><br><span class="line">    <span class="comment">-- 列子查询</span></span><br><span class="line">        如果子查询结果返回的是一列。</span><br><span class="line">        使用 in 或 not in 完成查询</span><br><span class="line">        exists 和 not exists 条件</span><br><span class="line">            如果子查询返回数据，则返回1或0。常用于判断条件。</span><br><span class="line">            <span class="keyword">select</span> column1 <span class="keyword">from</span> t1 <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> * <span class="keyword">from</span> t2);</span><br><span class="line">    <span class="comment">-- 行子查询</span></span><br><span class="line">        查询条件是一个行。</span><br><span class="line">        <span class="keyword">select</span> * <span class="keyword">from</span> t1 <span class="keyword">where</span> (<span class="keyword">id</span>, gender) <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">id</span>, gender <span class="keyword">from</span> t2);</span><br><span class="line">        行构造符：(col1, col2, ...) 或 ROW(col1, col2, ...)</span><br><span class="line">        行构造符通常用于与对能返回两个或两个以上列的子查询进行比较。</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 特殊运算符</span></span><br><span class="line">    != all()    相当于 not in</span><br><span class="line">    = some()    相当于 in。any 是 some 的别名</span><br><span class="line">    != some()   不等同于 not in，不等于其中某一个。</span><br><span class="line">    all, some 可以配合其他运算符一起使用。</span><br></pre></td></tr></table></figure><h4 id="连接查询-join"><a href="#连接查询-join" class="headerlink" title="连接查询(join)"></a>连接查询(join)</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">将多个表的字段进行连接，可以指定连接条件。</span><br><span class="line"><span class="comment">-- 内连接(inner join)</span></span><br><span class="line">    - 默认就是内连接，可省略<span class="keyword">inner</span>。</span><br><span class="line">    - 只有数据存在时才能发送连接。即连接结果不能出现空行。</span><br><span class="line">    <span class="keyword">on</span> 表示连接条件。其条件表达式与<span class="keyword">where</span>类似。也可以省略条件（表示条件永远为真）</span><br><span class="line">    也可用<span class="keyword">where</span>表示连接条件。</span><br><span class="line">    还有 <span class="keyword">using</span>, 但需字段名相同。 <span class="keyword">using</span>(字段名)</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 交叉连接 cross join</span></span><br><span class="line">        即，没有条件的内连接。</span><br><span class="line">        <span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">cross</span> <span class="keyword">join</span> tb2;</span><br><span class="line"><span class="comment">-- 外连接(outer join)</span></span><br><span class="line">    - 如果数据不存在，也会出现在连接结果中。</span><br><span class="line">    <span class="comment">-- 左外连接 left join</span></span><br><span class="line">        如果数据不存在，左表记录会出现，而右表为<span class="keyword">null</span>填充</span><br><span class="line">    <span class="comment">-- 右外连接 right join</span></span><br><span class="line">        如果数据不存在，右表记录会出现，而左表为<span class="keyword">null</span>填充</span><br><span class="line"><span class="comment">-- 自然连接(natural join)</span></span><br><span class="line">    自动判断连接条件完成连接。</span><br><span class="line">    相当于省略了<span class="keyword">using</span>，会自动查找相同字段名。</span><br><span class="line">    <span class="keyword">natural</span> <span class="keyword">join</span></span><br><span class="line">    <span class="keyword">natural</span> <span class="keyword">left join</span></span><br><span class="line">    <span class="keyword">natural</span> <span class="keyword">right join</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">info</span>.id, <span class="keyword">info</span>.name, <span class="keyword">info</span>.stu_num, extra_info.hobby, extra_info.sex <span class="keyword">from</span> <span class="keyword">info</span>, extra_info <span class="keyword">where</span> <span class="keyword">info</span>.stu_num = extra_info.stu_id;</span><br></pre></td></tr></table></figure><h4 id="导入导出"><a href="#导入导出" class="headerlink" title="导入导出"></a>导入导出</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">into</span> <span class="keyword">outfile</span> 文件地址 [控制格式] <span class="keyword">from</span> 表名;   <span class="comment">-- 导出表数据</span></span><br><span class="line"><span class="keyword">load</span> <span class="keyword">data</span> [<span class="keyword">local</span>] <span class="keyword">infile</span> 文件地址 [<span class="keyword">replace</span>|<span class="keyword">ignore</span>] <span class="keyword">into</span> <span class="keyword">table</span> 表名 [控制格式]; <span class="comment">-- 导入数据</span></span><br><span class="line">    生成的数据默认的分隔符是制表符</span><br><span class="line">    local未指定，则数据文件必须在服务器上</span><br><span class="line">    <span class="keyword">replace</span> 和 <span class="keyword">ignore</span> 关键词控制对现有的唯一键记录的重复的处理</span><br><span class="line"><span class="comment">-- 控制格式</span></span><br><span class="line"><span class="keyword">fields</span>  控制字段格式</span><br><span class="line">默认：<span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'\t'</span> <span class="keyword">enclosed</span> <span class="keyword">by</span> <span class="string">''</span> <span class="keyword">escaped</span> <span class="keyword">by</span> <span class="string">'\\'</span></span><br><span class="line">    <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'string'</span>  <span class="comment">-- 终止</span></span><br><span class="line">    <span class="keyword">enclosed</span> <span class="keyword">by</span> <span class="string">'char'</span>      <span class="comment">-- 包裹</span></span><br><span class="line">    <span class="keyword">escaped</span> <span class="keyword">by</span> <span class="string">'char'</span>       <span class="comment">-- 转义</span></span><br><span class="line">    <span class="comment">-- 示例：</span></span><br><span class="line">        <span class="keyword">SELECT</span> a,b,a+b <span class="keyword">INTO</span> <span class="keyword">OUTFILE</span> <span class="string">'/tmp/result.text'</span></span><br><span class="line">        <span class="keyword">FIELDS</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="string">','</span> <span class="keyword">OPTIONALLY</span> <span class="keyword">ENCLOSED</span> <span class="keyword">BY</span> <span class="string">'"'</span></span><br><span class="line">        <span class="keyword">LINES</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="string">'\n'</span></span><br><span class="line">        <span class="keyword">FROM</span> test_table;</span><br><span class="line">lines   控制行格式</span><br><span class="line">默认：lines terminated by '\n'</span><br><span class="line">    terminated by 'string'  <span class="comment">-- 终止</span></span><br></pre></td></tr></table></figure><h4 id="INSERT"><a href="#INSERT" class="headerlink" title="INSERT"></a>INSERT</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>语句获得的数据可以用<span class="keyword">insert</span>插入。</span><br><span class="line"></span><br><span class="line">可以省略对列的指定，要求 <span class="keyword">values</span> () 括号内，提供给了按照列顺序出现的所有字段的值。</span><br><span class="line">    或者使用<span class="keyword">set</span>语法。</span><br><span class="line">    <span class="keyword">INSERT</span> <span class="keyword">INTO</span> tbl_name <span class="keyword">SET</span> <span class="keyword">field</span>=<span class="keyword">value</span>,...；</span><br><span class="line"></span><br><span class="line">可以一次性使用多个值，采用(), (), ();的形式。</span><br><span class="line">    <span class="keyword">INSERT</span> <span class="keyword">INTO</span> tbl_name <span class="keyword">VALUES</span> (), (), ();</span><br><span class="line"></span><br><span class="line">可以在列值指定时，使用表达式。</span><br><span class="line">    <span class="keyword">INSERT</span> <span class="keyword">INTO</span> tbl_name <span class="keyword">VALUES</span> (field_value, <span class="number">10</span>+<span class="number">10</span>, <span class="keyword">now</span>());</span><br><span class="line">可以使用一个特殊值 DEFAULT，表示该列使用默认值。</span><br><span class="line">    <span class="keyword">INSERT</span> <span class="keyword">INTO</span> tbl_name <span class="keyword">VALUES</span> (field_value, <span class="keyword">DEFAULT</span>);</span><br><span class="line"></span><br><span class="line">可以通过一个查询的结果，作为需要插入的值。</span><br><span class="line">    <span class="keyword">INSERT</span> <span class="keyword">INTO</span> tbl_name <span class="keyword">SELECT</span> ...;</span><br><span class="line"></span><br><span class="line">可以指定在插入的值出现主键（或唯一索引）冲突时，更新其他非主键列的信息。</span><br><span class="line">    <span class="keyword">INSERT</span> <span class="keyword">INTO</span> tbl_name <span class="keyword">VALUES</span>/<span class="keyword">SET</span>/<span class="keyword">SELECT</span> <span class="keyword">ON</span> <span class="keyword">DUPLICATE</span> <span class="keyword">KEY</span> <span class="keyword">UPDATE</span> 字段=值, …;</span><br></pre></td></tr></table></figure><h4 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> tbl_name [<span class="keyword">WHERE</span> where_definition] [<span class="keyword">ORDER</span> <span class="keyword">BY</span> ...] [<span class="keyword">LIMIT</span> <span class="keyword">row_count</span>]</span><br><span class="line">按照条件删除。<span class="keyword">where</span></span><br><span class="line">指定删除的最多记录数。<span class="keyword">limit</span></span><br><span class="line">可以通过排序条件删除。<span class="keyword">order</span> <span class="keyword">by</span> + <span class="keyword">limit</span></span><br><span class="line">支持多表删除，使用类似连接语法。</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 需要删除数据多表<span class="number">1</span>，表<span class="number">2</span> <span class="keyword">using</span> 表连接操作 条件。</span><br></pre></td></tr></table></figure><h4 id="TRUNCATE"><a href="#TRUNCATE" class="headerlink" title="TRUNCATE"></a>TRUNCATE</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> [<span class="keyword">TABLE</span>] tbl_name</span><br><span class="line">清空数据</span><br><span class="line">删除重建表</span><br><span class="line"></span><br><span class="line">区别：</span><br><span class="line"><span class="number">1</span>，<span class="keyword">truncate</span> 是删除表再创建，<span class="keyword">delete</span> 是逐条删除</span><br><span class="line"><span class="number">2</span>，<span class="keyword">truncate</span> 重置auto_increment的值。而<span class="keyword">delete</span>不会</span><br><span class="line"><span class="number">3</span>，<span class="keyword">truncate</span> 不知道删除了几条，而<span class="keyword">delete</span>知道。</span><br><span class="line"><span class="number">4</span>，当被用于带分区的表时，<span class="keyword">truncate</span> 会保留分区</span><br></pre></td></tr></table></figure><h4 id="备份与还原"><a href="#备份与还原" class="headerlink" title="备份与还原"></a>备份与还原</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">备份，将数据的结构与表内数据保存起来。</span><br><span class="line">利用 mysqldump 指令完成。</span><br><span class="line"><span class="comment">-- 导出</span></span><br><span class="line">mysqldump [<span class="keyword">options</span>] db_name [<span class="keyword">tables</span>]</span><br><span class="line">mysqldump [<span class="keyword">options</span>] <span class="comment">---database DB1 [DB2 DB3...]</span></span><br><span class="line">mysqldump [<span class="keyword">options</span>] <span class="comment">--all--database</span></span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 导出一张表</span><br><span class="line">　　mysqldump -u用户名 -p密码 库名 表名 &gt; 文件名(D:/a.<span class="keyword">sql</span>)</span><br><span class="line"><span class="number">2.</span> 导出多张表</span><br><span class="line">　　mysqldump -u用户名 -p密码 库名 表<span class="number">1</span> 表<span class="number">2</span> 表<span class="number">3</span> &gt; 文件名(D:/a.<span class="keyword">sql</span>)</span><br><span class="line"><span class="number">3.</span> 导出所有表</span><br><span class="line">　　mysqldump -u用户名 -p密码 库名 &gt; 文件名(D:/a.<span class="keyword">sql</span>)</span><br><span class="line"><span class="number">4.</span> 导出一个库</span><br><span class="line">　　mysqldump -u用户名 -p密码 <span class="comment">--lock-all-tables --database 库名 &gt; 文件名(D:/a.sql)</span></span><br><span class="line"></span><br><span class="line">可以-w携带<span class="keyword">WHERE</span>条件</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 导入</span></span><br><span class="line"><span class="number">1.</span> 在登录mysql的情况下：</span><br><span class="line">　　source  备份文件</span><br><span class="line"><span class="number">2.</span> 在不登录的情况下</span><br><span class="line">　　mysql -u用户名 -p密码 库名 &lt; 备份文件</span><br></pre></td></tr></table></figure><h4 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">什么是视图：</span><br><span class="line">    视图是一个虚拟表，其内容由查询定义。同真实的表一样，视图包含一系列带有名称的列和行数据。但是，视图并不在数据库中以存储的数据值集形式存在。行和列数据来自由定义视图的查询所引用的表，并且在引用视图时动态生成。</span><br><span class="line">    视图具有表结构文件，但不存在数据文件。</span><br><span class="line">    对其中所引用的基础表来说，视图的作用类似于筛选。定义视图的筛选可以来自当前或其它数据库的一个或多个表，或者其它视图。通过视图进行查询没有任何限制，通过它们进行数据修改时的限制也很少。</span><br><span class="line">    视图是存储在数据库中的查询的sql语句，它主要出于两种原因：安全原因，视图可以隐藏一些数据，如：社会保险基金表，可以用视图只显示姓名，地址，而不显示社会保险号和工资数等，另一原因是可使复杂的查询易于理解和使用。</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建视图</span></span><br><span class="line"><span class="keyword">CREATE</span> [<span class="keyword">OR</span> <span class="keyword">REPLACE</span>] [ALGORITHM = &#123;UNDEFINED | <span class="keyword">MERGE</span> | TEMPTABLE&#125;] <span class="keyword">VIEW</span> view_name [(column_list)] <span class="keyword">AS</span> select_statement</span><br><span class="line">    - 视图名必须唯一，同时不能与表重名。</span><br><span class="line">    - 视图可以使用<span class="keyword">select</span>语句查询到的列名，也可以自己指定相应的列名。</span><br><span class="line">    - 可以指定视图执行的算法，通过ALGORITHM指定。</span><br><span class="line">    - column_list如果存在，则数目必须等于<span class="keyword">SELECT</span>语句检索的列数</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看结构</span></span><br><span class="line">    <span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">VIEW</span> view_name</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除视图</span></span><br><span class="line">    - 删除视图后，数据依然存在。</span><br><span class="line">    - 可同时删除多个视图。</span><br><span class="line">    <span class="keyword">DROP</span> <span class="keyword">VIEW</span> [<span class="keyword">IF</span> <span class="keyword">EXISTS</span>] view_name ...</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改视图结构</span></span><br><span class="line">    - 一般不修改视图，因为不是所有的更新视图都会映射到表上。</span><br><span class="line">    <span class="keyword">ALTER</span> <span class="keyword">VIEW</span> view_name [(column_list)] <span class="keyword">AS</span> select_statement</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 视图作用</span></span><br><span class="line">    <span class="number">1.</span> 简化业务逻辑</span><br><span class="line">    <span class="number">2.</span> 对客户端隐藏真实的表结构</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 视图算法(ALGORITHM)</span></span><br><span class="line">    <span class="keyword">MERGE</span>       合并</span><br><span class="line">        将视图的查询语句，与外部查询需要先合并再执行！</span><br><span class="line">    TEMPTABLE   临时表</span><br><span class="line">        将视图执行完毕后，形成临时表，再做外层查询！</span><br><span class="line">    UNDEFINED   未定义(默认)，指的是MySQL自主去选择相应的算法。</span><br></pre></td></tr></table></figure><h4 id="事务-transaction"><a href="#事务-transaction" class="headerlink" title="事务(transaction)"></a>事务(transaction)</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">事务是指逻辑上的一组操作，组成这组操作的各个单元，要不全成功要不全失败。</span><br><span class="line">    - 支持连续SQL的集体成功或集体撤销。</span><br><span class="line">    - 事务是数据库在数据晚自习方面的一个功能。</span><br><span class="line">    - 需要利用 InnoDB 或 BDB 存储引擎，对自动提交的特性支持完成。</span><br><span class="line">    - InnoDB被称为事务安全型引擎。</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 事务开启</span></span><br><span class="line">    <span class="keyword">START</span> <span class="keyword">TRANSACTION</span>; 或者 <span class="keyword">BEGIN</span>;</span><br><span class="line">    开启事务后，所有被执行的SQL语句均被认作当前事务内的SQL语句。</span><br><span class="line"><span class="comment">-- 事务提交</span></span><br><span class="line">    <span class="keyword">COMMIT</span>;</span><br><span class="line"><span class="comment">-- 事务回滚</span></span><br><span class="line">    <span class="keyword">ROLLBACK</span>;</span><br><span class="line">    如果部分操作发生问题，映射到事务开启前。</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 事务的特性</span></span><br><span class="line">    1. 原子性（Atomicity）</span><br><span class="line">        事务是一个不可分割的工作单位，事务中的操作要么都发生，要么都不发生。</span><br><span class="line">    2. 一致性（Consistency）</span><br><span class="line">        事务前后数据的完整性必须保持一致。</span><br><span class="line">        - 事务开始和结束时，外部数据一致</span><br><span class="line">        - 在整个事务过程中，操作是连续的</span><br><span class="line">    3. 隔离性（Isolation）</span><br><span class="line">        多个用户并发访问数据库时，一个用户的事务不能被其它用户的事物所干扰，多个并发事务之间的数据要相互隔离。</span><br><span class="line">    4. 持久性（Durability）</span><br><span class="line">        一个事务一旦被提交，它对数据库中的数据改变就是永久性的。</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 事务的实现</span></span><br><span class="line">    1. 要求是事务支持的表类型</span><br><span class="line">    2. 执行一组相关的操作前开启事务</span><br><span class="line">    3. 整组操作完成后，都成功，则提交；如果存在失败，选择回滚，则会回到事务开始的备份点。</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 事务的原理</span></span><br><span class="line">    利用InnoDB的自动提交(autocommit)特性完成。</span><br><span class="line">    普通的MySQL执行语句后，当前的数据提交操作均可被其他客户端可见。</span><br><span class="line">    而事务是暂时关闭“自动提交”机制，需要<span class="keyword">commit</span>提交持久化数据操作。</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 注意</span></span><br><span class="line">    <span class="number">1.</span> 数据定义语言（<span class="keyword">DDL</span>）语句不能被回滚，比如创建或取消数据库的语句，和创建、取消或更改表或存储的子程序的语句。</span><br><span class="line">    <span class="number">2.</span> 事务不能被嵌套</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 保存点</span></span><br><span class="line">    <span class="keyword">SAVEPOINT</span> 保存点名称 <span class="comment">-- 设置一个事务保存点</span></span><br><span class="line">    <span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> <span class="keyword">SAVEPOINT</span> 保存点名称 <span class="comment">-- 回滚到保存点</span></span><br><span class="line">    <span class="keyword">RELEASE</span> <span class="keyword">SAVEPOINT</span> 保存点名称 <span class="comment">-- 删除保存点</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- InnoDB自动提交特性设置</span></span><br><span class="line">    <span class="keyword">SET</span> autocommit = <span class="number">0</span>|<span class="number">1</span>;   0表示关闭自动提交，1表示开启自动提交。</span><br><span class="line">    - 如果关闭了，那普通操作的结果对其他客户端也不可见，需要<span class="keyword">commit</span>提交后才能持久化数据操作。</span><br><span class="line">    - 也可以关闭自动提交来开启事务。但与<span class="keyword">START</span> <span class="keyword">TRANSACTION</span>不同的是，</span><br><span class="line">        <span class="keyword">SET</span> autocommit是永久改变服务器的设置，直到下次再次修改该设置。(针对当前连接)</span><br><span class="line">        而<span class="keyword">START</span> <span class="keyword">TRANSACTION</span>记录开启前的状态，而一旦事务提交或回滚后就需要再次开启事务。(针对当前事务)</span><br></pre></td></tr></table></figure><h4 id="锁表"><a href="#锁表" class="headerlink" title="锁表"></a>锁表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">表锁定只用于防止其它客户端进行不正当地读取和写入</span><br><span class="line">MyISAM 支持表锁，InnoDB 支持行锁</span><br><span class="line"><span class="comment">-- 锁定</span></span><br><span class="line">    <span class="keyword">LOCK</span> <span class="keyword">TABLES</span> tbl_name [<span class="keyword">AS</span> <span class="keyword">alias</span>]</span><br><span class="line"><span class="comment">-- 解锁</span></span><br><span class="line">    <span class="keyword">UNLOCK</span> <span class="keyword">TABLES</span></span><br></pre></td></tr></table></figure><h4 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">触发程序是与表有关的命名数据库对象，当该表出现特定事件时，将激活该对象</span><br><span class="line">    监听：记录的增加、修改、删除。</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建触发器</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> trigger_name trigger_time trigger_event <span class="keyword">ON</span> tbl_name <span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="keyword">ROW</span> trigger_stmt</span><br><span class="line">    参数：</span><br><span class="line">    trigger_time是触发程序的动作时间。它可以是 <span class="keyword">before</span> 或 <span class="keyword">after</span>，以指明触发程序是在激活它的语句之前或之后触发。</span><br><span class="line">    trigger_event指明了激活触发程序的语句的类型</span><br><span class="line">        <span class="keyword">INSERT</span>：将新行插入表时激活触发程序</span><br><span class="line">        <span class="keyword">UPDATE</span>：更改某一行时激活触发程序</span><br><span class="line">        <span class="keyword">DELETE</span>：从表中删除某一行时激活触发程序</span><br><span class="line">    tbl_name：监听的表，必须是永久性的表，不能将触发程序与<span class="keyword">TEMPORARY</span>表或视图关联起来。</span><br><span class="line">    trigger_stmt：当触发程序激活时执行的语句。执行多个语句，可使用BEGIN...END复合语句结构</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> [schema_name.]trigger_name</span><br><span class="line"></span><br><span class="line">可以使用<span class="keyword">old</span>和<span class="keyword">new</span>代替旧的和新的数据</span><br><span class="line">    更新操作，更新前是<span class="keyword">old</span>，更新后是new.</span><br><span class="line">    删除操作，只有old.</span><br><span class="line">    增加操作，只有new.</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 注意</span></span><br><span class="line">    <span class="number">1.</span> 对于具有相同触发程序动作时间和事件的给定表，不能有两个触发程序。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 字符连接函数</span></span><br><span class="line"><span class="keyword">concat</span>(str1,str2,...])</span><br><span class="line"><span class="keyword">concat_ws</span>(separator,str1,str2,...)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 分支语句</span></span><br><span class="line"><span class="keyword">if</span> 条件 <span class="keyword">then</span></span><br><span class="line">    执行语句</span><br><span class="line">elseif 条件 <span class="keyword">then</span></span><br><span class="line">    执行语句</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    执行语句</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改最外层语句结束符</span></span><br><span class="line">delimiter 自定义结束符号</span><br><span class="line">    SQL语句</span><br><span class="line">自定义结束符号</span><br><span class="line"></span><br><span class="line">delimiter ;     <span class="comment">-- 修改回原来的分号</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 语句块包裹</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    语句块</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 特殊的执行</span></span><br><span class="line"><span class="number">1.</span> 只要添加记录，就会触发程序。</span><br><span class="line"><span class="number">2.</span> <span class="keyword">Insert</span> <span class="keyword">into</span> <span class="keyword">on</span> <span class="keyword">duplicate</span> <span class="keyword">key</span> <span class="keyword">update</span> 语法会触发：</span><br><span class="line">    如果没有重复记录，会触发 <span class="keyword">before</span> <span class="keyword">insert</span>, <span class="keyword">after</span> <span class="keyword">insert</span>;</span><br><span class="line">    如果有重复记录并更新，会触发 before <span class="keyword">insert</span>, <span class="keyword">before</span> <span class="keyword">update</span>, <span class="keyword">after</span> <span class="keyword">update</span>;</span><br><span class="line">    如果有重复记录但是没有发生更新，则触发 before <span class="keyword">insert</span>, <span class="keyword">before</span> <span class="keyword">update</span></span><br><span class="line"><span class="number">3.</span> <span class="keyword">Replace</span> 语法 如果有记录，则执行 <span class="keyword">before</span> <span class="keyword">insert</span>, <span class="keyword">before</span> <span class="keyword">delete</span>, <span class="keyword">after</span> <span class="keyword">delete</span>, <span class="keyword">after</span> <span class="keyword">insert</span></span><br></pre></td></tr></table></figure><h4 id="SQL编程"><a href="#SQL编程" class="headerlink" title="SQL编程"></a>SQL编程</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--// 局部变量 ----------</span></span><br><span class="line"><span class="comment">-- 变量声明</span></span><br><span class="line">    <span class="keyword">declare</span> var_name[,...] <span class="keyword">type</span> [<span class="keyword">default</span> <span class="keyword">value</span>]</span><br><span class="line">    这个语句被用来声明局部变量。要给变量提供一个默认值，请包含一个<span class="keyword">default</span>子句。值可以被指定为一个表达式，不需要为一个常数。如果没有<span class="keyword">default</span>子句，初始值为<span class="literal">null</span>。</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 赋值</span></span><br><span class="line">    使用 <span class="keyword">set</span> 和 <span class="keyword">select</span> <span class="keyword">into</span> 语句为变量赋值。</span><br><span class="line"></span><br><span class="line">    - 注意：在函数内是可以使用全局变量（用户自定义的变量）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--// 全局变量 ----------</span></span><br><span class="line"><span class="comment">-- 定义、赋值</span></span><br><span class="line"><span class="keyword">set</span> 语句可以定义并为变量赋值。</span><br><span class="line"><span class="keyword">set</span> @<span class="keyword">var</span> = <span class="keyword">value</span>;</span><br><span class="line">也可以使用<span class="keyword">select</span> <span class="keyword">into</span>语句为变量初始化并赋值。这样要求<span class="keyword">select</span>语句只能返回一行，但是可以是多个字段，就意味着同时为多个变量进行赋值，变量的数量需要与查询的列数一致。</span><br><span class="line">还可以把赋值语句看作一个表达式，通过<span class="keyword">select</span>执行完成。此时为了避免=被当作关系运算符看待，使用:=代替。（<span class="keyword">set</span>语句可以使用= 和 :=）。</span><br><span class="line"><span class="keyword">select</span> @<span class="keyword">var</span>:=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">select</span> @v1:=<span class="keyword">id</span>, @v2=<span class="keyword">name</span> <span class="keyword">from</span> t1 <span class="keyword">limit</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tbl_name <span class="keyword">where</span> @<span class="keyword">var</span>:=<span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">into</span> 可以将表中查询获得的数据赋给变量。</span><br><span class="line">    -| <span class="keyword">select</span> <span class="keyword">max</span>(height) <span class="keyword">into</span> @max_height <span class="keyword">from</span> tb;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 自定义变量名</span></span><br><span class="line">为了避免<span class="keyword">select</span>语句中，用户自定义的变量与系统标识符（通常是字段名）冲突，用户自定义变量在变量名前使用@作为开始符号。</span><br><span class="line">@<span class="keyword">var</span>=<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    - 变量被定义后，在整个会话周期都有效（登录到退出）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--// 控制结构 ----------</span></span><br><span class="line"><span class="comment">-- if语句</span></span><br><span class="line">if search_condition then</span><br><span class="line">    statement_list   </span><br><span class="line">[elseif search_condition then</span><br><span class="line">    statement_list]</span><br><span class="line">...</span><br><span class="line">[else</span><br><span class="line">    statement_list]</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- case语句</span></span><br><span class="line">CASE value WHEN [compare-value] THEN result</span><br><span class="line">[WHEN [compare-value] THEN result ...]</span><br><span class="line">[ELSE result]</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- while循环</span></span><br><span class="line">[begin_label:] <span class="keyword">while</span> search_condition <span class="keyword">do</span></span><br><span class="line">    statement_list</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">while</span> [end_label];</span><br><span class="line"></span><br><span class="line">- 如果需要在循环内提前终止 while循环，则需要使用标签；标签需要成对出现。</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 退出循环</span></span><br><span class="line">        退出整个循环 leave</span><br><span class="line">        退出当前循环 iterate</span><br><span class="line">        通过退出的标签决定退出哪个循环</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--// 内置函数 ----------</span></span><br><span class="line"><span class="comment">-- 数值函数</span></span><br><span class="line">abs(x)          <span class="comment">-- 绝对值 abs(-10.9) = 10</span></span><br><span class="line">format(x, d)    <span class="comment">-- 格式化千分位数值 format(1234567.456, 2) = 1,234,567.46</span></span><br><span class="line">ceil(x)         <span class="comment">-- 向上取整 ceil(10.1) = 11</span></span><br><span class="line">floor(x)        <span class="comment">-- 向下取整 floor (10.1) = 10</span></span><br><span class="line">round(x)        <span class="comment">-- 四舍五入去整</span></span><br><span class="line">mod(m, n)       <span class="comment">-- m%n m mod n 求余 10%3=1</span></span><br><span class="line">pi()            <span class="comment">-- 获得圆周率</span></span><br><span class="line">pow(m, n)       <span class="comment">-- m^n</span></span><br><span class="line">sqrt(x)         <span class="comment">-- 算术平方根</span></span><br><span class="line">rand()          <span class="comment">-- 随机数</span></span><br><span class="line"><span class="keyword">truncate</span>(x, d)  <span class="comment">-- 截取d位小数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 时间日期函数</span></span><br><span class="line"><span class="keyword">now</span>(), <span class="keyword">current_timestamp</span>();     <span class="comment">-- 当前日期时间</span></span><br><span class="line">current_date();                 <span class="comment">-- 当前日期</span></span><br><span class="line">current_time();                 <span class="comment">-- 当前时间</span></span><br><span class="line">date('yyyy-mm-dd hh:ii:ss');    <span class="comment">-- 获取日期部分</span></span><br><span class="line">time('yyyy-mm-dd hh:ii:ss');    <span class="comment">-- 获取时间部分</span></span><br><span class="line">date_format('yyyy-mm-dd hh:ii:ss', '%d %y %a %d %m %b %j'); <span class="comment">-- 格式化时间</span></span><br><span class="line">unix_timestamp();               <span class="comment">-- 获得unix时间戳</span></span><br><span class="line">from_unixtime();                <span class="comment">-- 从时间戳获得时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 字符串函数</span></span><br><span class="line">length(string)          <span class="comment">-- string长度，字节</span></span><br><span class="line">char_length(string)     <span class="comment">-- string的字符个数</span></span><br><span class="line">substring(str, position [,length])      <span class="comment">-- 从str的position开始,取length个字符</span></span><br><span class="line"><span class="keyword">replace</span>(<span class="keyword">str</span> ,search_str ,replace_str)   <span class="comment">-- 在str中用replace_str替换search_str</span></span><br><span class="line"><span class="keyword">instr</span>(<span class="keyword">string</span> ,<span class="keyword">substring</span>)    <span class="comment">-- 返回substring首次在string中出现的位置</span></span><br><span class="line"><span class="keyword">concat</span>(<span class="keyword">string</span> [,...])   <span class="comment">-- 连接字串</span></span><br><span class="line"><span class="keyword">charset</span>(<span class="keyword">str</span>)            <span class="comment">-- 返回字串字符集</span></span><br><span class="line"><span class="keyword">lcase</span>(<span class="keyword">string</span>)           <span class="comment">-- 转换成小写</span></span><br><span class="line"><span class="keyword">left</span>(<span class="keyword">string</span>, <span class="keyword">length</span>)    <span class="comment">-- 从string2中的左边起取length个字符</span></span><br><span class="line"><span class="keyword">load_file</span>(file_name)    <span class="comment">-- 从文件读取内容</span></span><br><span class="line"><span class="keyword">locate</span>(<span class="keyword">substring</span>, <span class="keyword">string</span> [,start_position]) <span class="comment">-- 同instr,但可指定开始位置</span></span><br><span class="line"><span class="keyword">lpad</span>(<span class="keyword">string</span>, <span class="keyword">length</span>, <span class="keyword">pad</span>)   <span class="comment">-- 重复用pad加在string开头,直到字串长度为length</span></span><br><span class="line"><span class="keyword">ltrim</span>(<span class="keyword">string</span>)           <span class="comment">-- 去除前端空格</span></span><br><span class="line"><span class="keyword">repeat</span>(<span class="keyword">string</span>, <span class="keyword">count</span>)   <span class="comment">-- 重复count次</span></span><br><span class="line">rpad(<span class="keyword">string</span>, <span class="keyword">length</span>, <span class="keyword">pad</span>)   <span class="comment">--在str后用pad补充,直到长度为length</span></span><br><span class="line"><span class="keyword">rtrim</span>(<span class="keyword">string</span>)           <span class="comment">-- 去除后端空格</span></span><br><span class="line"><span class="keyword">strcmp</span>(string1 ,string2)    <span class="comment">-- 逐字符比较两字串大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 流程函数</span></span><br><span class="line"><span class="keyword">case</span> <span class="keyword">when</span> [condition] <span class="keyword">then</span> <span class="keyword">result</span> [<span class="keyword">when</span> [condition] <span class="keyword">then</span> <span class="keyword">result</span> ...] [<span class="keyword">else</span> <span class="keyword">result</span>] <span class="keyword">end</span>   多分支</span><br><span class="line"><span class="keyword">if</span>(expr1,expr2,expr3)  双分支。</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 聚合函数</span></span><br><span class="line"><span class="keyword">count</span>()</span><br><span class="line"><span class="keyword">sum</span>();</span><br><span class="line">max();</span><br><span class="line">min();</span><br><span class="line">avg();</span><br><span class="line">group_concat()</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 其他常用函数</span></span><br><span class="line">md5();</span><br><span class="line">default();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--// 存储函数，自定义函数 ----------</span></span><br><span class="line"><span class="comment">-- 新建</span></span><br><span class="line">    <span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> function_name (参数列表) <span class="keyword">RETURNS</span> 返回值类型</span><br><span class="line">        函数体</span><br><span class="line"></span><br><span class="line">    - 函数名，应该合法的标识符，并且不应该与已有的关键字冲突。</span><br><span class="line">    - 一个函数应该属于某个数据库，可以使用db_name.funciton_name的形式执行当前函数所属数据库，否则为当前数据库。</span><br><span class="line">    - 参数部分，由<span class="string">"参数名"</span>和<span class="string">"参数类型"</span>组成。多个参数用逗号隔开。</span><br><span class="line">    - 函数体由多条可用的mysql语句，流程控制，变量声明等语句构成。</span><br><span class="line">    - 多条语句应该使用 begin...end 语句块包含。</span><br><span class="line">    - 一定要有 <span class="keyword">return</span> 返回值语句。</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除</span></span><br><span class="line">    <span class="keyword">DROP</span> <span class="keyword">FUNCTION</span> [<span class="keyword">IF</span> <span class="keyword">EXISTS</span>] function_name;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看</span></span><br><span class="line">    <span class="keyword">SHOW</span> <span class="keyword">FUNCTION</span> <span class="keyword">STATUS</span> <span class="keyword">LIKE</span> <span class="string">'partten'</span></span><br><span class="line">    <span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> function_name;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改</span></span><br><span class="line">    <span class="keyword">ALTER</span> <span class="keyword">FUNCTION</span> function_name 函数选项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--// 存储过程，自定义功能 ----------</span></span><br><span class="line"><span class="comment">-- 定义</span></span><br><span class="line">存储存储过程 是一段代码（过程），存储在数据库中的<span class="keyword">sql</span>组成。</span><br><span class="line">一个存储过程通常用于完成一段业务逻辑，例如报名，交班费，订单入库等。</span><br><span class="line">而一个函数通常专注与某个功能，视为其他程序服务的，需要在其他语句中调用函数才可以，而存储过程不能被其他调用，是自己执行 通过<span class="keyword">call</span>执行。</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> sp_name (参数列表)</span><br><span class="line">    过程体</span><br><span class="line"></span><br><span class="line">参数列表：不同于函数的参数列表，需要指明参数类型</span><br><span class="line"><span class="keyword">IN</span>，表示输入型</span><br><span class="line"><span class="keyword">OUT</span>，表示输出型</span><br><span class="line">INOUT，表示混合型</span><br><span class="line"></span><br><span class="line">注意，没有返回值。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 存储过程 */</span> <span class="comment">------------------</span></span><br><span class="line">存储过程是一段可执行性代码的集合。相比函数，更偏向于业务逻辑。</span><br><span class="line">调用：<span class="keyword">CALL</span> 过程名</span><br><span class="line"><span class="comment">-- 注意</span></span><br><span class="line">- 没有返回值。</span><br><span class="line">- 只能单独调用，不可夹杂在其他语句中</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 参数</span></span><br><span class="line"><span class="keyword">IN</span>|<span class="keyword">OUT</span>|INOUT 参数名 数据类型</span><br><span class="line"><span class="keyword">IN</span>      输入：在调用过程中，将数据输入到过程体内部的参数</span><br><span class="line"><span class="keyword">OUT</span>     输出：在调用过程中，将过程体处理完的结果返回到客户端</span><br><span class="line">INOUT   输入输出：既可输入，也可输出</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> 过程名 (参数列表)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    过程体</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h4 id="用户和权限管理"><a href="#用户和权限管理" class="headerlink" title="用户和权限管理"></a>用户和权限管理</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- root密码重置</span></span><br><span class="line">1. 停止MySQL服务</span><br><span class="line">2.  [Linux] /usr/local/mysql/bin/safe_mysqld <span class="comment">--skip-grant-tables &amp;</span></span><br><span class="line">    [Windows] mysqld <span class="comment">--skip-grant-tables</span></span><br><span class="line">3. <span class="keyword">use</span> mysql;</span><br><span class="line">4. <span class="keyword">UPDATE</span> <span class="string">`user`</span> <span class="keyword">SET</span> <span class="keyword">PASSWORD</span>=<span class="keyword">PASSWORD</span>(<span class="string">"密码"</span>) <span class="keyword">WHERE</span> <span class="string">`user`</span> = <span class="string">"root"</span>;</span><br><span class="line">5. <span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br><span class="line"></span><br><span class="line">用户信息表：mysql.user</span><br><span class="line"><span class="comment">-- 刷新权限</span></span><br><span class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br><span class="line"><span class="comment">-- 增加用户</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> 用户名 <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> [<span class="keyword">PASSWORD</span>] 密码(字符串)</span><br><span class="line">    - 必须拥有mysql数据库的全局<span class="keyword">CREATE</span> <span class="keyword">USER</span>权限，或拥有<span class="keyword">INSERT</span>权限。</span><br><span class="line">    - 只能创建用户，不能赋予权限。</span><br><span class="line">    - 用户名，注意引号：如 <span class="string">'user_name'</span>@<span class="string">'192.168.1.1'</span></span><br><span class="line">    - 密码也需引号，纯数字密码也要加引号</span><br><span class="line">    - 要在纯文本中指定密码，需忽略<span class="keyword">PASSWORD</span>关键词。要把密码指定为由<span class="keyword">PASSWORD</span>()函数返回的混编值，需包含关键字<span class="keyword">PASSWORD</span></span><br><span class="line"><span class="comment">-- 重命名用户</span></span><br><span class="line"><span class="keyword">RENAME</span> <span class="keyword">USER</span> old_user <span class="keyword">TO</span> new_user</span><br><span class="line"><span class="comment">-- 设置密码</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> = <span class="keyword">PASSWORD</span>(<span class="string">'密码'</span>)  <span class="comment">-- 为当前用户设置密码</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> <span class="keyword">FOR</span> 用户名 = <span class="keyword">PASSWORD</span>(<span class="string">'密码'</span>) <span class="comment">-- 为指定用户设置密码</span></span><br><span class="line"><span class="comment">-- 删除用户</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> 用户名</span><br><span class="line"><span class="comment">-- 分配权限/添加用户</span></span><br><span class="line"><span class="keyword">GRANT</span> 权限列表 <span class="keyword">ON</span> 表名 <span class="keyword">TO</span> 用户名 [<span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> [<span class="keyword">PASSWORD</span>] <span class="string">'password'</span>]</span><br><span class="line">    - <span class="keyword">all</span> <span class="keyword">privileges</span> 表示所有权限</span><br><span class="line">    - *.* 表示所有库的所有表</span><br><span class="line">    - 库名.表名 表示某库下面的某表</span><br><span class="line">    <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> <span class="string">`pms`</span>.* <span class="keyword">TO</span> <span class="string">'pms'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'pms0817'</span>;</span><br><span class="line"><span class="comment">-- 查看权限</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GRANTS</span> <span class="keyword">FOR</span> 用户名</span><br><span class="line">    <span class="comment">-- 查看当前用户权限</span></span><br><span class="line">    <span class="keyword">SHOW</span> <span class="keyword">GRANTS</span>; 或 <span class="keyword">SHOW</span> <span class="keyword">GRANTS</span> <span class="keyword">FOR</span> <span class="keyword">CURRENT_USER</span>; 或 <span class="keyword">SHOW</span> <span class="keyword">GRANTS</span> <span class="keyword">FOR</span> <span class="keyword">CURRENT_USER</span>();</span><br><span class="line"><span class="comment">-- 撤消权限</span></span><br><span class="line"><span class="keyword">REVOKE</span> 权限列表 <span class="keyword">ON</span> 表名 <span class="keyword">FROM</span> 用户名</span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span>, <span class="keyword">GRANT</span> <span class="keyword">OPTION</span> <span class="keyword">FROM</span> 用户名   <span class="comment">-- 撤销所有权限</span></span><br><span class="line"><span class="comment">-- 权限层级</span></span><br><span class="line"><span class="comment">-- 要使用GRANT或REVOKE，您必须拥有GRANT OPTION权限，并且您必须用于您正在授予或撤销的权限。</span></span><br><span class="line">全局层级：全局权限适用于一个给定服务器中的所有数据库，mysql.user</span><br><span class="line">    <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> *.*和 <span class="keyword">REVOKE</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> *.*只授予和撤销全局权限。</span><br><span class="line">数据库层级：数据库权限适用于一个给定数据库中的所有目标，mysql.db, mysql.host</span><br><span class="line">    <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> db_name.*和<span class="keyword">REVOKE</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> db_name.*只授予和撤销数据库权限。</span><br><span class="line">表层级：表权限适用于一个给定表中的所有列，mysql.talbes_priv</span><br><span class="line">    <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> db_name.tbl_name和<span class="keyword">REVOKE</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> db_name.tbl_name只授予和撤销表权限。</span><br><span class="line">列层级：列权限适用于一个给定表中的单一列，mysql.columns_priv</span><br><span class="line">    当使用<span class="keyword">REVOKE</span>时，您必须指定与被授权列相同的列。</span><br><span class="line"><span class="comment">-- 权限列表</span></span><br><span class="line"><span class="keyword">ALL</span> [<span class="keyword">PRIVILEGES</span>]    <span class="comment">-- 设置除GRANT OPTION之外的所有简单权限</span></span><br><span class="line"><span class="keyword">ALTER</span>   <span class="comment">-- 允许使用ALTER TABLE</span></span><br><span class="line"><span class="keyword">ALTER</span> ROUTINE   <span class="comment">-- 更改或取消已存储的子程序</span></span><br><span class="line"><span class="keyword">CREATE</span>  <span class="comment">-- 允许使用CREATE TABLE</span></span><br><span class="line"><span class="keyword">CREATE</span> ROUTINE  <span class="comment">-- 创建已存储的子程序</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TEMPORARY</span> <span class="keyword">TABLES</span>     <span class="comment">-- 允许使用CREATE TEMPORARY TABLE</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span>     <span class="comment">-- 允许使用CREATE USER, DROP USER, RENAME USER和REVOKE ALL PRIVILEGES。</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span>     <span class="comment">-- 允许使用CREATE VIEW</span></span><br><span class="line"><span class="keyword">DELETE</span>  <span class="comment">-- 允许使用DELETE</span></span><br><span class="line"><span class="keyword">DROP</span>    <span class="comment">-- 允许使用DROP TABLE</span></span><br><span class="line"><span class="keyword">EXECUTE</span>     <span class="comment">-- 允许用户运行已存储的子程序</span></span><br><span class="line"><span class="keyword">FILE</span>    <span class="comment">-- 允许使用SELECT...INTO OUTFILE和LOAD DATA INFILE</span></span><br><span class="line"><span class="keyword">INDEX</span>   <span class="comment">-- 允许使用CREATE INDEX和DROP INDEX</span></span><br><span class="line"><span class="keyword">INSERT</span>  <span class="comment">-- 允许使用INSERT</span></span><br><span class="line"><span class="keyword">LOCK</span> <span class="keyword">TABLES</span>     <span class="comment">-- 允许对您拥有SELECT权限的表使用LOCK TABLES</span></span><br><span class="line">PROCESS     <span class="comment">-- 允许使用SHOW FULL PROCESSLIST</span></span><br><span class="line"><span class="keyword">REFERENCES</span>  <span class="comment">-- 未被实施</span></span><br><span class="line">RELOAD  <span class="comment">-- 允许使用FLUSH</span></span><br><span class="line"><span class="keyword">REPLICATION</span> <span class="keyword">CLIENT</span>  <span class="comment">-- 允许用户询问从属服务器或主服务器的地址</span></span><br><span class="line"><span class="keyword">REPLICATION</span> <span class="keyword">SLAVE</span>   <span class="comment">-- 用于复制型从属服务器（从主服务器中读取二进制日志事件）</span></span><br><span class="line"><span class="keyword">SELECT</span>  <span class="comment">-- 允许使用SELECT</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">DATABASES</span>  <span class="comment">-- 显示所有数据库</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VIEW</span>   <span class="comment">-- 允许使用SHOW CREATE VIEW</span></span><br><span class="line"><span class="keyword">SHUTDOWN</span>    <span class="comment">-- 允许使用mysqladmin shutdown</span></span><br><span class="line">SUPER   <span class="comment">-- 允许使用CHANGE MASTER, KILL, PURGE MASTER LOGS和SET GLOBAL语句，mysqladmin debug命令；允许您连接（一次），即使已达到max_connections。</span></span><br><span class="line"><span class="keyword">UPDATE</span>  <span class="comment">-- 允许使用UPDATE</span></span><br><span class="line"><span class="keyword">USAGE</span>   <span class="comment">-- “无权限”的同义词</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">OPTION</span>    <span class="comment">-- 允许授予权限</span></span><br></pre></td></tr></table></figure><h4 id="表维护"><a href="#表维护" class="headerlink" title="表维护"></a>表维护</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 分析和存储表的关键字分布</span></span><br><span class="line"><span class="keyword">ANALYZE</span> [<span class="keyword">LOCAL</span> | <span class="keyword">NO_WRITE_TO_BINLOG</span>] <span class="keyword">TABLE</span> 表名 ...</span><br><span class="line"><span class="comment">-- 检查一个或多个表是否有错误</span></span><br><span class="line"><span class="keyword">CHECK</span> <span class="keyword">TABLE</span> tbl_name [, tbl_name] ... [<span class="keyword">option</span>] ...</span><br><span class="line"><span class="keyword">option</span> = &#123;<span class="keyword">QUICK</span> | <span class="keyword">FAST</span> | <span class="keyword">MEDIUM</span> | <span class="keyword">EXTENDED</span> | <span class="keyword">CHANGED</span>&#125;</span><br><span class="line"><span class="comment">-- 整理数据文件的碎片</span></span><br><span class="line"><span class="keyword">OPTIMIZE</span> [<span class="keyword">LOCAL</span> | <span class="keyword">NO_WRITE_TO_BINLOG</span>] <span class="keyword">TABLE</span> tbl_name [, tbl_name] ...</span><br></pre></td></tr></table></figure><h4 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h4><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 可用反引号（`）为标识符（库名、表名、字段名、索引、别名）包裹，以避免与关键字重名！中文也可以作为标识符！</span><br><span class="line"><span class="number">2.</span> 每个库目录存在一个保存当前数据库的选项文件db.opt。</span><br><span class="line"><span class="number">3.</span> 注释：</span><br><span class="line">    单行注释 # 注释内容</span><br><span class="line">    多行注释 <span class="comment">/* 注释内容 */</span></span><br><span class="line">    单行注释 -- 注释内容     (标准SQL注释风格，要求双破折号后加一空格符（空格、TAB、换行等）)</span><br><span class="line"><span class="number">4.</span> 模式通配符：</span><br><span class="line">    _   任意单个字符</span><br><span class="line">    %   任意多个字符，甚至包括零字符</span><br><span class="line">    单引号需要进行转义 \'</span><br><span class="line"><span class="number">5.</span> CMD命令行内的语句结束符可以为 <span class="string">";"</span>, <span class="string">"\G"</span>, <span class="string">"\g"</span>，仅影响显示结果。其他地方还是用分号结束。delimiter 可修改当前对话的语句结束符。</span><br><span class="line"><span class="number">6.</span> SQL对大小写不敏感</span><br><span class="line"><span class="number">7.</span> 清除已有语句：\c</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近学习mysql，发现一个很好的MySQL入门笔记总结，果断收藏，希望也能帮助到你，在此感谢作者。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&quot;https://shockerli.net/post/1000-line-mysql-note/&quot; ta
      
    
    </summary>
    
    
    
      <category term="mysql" scheme="http://sparkx.com.cn/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Jupyter Notebook 安装</title>
    <link href="http://sparkx.com.cn/tools/juptyer-install/"/>
    <id>http://sparkx.com.cn/tools/juptyer-install/</id>
    <published>2019-11-22T06:43:30.000Z</published>
    <updated>2019-12-09T13:48:28.894Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Jupyter-Notebook安装（windows）"><a href="#Jupyter-Notebook安装（windows）" class="headerlink" title="Jupyter Notebook安装（windows）"></a>Jupyter Notebook安装（windows）</h2><h4 id="1-工欲善其事必先利其器"><a href="#1-工欲善其事必先利其器" class="headerlink" title="1.工欲善其事必先利其器"></a>1.工欲善其事必先利其器</h4><p>学习Python的同学估计都知道Jupyter Notebook，那么它是一个什么东西呢？官方介绍如下：</p><blockquote><p>Jupyter Notebook是基于网页的用于交互计算的应用程序。其可被应用于全过程计算：开发、文档编写、运行代码和展示结果。——<a href="https://jupyter-notebook.readthedocs.io/en/stable/notebook.html" target="_blank" rel="noopener">Jupyter Notebook官方介绍</a></p></blockquote><p>简单的说，Jupyter Notebook是以网页的形式打开，可以在网页页面中直接编写代码和运行代码，代码的运行结果也会直接在代码块下显示。如在编程过程中需要编写说明文档，可在同一个页面中直接编写，便于作及时的说明和解释。</p><h4 id="2-Jupyter-Notebook的主要特点"><a href="#2-Jupyter-Notebook的主要特点" class="headerlink" title="2.Jupyter Notebook的主要特点"></a>2.Jupyter Notebook的主要特点</h4><ul><li>编程时具有语法高亮、缩进、tab补全的功能。</li><li>可直接通过浏览器运行代码，同时在代码块下方展示运行结果。</li><li>以富媒体格式展示计算结果。富媒体格式包括：HTML，LaTeX，PNG，SVG等。</li><li>对代码编写说明文档或语句时，支持Markdown语法。</li><li>支持使用LaTeX编写数学性说明。</li></ul><h4 id="3-Jupyter-Notebook安装"><a href="#3-Jupyter-Notebook安装" class="headerlink" title="3.Jupyter Notebook安装"></a>3.Jupyter Notebook安装</h4><p>安装Jupyter的前提条件是先安装<a href="https://www.anaconda.com/" target="_blank" rel="noopener">Anaconda</a>或者<a href="https://pypi.org/project/pip/" target="_blank" rel="noopener">pip</a>,Anaconda安装方法<a href="https://www.jianshu.com/p/62f155eb6ac5" target="_blank" rel="noopener">点击查看</a>.<br>安装好Anaconda后，我们用Anaconda来安装Jupyter，输入名<code>conda install -c conda-forge jupyterlab</code> ，等待执行结束即可。<br><code>win+R</code>输入<code>cmd</code>打开命令行窗口，执行命令<code>jupyter notebook</code>后，打开浏览器，在地址栏输入<code>localhost:8888</code>回车就可以看到jupyter notebook的工作界面了。</p><p>第一次运行不需要输入密码，界面中可能会显示很多内容，这个就不截图说明了。</p><h4 id="4-配置jupyter的工作目录"><a href="#4-配置jupyter的工作目录" class="headerlink" title="4.配置jupyter的工作目录"></a>4.配置jupyter的工作目录</h4><p>打开命令窗口（运行-&gt;cmd)输入<code>jupyter notebook --generate-config</code> 会在D:\Users\you.jupyter生成名为<code>jupyter_notebook_config.py</code>，打开该文件，找到#c.NotebookApp.notebook_dir = ‘’ 这行，将‘#’号删除，然后在后面输入你需要的目录，如我设置的：<code>c.NotebookApp.notebook_dir = &#39;D:\\jupyter-workspace&#39;</code>，</p><blockquote><p>注意:一定注意盘符后面是双’\’<br>打开命令窗口（运行-&gt;cmd)输入<code>jupyter notebook</code>，就发现默认的目录已经改了。<br><img src="https://note.youdao.com/yws/public/resource/072877d41da3a2e3641f5b0fe43f1b90/xmlnote/28EC9F947C0B4128B65C3B7F0C580FE6/63101" alt=""></p></blockquote><h4 id="5-配置启动脚本"><a href="#5-配置启动脚本" class="headerlink" title="5.配置启动脚本"></a>5.配置启动脚本</h4><p>每次打开jupyter是不是都要启动一次命令窗口？一个字“麻烦”,能不能做成快捷键方式的呢？答案是肯定的。<br>在桌面上创建<code>jupyterStart.txt</code>用文本编辑器打开，并输入如下代码:</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">C:</span><br><span class="line">cd C:<span class="symbol">\P</span>rogramData<span class="symbol">\A</span>naconda3<span class="symbol">\L</span>ib<span class="symbol">\s</span>ite-packages</span><br><span class="line">jupyter notebook</span><br></pre></td></tr></table></figure><p>保存文件后，将文件并重命名为<code>jupyterStart.bat</code>即可，之后使用时直接双击该文件就可以启动jupyter了。</p><h4 id="6-密码设置"><a href="#6-密码设置" class="headerlink" title="6.密码设置"></a>6.密码设置</h4><p>当第二次使用jupyter时会提示你输入密码登录，如下图：<br><img src="https://note.youdao.com/yws/public/resource/072877d41da3a2e3641f5b0fe43f1b90/xmlnote/328FBBABB67543FE8C3B5CD910E1DC5A/63100" alt=""><br>我们并没有设置密码，怎么让登录呢？这是jupyter开发环境的一种保护措施,下面让进行操作设置，你也可以<a href="https://jupyter-notebook.readthedocs.io/en/stable/public_server.html" target="_blank" rel="noopener">查看官网说明</a>。<br>打开命令窗口（运行-&gt;cmd)输入<code>jupyter notebook password</code>命令</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ jupyter notebook <span class="keyword">password</span></span><br><span class="line">Enter <span class="keyword">password</span>:  ****</span><br><span class="line">Verify <span class="keyword">password</span>: ****</span><br><span class="line">[NotebookPasswordApp] Wrote hashed <span class="keyword">password</span> <span class="keyword">to</span> /Users/you/.jupyter/jupyter_notebook_config.json</span><br></pre></td></tr></table></figure><p>会生成<code>D:\sers\you\.jupyter\jupyter_notebook_config.json</code>文件,文件内容就是加密后的密码，我输入的是:8888。<br>打开<code>D:\Users\you\.jupyter\jupyter_notebook_config.py</code>,配置<code>c.NotebookApp.password = u&#39;sha1:05644b3008d2:c8153b14d0268f0d19a6ddbe00cab1c95d8a6200&#39;</code>,即可。</p><blockquote><p>注意：等号后面有个u字母。</p></blockquote><p>然后再次点击<code>jupyterStart.bat</code>启动<code>jupyter</code>,浏览器地址栏输入<code>localhost:8888</code>，输入密码:8888，即可接入开发界面。<br><img src="https://note.youdao.com/yws/public/resource/072877d41da3a2e3641f5b0fe43f1b90/xmlnote/1F50F2EA49A746A6B549C9BAC0F9B981/63098" alt=""></p><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://note.youdao.com/yws/public/resource/072877d41da3a2e3641f5b0fe43f1b90/xmlnote/38EAEE5E01624AB5B8E233AA0CDA63E8/63099" alt="添加测试脚本执行的界面"></h2><p><strong>声明:</strong><br>作者:上海IT技术圈<br>本文版权归作者和上海IT技术圈共有，任何人或团体、机构全部转载或者部分转载、摘录，请在文章明显位置注明作者和原文链接。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Jupyter-Notebook安装（windows）&quot;&gt;&lt;a href=&quot;#Jupyter-Notebook安装（windows）&quot; class=&quot;headerlink&quot; title=&quot;Jupyter Notebook安装（windows）&quot;&gt;&lt;/a&gt;Jupyt
      
    
    </summary>
    
    
      <category term="tools" scheme="http://sparkx.com.cn/categories/tools/"/>
    
    
      <category term="工具" scheme="http://sparkx.com.cn/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>上海IT科技圈介绍</title>
    <link href="http://sparkx.com.cn/note/"/>
    <id>http://sparkx.com.cn/note/</id>
    <published>2019-11-22T01:55:43.000Z</published>
    <updated>2019-12-09T13:48:28.584Z</updated>
    
    <content type="html"><![CDATA[<p>上海IT技术圈专注实时计算、深度学习、人工智能、数据挖掘、算法等前沿实战，不定期分享平时工作中的经验总结，帮助工作中有需要的IT人！</p><h2 id="专栏官网"><a href="#专栏官网" class="headerlink" title="专栏官网"></a>专栏官网</h2><table><thead><tr><th align="left">实时计算</th><th align="left">数据库</th><th align="left">工具</th></tr></thead><tbody><tr><td align="left"><code>Spark</code><a href="http://spark.apache.org/" target="_blank" rel="noopener">点击进入官网</a></td><td align="left"><code>HBase</code><a href="http://hbase.apache.org/" target="_blank" rel="noopener">点击进入官网</a></td><td align="left"><code>Java</code><a href="https://www.java.com/zh_CN/" target="_blank" rel="noopener">点击进入官网</a></td></tr><tr><td align="left"><code>Flink</code><a href="https://flink.apache.org/" target="_blank" rel="noopener">点击进入官网</a></td><td align="left"><code>Hadoop</code><a href="http://hadoop.apache.org/" target="_blank" rel="noopener">点击进入官网</a></td><td align="left"><code>Scala</code><a href="https://scala-lang.org/" target="_blank" rel="noopener">点击进入官网</a></td></tr><tr><td align="left"><code>Storm</code><a href="http://storm.apache.org/" target="_blank" rel="noopener">点击进入官网</a></td><td align="left"><code>MySQL</code><a href="https://www.mysql.com/" target="_blank" rel="noopener">点击进入官网</a></td><td align="left"><code>Python</code><a href="https://www.python.org/" target="_blank" rel="noopener">点击进入官网</a></td></tr><tr><td align="left"></td><td align="left"><code>Redis</code><a href="https://redis.io/" target="_blank" rel="noopener"><code>官网</code></a> <a href="http://www.redis.cn/" target="_blank" rel="noopener"><code>中文官网</code></a></td><td align="left"></td></tr></tbody></table><h2 id="圈子专栏"><a href="#圈子专栏" class="headerlink" title="圈子专栏"></a>圈子专栏</h2><p>持续更新中,敬请期待……</p><h4 id="欢迎入群"><a href="#欢迎入群" class="headerlink" title="欢迎入群:"></a>欢迎入群:</h4><p>QQ群1:<a href="https://jq.qq.com/?_wv=1027&k=5JjTeVD" target="_blank" rel="noopener">221215857点击加入群聊</a><br>QQ群2:<a href="https://jq.qq.com/?_wv=1027&k=5KllGoe" target="_blank" rel="noopener">71655157点击加入群聊</a></p><h4 id="关注头条号"><a href="#关注头条号" class="headerlink" title="关注头条号"></a>关注头条号</h4><p><img src="/images/sh_it_tt_290.jpeg" alt="头条号二维码"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;上海IT技术圈专注实时计算、深度学习、人工智能、数据挖掘、算法等前沿实战，不定期分享平时工作中的经验总结，帮助工作中有需要的IT人！&lt;/p&gt;
&lt;h2 id=&quot;专栏官网&quot;&gt;&lt;a href=&quot;#专栏官网&quot; class=&quot;headerlink&quot; title=&quot;专栏官网&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
    
      <category term="about" scheme="http://sparkx.com.cn/categories/about/"/>
    
    
      <category term="other" scheme="http://sparkx.com.cn/tags/other/"/>
    
  </entry>
  
</feed>
